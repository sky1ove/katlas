[
  {
    "objectID": "hierarchical.html#distance",
    "href": "hierarchical.html#distance",
    "title": "Hierarchical clustering",
    "section": "Distance",
    "text": "Distance\n\npssms=Data.get_pspa_all_scale()\n\n\nsource\n\nget_1d_distance\n\n get_1d_distance (df, func_flat)\n\nCompute 1D distance for each row in a dataframe given a distance function\n\n# return 1d distance\nget_1d_distance(pssms.head(),js_divergence_flat)\n\n100%|███████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [00:00&lt;00:00, 481.41it/s]\n\n\narray([0.08286125, 0.08577978, 0.08798376, 0.08501009, 0.00215832,\n       0.07937984, 0.07066437, 0.08348296, 0.07361695, 0.0042525 ])\n\n\n\nsource\n\n\nget_1d_js\n\n get_1d_js (df)\n\nCompute 1D distance using JS divergence.\n\ndistance = get_1d_js(pssms.head(20))\n\n100%|█████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [00:00&lt;00:00, 116.00it/s]\n\n\nParallel computing to accelerate when flattened pssms are too many in a df:\n\nsource\n\n\nget_1d_distance_parallel\n\n get_1d_distance_parallel (df, func_flat, max_workers=4, chunksize=100)\n\nParallel compute 1D distance for each row in a dataframe given a distance function\nget_1d_distance_parallel(pssms.head(),js_divergence_flat)\n\nsource\n\n\nget_1d_js_parallel\n\n get_1d_js_parallel (df, func_flat=&lt;function js_divergence_flat&gt;,\n                     max_workers=4, chunksize=100)\n\nCompute 1D distance matrix using JS divergence.\nget_1d_js_parallel(pssms.head())\n\nsource\n\n\nget_Z\n\n get_Z (pssms, func_flat=&lt;function js_divergence_flat&gt;, parallel=True)\n\nGet linkage matrix Z from pssms dataframe\n\nZ = get_Z(pssms.head(10),parallel=False)\n\n100%|█████████████████████████████████████████████████████████████████████████████████████████████| 10/10 [00:00&lt;00:00, 229.95it/s]\n\n\n\nZ[:5]\n\narray([[1.00000000e+00, 2.00000000e+00, 2.15831816e-03, 2.00000000e+00],\n       [3.00000000e+00, 4.00000000e+00, 4.25249792e-03, 2.00000000e+00],\n       [5.00000000e+00, 1.10000000e+01, 4.65130779e-03, 3.00000000e+00],\n       [6.00000000e+00, 7.00000000e+00, 5.89059764e-03, 2.00000000e+00],\n       [1.00000000e+01, 1.30000000e+01, 9.31412253e-03, 4.00000000e+00]])\n\n\n\nsource\n\n\nplot_dendrogram\n\n plot_dendrogram (Z, color_thr=0.07, dense=7, line_width=1,\n                  title='Hierarchical Clustering Dendrogram', scale=1,\n                  **kwargs)\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nZ\n\n\n\n\n\ncolor_thr\nfloat\n0.07\n\n\n\ndense\nint\n7\nthe higher the more dense for each row\n\n\nline_width\nint\n1\n\n\n\ntitle\nstr\nHierarchical Clustering Dendrogram\n\n\n\nscale\nint\n1\n\n\n\nkwargs\nVAR_KEYWORD\n\n\n\n\n\n\nset_sns(100)\n\n\nplot_dendrogram(Z,dense=7,line_width=1)\n\n\n\n\n\n\n\n\n\nplot_dendrogram(Z,dense=4)\n\n\n\n\n\n\n\n\n\nsource\n\n\npssm_to_seq\n\n pssm_to_seq (pssm_df, thr=0.2, clean_center=True)\n\nRepresent PSSM in string sequence of amino acids\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\npssm_df\n\n\n\n\n\nthr\nfloat\n0.2\nthreshold of probability to show in sequence\n\n\nclean_center\nbool\nTrue\nif true, zero out non-last three values in position 0 (keep only s,t,y values at center)\n\n\n\n\npssm_df = recover_pssm(pssms.iloc[0])\n\n\npssm_to_seq(pssm_df,thr=0.1)\n\n'I..QKt*G...'\n\n\n\nsource\n\n\nget_pssm_seq_labels\n\n get_pssm_seq_labels (pssms, count_map=None, thr=0.3)\n\nUse index of pssms and the pssm to seq to represent pssm.\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\npssms\n\n\n\n\n\ncount_map\nNoneType\nNone\ndf index as key, counts as value\n\n\nthr\nfloat\n0.3\nthreshold of probability to show in sequence\n\n\n\n\nget_pssm_seq_labels(pssms.head(10))\n\n['AAK1: .....t*G...',\n 'ACVR2A: .....[t/s]*....',\n 'ACVR2B: .....[t/s]*....',\n 'AKT1: ..RR.[s/t]*....',\n 'AKT2: ..R..[s/t]*....',\n 'AKT3: ..RR.[s/t]*....',\n 'ALK2: .....[t/s]*....',\n 'ALK4: .....[t/s]*....',\n 'ALPHAK3: .....t*....',\n 'AMPKA1: .....[s/t]*....']\n\n\n\nimport random\n\n\n# get a dict of index and counts\n\ncount_dict = {idx:random.randint(1,100) for idx in pssms.head(10).index}\n\n\nlabels= get_pssm_seq_labels(pssms.head(10),count_dict)\nlabels\n\n['AAK1 (n=21): .....t*G...',\n 'ACVR2A (n=51): .....[t/s]*....',\n 'ACVR2B (n=98): .....[t/s]*....',\n 'AKT1 (n=45): ..RR.[s/t]*....',\n 'AKT2 (n=60): ..R..[s/t]*....',\n 'AKT3 (n=4): ..RR.[s/t]*....',\n 'ALK2 (n=79): .....[t/s]*....',\n 'ALK4 (n=26): .....[t/s]*....',\n 'ALPHAK3 (n=13): .....t*....',\n 'AMPKA1 (n=64): .....[s/t]*....']\n\n\n\nplot_dendrogram(Z,dense=4,labels=labels)",
    "crumbs": [
      "Modules",
      "Hierarchical clustering"
    ]
  },
  {
    "objectID": "hierarchical.html#full-pipeline",
    "href": "hierarchical.html#full-pipeline",
    "title": "Hierarchical clustering",
    "section": "Full pipeline",
    "text": "Full pipeline\n\n# get distance matrix\npssms=pssms.head(100)\n\nZ = get_Z(pssms)\n\n# optional, get counts for each index\n# count_dict = pssms.index.value_counts()\n\n# get pssm to seq labels with counts\n# labels= get_pssm_seq_labels(pssms,count_dict)\n\n# or get pssm to seq labels only\nlabels= get_pssm_seq_labels(pssms)\n\n\n\n\n\n# plot dendrogram\nplot_dendrogram(Z,dense=8,labels=labels,truncate_mode='lastp', p=40) # only show 40\n\n# save\n# save_pdf('dendrogram.pdf')",
    "crumbs": [
      "Modules",
      "Hierarchical clustering"
    ]
  },
  {
    "objectID": "hierarchical.html#end",
    "href": "hierarchical.html#end",
    "title": "Hierarchical clustering",
    "section": "End",
    "text": "End",
    "crumbs": [
      "Modules",
      "Hierarchical clustering"
    ]
  },
  {
    "objectID": "utils.html#common-funcs",
    "href": "utils.html#common-funcs",
    "title": "Utils",
    "section": "Common funcs",
    "text": "Common funcs\n\nsource\n\nprepare_path\n\n prepare_path (path)\n\nEnsure the parent directory exists and return the full file path.\npssm_df = get_prob(df_k,'site_seq')\nplot_logo_heatmap(pssm_df,title=f'{k} (n={len(df_k):,})',figsize=(17,10))\n# check if directory exist; if not, create one, then return the full path\npath1=prepare_path(f'fig/cddm/{k}/pssm_freq.svg')\nsave_show(path1,show_only=SHOW)\n\nsource\n\n\nget_diff\n\n get_diff (df1, df2, col1, col2=None)\n\nGet non-overlap parts of two dataframes.\n\ndf1 = pd.DataFrame({'gene': ['A', 'B', 'C']})\ndf2 = pd.DataFrame({'gene': ['B', 'C', 'D']})\n\ndf1_unq, df2_unq = get_diff(df1, df2, 'gene')\n\n\ndf1_unq\n\n\n\n\n\n\n\n\ngene\n\n\n\n\n0\nA\n\n\n\n\n\n\n\n\ndf2_unq\n\n\n\n\n\n\n\n\ngene\n\n\n\n\n2\nD",
    "crumbs": [
      "Modules",
      "Utils"
    ]
  },
  {
    "objectID": "utils.html#checker",
    "href": "utils.html#checker",
    "title": "Utils",
    "section": "Checker",
    "text": "Checker\nIn many phosphorylation datsets, there are amino acids in the site sequence that are in lower case but does not belong to s/t/y. Also, there are uncommon amino acids such as U or O that appear in the sequence. Therefore, it is essential to convert the sequence string for kinase ranking.\n\nsource\n\ncheck_seq\n\n check_seq (seq)\n\nConvert non-s/t/y characters to uppercase and replace disallowed characters with underscores.\n\ntry:\n    check_seq('aaadaaa')\nexcept Exception as e:\n    print(e)\n\naaadaaa has d at position 3; need to have one of 's', 't', or 'y' in the center\n\n\n\ncheck_seq('AAkUuPSFstTH') # if the center amino acid does not belong to sty/STY, will raise an error\n\n'AAK__PSFstTH'\n\n\n\nsource\n\n\ncheck_seqs\n\n check_seqs (data, col=None)\n\nConvert non-s/t/y to upper case & replace with underscore if the character is not in the allowed set\n\ndf=Data.get_human_site()\ncheck_seqs(df.head(),'site_seq')\n\n0    _MTVLEAVLEIQAITGSRLLsMVPGPARPPGSCWDPTQCTR\n1    QKSENEDDSEWEDVDDEKGDsNDDYDSAGLLsDEDCMSVPG\n2    EDVDDEKGDsNDDYDSAGLLsDEDCMSVPGKTHRAIADHLF\n3    EDCMSVPGKTHRAIADHLFWsEETKSRFTEYsMTssVMRRN\n4    RAIADHLFWsEETKSRFTEYsMTssVMRRNEQLTLHDERFE\nName: site_seq, dtype: object\n\n\n\ncheck_seqs(df['site_seq'].head())\n\n0    _MTVLEAVLEIQAITGSRLLsMVPGPARPPGSCWDPTQCTR\n1    QKSENEDDSEWEDVDDEKGDsNDDYDSAGLLsDEDCMSVPG\n2    EDVDDEKGDsNDDYDSAGLLsDEDCMSVPGKTHRAIADHLF\n3    EDCMSVPGKTHRAIADHLFWsEETKSRFTEYsMTssVMRRN\n4    RAIADHLFWsEETKSRFTEYsMTssVMRRNEQLTLHDERFE\nName: site_seq, dtype: object\n\n\n\nsource\n\n\nvalidate_site\n\n validate_site (site_info, seq)\n\nValidate site position residue match with site residue.\n\nsite='S610'\nseq = 'MSVPSSLSQSAINANSHGGPALSLPLPLHAAHNQLLNAKLQATAVGPKDLRSAMGEGGGPEPGPANAKWLKEGQNQLRRAATAHRDQNRNVTLTLAEEASQEPEMAPLGPKGLIHLYSELELSAHNAANRGLRGPGLIISTQEQGPDEGEEKAAGEAEEEEEDDDDEEEEEDLSSPPGLPEPLESVEAPPRPQALTDGPREHSKSASLLFGMRNSAASDEDSSWATLSQGSPSYGSPEDTDSFWNPNAFETDSDLPAGWMRVQDTSGTYYWHIPTGTTQWEPPGRASPSQGSSPQEESQLTWTGFAHGEGFEDGEFWKDEPSDEAPMELGLKEPEEGTLTFPAQSLSPEPLPQEEEKLPPRNTNPGIKCFAVRSLGWVEMTEEELAPGRSSVAVNNCIRQLSYHKNNLHDPMSGGWGEGKDLLLQLEDETLKLVEPQSQALLHAQPIISIRVWGVGRDSGRERDFAYVARDKLTQMLKCHVFRCEAPAKNIATSLHEICSKIMAERRNARCLVNGLSLDHSKLVDVPFQVEFPAPKNELVQKFQVYYLGNVPVAKPVGVDVINGALESVLSSSSREQWTPSHVSVAPATLTILHQQTEAVLGECRVRFLSFLAVGRDVHTFAFIMAAGPASFCCHMFWCEPNAASLSEAVQAACMLRYQKCLDARSQASTSCLPAPPAESVARRVGWTVRRGVQSLWGSLKPKRLGAHTP'\n\n\nvalidate_site(site,seq)\n\n1\n\n\n\nsource\n\n\nvalidate_site_df\n\n validate_site_df (df, site_info_col, protein_seq_col)\n\nValidate site position residue match with site residue in a dataframe.\n\nvalidate_site_df(df.head(),'site','substrate_sequence')\n\n0    1\n1    1\n2    1\n3    1\n4    1\ndtype: int64",
    "crumbs": [
      "Modules",
      "Utils"
    ]
  },
  {
    "objectID": "utils.html#phosphorylate-protein-seq",
    "href": "utils.html#phosphorylate-protein-seq",
    "title": "Utils",
    "section": "Phosphorylate protein seq",
    "text": "Phosphorylate protein seq\n\nsource\n\nphosphorylate_seq\n\n phosphorylate_seq (seq, *sites)\n\nPhosphorylate protein sequence based on phosphosites (e.g.,S140).\n\n\n\n\nType\nDetails\n\n\n\n\nseq\n\nfull protein sequence\n\n\nsites\nVAR_POSITIONAL\nsite info, e.g., S140\n\n\n\n\nseq = 'MSKSESPKEPEQLRKLFIGGLSFETTDESLRSHFEQWGTLTDCVVMRDPNTKRSRGFGFVTYATVEEVDAAMNARPHKVDGRVVEPKRAVSREDSQRPDAHLTVKKIFVGGIKEDTEEHHLRDYFEQYGKIEVIEIMTDRGSGKKRGFAFVTFDDHDSVDKIVIQKYHTVNGHNCEVRKALSKQEMASASSSQRGRSGSGNFGGGRGGGFGGNDNFGRGGNFSGRGGFGGSRGGGGYGGSGDGYNGFGNDGSNFGGGGSYNDFGNYNNQSSNFGPMKGGNFEGRSSGPHGGGGQYFAKPRNQGGYGGSSSSSSYGSGRRF'\nphosphorylate_seq(seq,*['S95', 'S22', 'T25', 'S6', 'S158'])\n\n'MSKSEsPKEPEQLRKLFIGGLsFEtTDESLRSHFEQWGTLTDCVVMRDPNTKRSRGFGFVTYATVEEVDAAMNARPHKVDGRVVEPKRAVSREDsQRPDAHLTVKKIFVGGIKEDTEEHHLRDYFEQYGKIEVIEIMTDRGSGKKRGFAFVTFDDHDsVDKIVIQKYHTVNGHNCEVRKALSKQEMASASSSQRGRSGSGNFGGGRGGGFGGNDNFGRGGNFSGRGGFGGSRGGGGYGGSGDGYNGFGNDGSNFGGGGSYNDFGNYNNQSSNFGPMKGGNFEGRSSGPHGGGGQYFAKPRNQGGYGGSSSSSSYGSGRRF'\n\n\n\nsource\n\n\nphosphorylate_seq_df\n\n phosphorylate_seq_df (df, id_col='substrate_uniprot',\n                       seq_col='substrate_sequence', site_col='site')\n\nPhosphorylate whole sequence based on phosphosites in a dataframe\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\n\n\n\n\n\nid_col\nstr\nsubstrate_uniprot\ncolumn of sequence ID\n\n\nseq_col\nstr\nsubstrate_sequence\ncolumn that contains protein sequence\n\n\nsite_col\nstr\nsite\ncolumn that contains site info, e.g., S140\n\n\n\n\ndf=Data.get_human_site()\ndf.head()\n\n\n\n\n\n\n\n\nsubstrate_uniprot\nsubstrate_genes\nsite\nsource\nAM_pathogenicity\nsubstrate_sequence\nsubstrate_species\nsub_site\nsubstrate_phosphoseq\nposition\nsite_seq\n\n\n\n\n0\nA0A024R4G9\nC19orf48 MGC13170 hCG_2008493\nS20\npsp\nNaN\nMTVLEAVLEIQAITGSRLLSMVPGPARPPGSCWDPTQCTRTWLLSH...\nHomo sapiens (Human)\nA0A024R4G9_S20\nMTVLEAVLEIQAITGSRLLsMVPGPARPPGSCWDPTQCTRTWLLSH...\n20\n_MTVLEAVLEIQAITGSRLLsMVPGPARPPGSCWDPTQCTR\n\n\n1\nA0A075B6Q4\nNone\nS24\nochoa\nNaN\nMDIQKSENEDDSEWEDVDDEKGDSNDDYDSAGLLSDEDCMSVPGKT...\nHomo sapiens (Human)\nA0A075B6Q4_S24\nMDIQKSENEDDSEWEDVDDEKGDsNDDYDSAGLLsDEDCMSVPGKT...\n24\nQKSENEDDSEWEDVDDEKGDsNDDYDSAGLLsDEDCMSVPG\n\n\n2\nA0A075B6Q4\nNone\nS35\nochoa\nNaN\nMDIQKSENEDDSEWEDVDDEKGDSNDDYDSAGLLSDEDCMSVPGKT...\nHomo sapiens (Human)\nA0A075B6Q4_S35\nMDIQKSENEDDSEWEDVDDEKGDsNDDYDSAGLLsDEDCMSVPGKT...\n35\nEDVDDEKGDsNDDYDSAGLLsDEDCMSVPGKTHRAIADHLF\n\n\n3\nA0A075B6Q4\nNone\nS57\nochoa\nNaN\nMDIQKSENEDDSEWEDVDDEKGDSNDDYDSAGLLSDEDCMSVPGKT...\nHomo sapiens (Human)\nA0A075B6Q4_S57\nMDIQKSENEDDSEWEDVDDEKGDsNDDYDSAGLLsDEDCMSVPGKT...\n57\nEDCMSVPGKTHRAIADHLFWsEETKSRFTEYsMTssVMRRN\n\n\n4\nA0A075B6Q4\nNone\nS68\nochoa\nNaN\nMDIQKSENEDDSEWEDVDDEKGDSNDDYDSAGLLSDEDCMSVPGKT...\nHomo sapiens (Human)\nA0A075B6Q4_S68\nMDIQKSENEDDSEWEDVDDEKGDsNDDYDSAGLLsDEDCMSVPGKT...\n68\nRAIADHLFWsEETKSRFTEYsMTssVMRRNEQLTLHDERFE\n\n\n\n\n\n\n\n\nphosphorylate_seq_df(df.head(100),'substrate_uniprot','substrate_sequence','site')\n\n\n\n\n\n\n\n\nsubstrate_uniprot\nsite\nsubstrate_sequence\nphosphoseq\n\n\n\n\n0\nA0A024R4G9\n[S20]\nMTVLEAVLEIQAITGSRLLSMVPGPARPPGSCWDPTQCTRTWLLSH...\nMTVLEAVLEIQAITGSRLLsMVPGPARPPGSCWDPTQCTRTWLLSH...\n\n\n1\nA0A075B6Q4\n[S24, S35, S57, S68, S71, S72]\nMDIQKSENEDDSEWEDVDDEKGDSNDDYDSAGLLSDEDCMSVPGKT...\nMDIQKSENEDDSEWEDVDDEKGDsNDDYDSAGLLsDEDCMSVPGKT...\n\n\n...\n...\n...\n...\n...\n\n\n22\nA0A0A6YYL6\n[S5, Y139, S141, S142]\nMVRYSLDPENPTKSCKSRGSNLRVHFKNTRETAQAIKGMHIRKATK...\nMVRYsLDPENPTKSCKSRGSNLRVHFKNTRETAQAIKGMHIRKATK...\n\n\n23\nA0A0B4J1R7\n[T6, S43, S45, S46]\nMMATGTPESQARFGQSVKGLLTEKVTTCGTDVIALTKQVLKGSRSS...\nMMATGtPESQARFGQSVKGLLTEKVTTCGTDVIALTKQVLKGsRss...\n\n\n\n\n24 rows × 4 columns",
    "crumbs": [
      "Modules",
      "Utils"
    ]
  },
  {
    "objectID": "utils.html#extract-site-seq",
    "href": "utils.html#extract-site-seq",
    "title": "Utils",
    "section": "Extract site seq",
    "text": "Extract site seq\n\nsource\n\nextract_site_seq\n\n extract_site_seq (df:pandas.core.frame.DataFrame, seq_col:str,\n                   site_col:str, n=7)\n\nExtract -n to +n site sequence from protein sequence\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\nDataFrame\n\ndataframe that contains protein sequence\n\n\nseq_col\nstr\n\ncolumn name of protein sequence\n\n\nsite_col\nstr\n\ncolumn name of site information (e.g., S10)\n\n\nn\nint\n7\nlength of surrounding sequence (default -7 to +7)\n\n\n\nAs some datasets only contains protein information and position of phosphorylation sites, but not phosphorylation site sequence, we can retreive protein sequence and use this function to get -7 to +7 phosphorylation site sequence (as numpy array).\nRemember to validate the phospho-acceptor at position 0 before extract the site sequence, as there could be mismatch due to the protein sequence database updates.\n\ndf.head()\n\n\n\n\n\n\n\n\nsubstrate_uniprot\nsubstrate_genes\nsite\nsource\nAM_pathogenicity\nsubstrate_sequence\nsubstrate_species\nsub_site\nsubstrate_phosphoseq\nposition\nsite_seq\n\n\n\n\n0\nA0A024R4G9\nC19orf48 MGC13170 hCG_2008493\nS20\npsp\nNaN\nMTVLEAVLEIQAITGSRLLSMVPGPARPPGSCWDPTQCTRTWLLSH...\nHomo sapiens (Human)\nA0A024R4G9_S20\nMTVLEAVLEIQAITGSRLLsMVPGPARPPGSCWDPTQCTRTWLLSH...\n20\n_MTVLEAVLEIQAITGSRLLsMVPGPARPPGSCWDPTQCTR\n\n\n1\nA0A075B6Q4\nNone\nS24\nochoa\nNaN\nMDIQKSENEDDSEWEDVDDEKGDSNDDYDSAGLLSDEDCMSVPGKT...\nHomo sapiens (Human)\nA0A075B6Q4_S24\nMDIQKSENEDDSEWEDVDDEKGDsNDDYDSAGLLsDEDCMSVPGKT...\n24\nQKSENEDDSEWEDVDDEKGDsNDDYDSAGLLsDEDCMSVPG\n\n\n2\nA0A075B6Q4\nNone\nS35\nochoa\nNaN\nMDIQKSENEDDSEWEDVDDEKGDSNDDYDSAGLLSDEDCMSVPGKT...\nHomo sapiens (Human)\nA0A075B6Q4_S35\nMDIQKSENEDDSEWEDVDDEKGDsNDDYDSAGLLsDEDCMSVPGKT...\n35\nEDVDDEKGDsNDDYDSAGLLsDEDCMSVPGKTHRAIADHLF\n\n\n3\nA0A075B6Q4\nNone\nS57\nochoa\nNaN\nMDIQKSENEDDSEWEDVDDEKGDSNDDYDSAGLLSDEDCMSVPGKT...\nHomo sapiens (Human)\nA0A075B6Q4_S57\nMDIQKSENEDDSEWEDVDDEKGDsNDDYDSAGLLsDEDCMSVPGKT...\n57\nEDCMSVPGKTHRAIADHLFWsEETKSRFTEYsMTssVMRRN\n\n\n4\nA0A075B6Q4\nNone\nS68\nochoa\nNaN\nMDIQKSENEDDSEWEDVDDEKGDSNDDYDSAGLLSDEDCMSVPGKT...\nHomo sapiens (Human)\nA0A075B6Q4_S68\nMDIQKSENEDDSEWEDVDDEKGDsNDDYDSAGLLsDEDCMSVPGKT...\n68\nRAIADHLFWsEETKSRFTEYsMTssVMRRNEQLTLHDERFE\n\n\n\n\n\n\n\n\nextract_site_seq(df.head(),\n                 seq_col='substrate_sequence',\n                 site_col='site',\n                 n=30\n                 )\n\n100%|██████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [00:00&lt;00:00, 9493.67it/s]\n\n\narray(['___________MTVLEAVLEIQAITGSRLLSMVPGPARPPGSCWDPTQCTRTWLLSHTPRR',\n       '_______MDIQKSENEDDSEWEDVDDEKGDSNDDYDSAGLLSDEDCMSVPGKTHRAIADHL',\n       'KSENEDDSEWEDVDDEKGDSNDDYDSAGLLSDEDCMSVPGKTHRAIADHLFWSEETKSRFT',\n       'DYDSAGLLSDEDCMSVPGKTHRAIADHLFWSEETKSRFTEYSMTSSVMRRNEQLTLHDERF',\n       'DCMSVPGKTHRAIADHLFWSEETKSRFTEYSMTSSVMRRNEQLTLHDERFEKFYEQYDDDE'],\n      dtype='&lt;U61')",
    "crumbs": [
      "Modules",
      "Utils"
    ]
  },
  {
    "objectID": "utils.html#alignment",
    "href": "utils.html#alignment",
    "title": "Utils",
    "section": "Alignment",
    "text": "Alignment\n\nsource\n\nget_fasta\n\n get_fasta (df, seq_col='kd_seq', id_col='kd_ID', path='out.fasta')\n\nGenerate fasta file from sequences.\nget_fasta(kd,seq_col='kd_seq',id_col='kd_ID',path='raw/kinase_domains.fasta')\nTo run clustalo alignment, can run either through terminal or the function\nsudo apt-get update\nsudo apt-get install clustalo\nclustalo -i kinase_domains.fasta -o kinase_domains.aln --force --outfmt=clu\n\nsource\n\n\nrun_clustalo\n\n run_clustalo (input_fasta, output_aln, outfmt='clu')\n\nRun Clustal Omega to perform multiple sequence alignment.\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ninput_fasta\n\n\n.fasta fname\n\n\noutput_aln\n\n\n.aln output fname\n\n\noutfmt\nstr\nclu\n\n\n\n\nrun_clustalo(\"kinase_domains.fasta\", \"raw/kinase_domains.aln\")\n\nsource\n\n\naln2df\n\n aln2df (fname)\n\ndf = aln2df(\"raw/kinase_domains.aln\")\n\nsource\n\n\nget_aln_freq\n\n get_aln_freq (df)\n\nGet frequency of each amino acid across each position from the aln2df output.\nfreq_df = get_aln_freq(df)",
    "crumbs": [
      "Modules",
      "Utils"
    ]
  },
  {
    "objectID": "utils.html#end",
    "href": "utils.html#end",
    "title": "Utils",
    "section": "End",
    "text": "End",
    "crumbs": [
      "Modules",
      "Utils"
    ]
  },
  {
    "objectID": "scoring.html",
    "href": "scoring.html",
    "title": "Scoring",
    "section": "",
    "text": "from katlas.score import *",
    "crumbs": [
      "Modules",
      "Scoring"
    ]
  },
  {
    "objectID": "scoring.html#setup",
    "href": "scoring.html#setup",
    "title": "Scoring",
    "section": "",
    "text": "from katlas.score import *",
    "crumbs": [
      "Modules",
      "Scoring"
    ]
  },
  {
    "objectID": "scoring.html#utils",
    "href": "scoring.html#utils",
    "title": "Scoring",
    "section": "Utils",
    "text": "Utils\n\nsource\n\ncut_seq\n\n cut_seq (input_string:str, min_position:int, max_position:int)\n\nExtract sequence based on a range relative to its center position\n\n\n\n\nType\nDetails\n\n\n\n\ninput_string\nstr\nsite sequence\n\n\nmin_position\nint\nminimum position relative to its center\n\n\nmax_position\nint\nmaximum position relative to its center\n\n\n\n\ncut_seq('AAkUuPSFSTtH',-5,4)\n\n'AkUuPSFSTt'\n\n\n\nsource\n\n\nSTY2sty\n\n STY2sty (input_string:str)\n\nReplace all ‘STY’ with ‘sty’ in a sequence\n\nSTY2sty('AAkUuPSFSTtH') # convert all capital STY to sty in a string\n\n'AAkUuPsFsttH'\n\n\n\nsource\n\n\nget_dict\n\n get_dict (input_string:str)\n\nGet a dictionary of input string; no need for the star in the middle; make sure it is 15 or 10 length\n\n\n\n\nType\nDetails\n\n\n\n\ninput_string\nstr\nphosphorylation site sequence\n\n\n\n\ncols = get_dict(\"PSVEPPLsQETFSDL\")\ncols\n\n['-7P',\n '-6S',\n '-5V',\n '-4E',\n '-3P',\n '-2P',\n '-1L',\n '0s',\n '1Q',\n '2E',\n '3T',\n '4F',\n '5S',\n '6D',\n '7L']",
    "crumbs": [
      "Modules",
      "Scoring"
    ]
  },
  {
    "objectID": "scoring.html#scoring-func",
    "href": "scoring.html#scoring-func",
    "title": "Scoring",
    "section": "Scoring func",
    "text": "Scoring func\n\nMultiply\n\nsource\n\n\nmultiply\n\n multiply (values, kinase=None, num_aa=23)\n\nMultiply the possibilities of the amino acids at each position in a phosphorylation site\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nvalues\n\n\nlist of values, possibilities of amino acids at certain positions\n\n\nkinase\nNoneType\nNone\n\n\n\nnum_aa\nint\n23\nnumber of amino acids, 23 for standard CDDM, 20 for all uppercase CDDM\n\n\n\n\\[\n\\text{Score} = \\log_2 \\left( \\frac{ \\prod P_{\\text{KinX}}(\\text{AA}, \\text{Position}) }{ \\left( \\frac{1}{\\#\\text{Random AA}} \\right)^{\\text{length(Position except 0)}} } \\right)\n\\]\nThe function implement formula from Johnson et al. Nature: An atlas of substrate specificities for the human serine/threonine kinome, Supplementary Note2 (page 160)\nMultiply class, consider the dynamics of scale factor\n\nsource\n\n\nmultiply_pspa\n\n multiply_pspa (values, kinase, num_aa_dict={'SYK': 18, 'PTK2': 18,\n                'ZAP70': 18, 'ERBB2': 18, 'CSK': 18, 'FGFR4': 18, 'EGFR':\n                18, 'ERBB4': 18, 'EPHA8': 18, 'EPHA7': 18, 'EPHA5': 18,\n                'EPHA2': 18, 'EPHB2': 18, 'EPHB1': 18, 'EPHB3': 18,\n                'EPHB4': 18, 'EPHA4': 18, 'EPHA3': 18, 'EPHA6': 18, 'FRK':\n                18, 'EPHA1': 18, 'TEC': 18, 'BTK': 18, 'ITK': 18, 'BMX':\n                18, 'TXK': 16, 'ABL2': 18, 'ABL1': 18, 'SRMS': 18,\n                'PTK2B': 18, 'FER': 18, 'MERTK': 18, 'AXL': 18, 'FES': 18,\n                'PTK6': 18, 'YES1': 18, 'FGR': 18, 'SRC': 18, 'FYN': 18,\n                'LCK': 18, 'BLK': 18, 'LYN': 18, 'HCK': 18, 'PDGFRB': 18,\n                'PDGFRA': 18, 'FLT3': 18, 'TYRO3': 18, 'ROS1': 18, 'TEK':\n                18, 'LTK': 18, 'ALK': 18, 'MUSK': 18, 'KIT': 18, 'CSF1R':\n                18, 'MET': 18, 'KDR': 18, 'RET': 18, 'MST1R': 16, 'JAK3':\n                16, 'FLT1': 16, 'MATK': 18, 'FGFR3': 18, 'FGFR2': 18,\n                'FGFR1': 18, 'FLT4': 18, 'INSR': 18, 'IGF1R': 18, 'INSRR':\n                16, 'NTRK3': 18, 'NTRK1': 18, 'NTRK2': 18, 'TNK1': 18,\n                'TNK2': 18, 'DDR2': 18, 'DDR1': 18, 'TYK2': 18, 'JAK2':\n                18, 'JAK1': 18, 'TNNI3K_TYR': 18, 'NEK10_TYR': 16,\n                'PINK1_TYR': 16, 'MAP2K7_TYR': 16, 'PKMYT1_TYR': 16,\n                'TESK1_TYR': 16, 'LIMK1_TYR': 16, 'LIMK2_TYR': 16,\n                'WEE1_TYR': 18, 'MAP2K6_TYR': 16, 'MAP2K4_TYR': 16,\n                'PDHK1_TYR': 16, 'BMPR2_TYR': 16, 'PDHK4_TYR': 16,\n                'PDHK3_TYR': 16, 'AAK1': 17, 'ACVR2A': 17, 'ACVR2B': 17,\n                'AKT1': 17, 'AKT2': 17, 'AKT3': 17, 'ALK2': 17, 'ALK4':\n                17, 'ALPHAK3': 17, 'AMPKA1': 17, 'AMPKA2': 17, 'ANKRD3':\n                17, 'ATM': 17, 'ATR': 17, 'AURA': 17, 'AURB': 17, 'AURC':\n                17, 'GRK2': 17, 'GRK3': 17, 'BCKDK': 17, 'BIKE': 17,\n                'BMPR1A': 17, 'BMPR1B': 17, 'BMPR2': 17, 'BRAF': 17,\n                'BRSK1': 17, 'BRSK2': 17, 'BUB1': 17, 'CAMK1A': 17,\n                'CAMK1B': 17, 'CAMK1D': 17, 'CAMK1G': 17, 'CAMK2A': 17,\n                'CAMK2B': 17, 'CAMK2D': 17, 'CAMK2G': 17, 'CAMK4': 17,\n                'CAMKK1': 17, 'CAMKK2': 17, 'CAMLCK': 17, 'CDK1': 17,\n                'CDC7': 17, 'CDK10': 17, 'CDK19': 17, 'CDK2': 17, 'CDK3':\n                17, 'CDK4': 17, 'CDK5': 17, 'CDK6': 17, 'CDK7': 17,\n                'CDK8': 17, 'CDK9': 17, 'CDKL1': 17, 'CDKL5': 17, 'CHAK1':\n                17, 'CHAK2': 17, 'CDK13': 17, 'CHK1': 17, 'CHK2': 17,\n                'CK1A': 17, 'CK1A2': 17, 'CK1D': 17, 'CK1E': 17, 'CK1G1':\n                17, 'CK1G2': 17, 'CK1G3': 17, 'CK2A1': 17, 'CK2A2': 17,\n                'CLK1': 17, 'CLK2': 17, 'CLK3': 17, 'CLK4': 17, 'COT': 17,\n                'CRIK': 17, 'CDK12': 17, 'DAPK1': 17, 'DAPK2': 17,\n                'DAPK3': 17, 'DCAMKL1': 17, 'DCAMKL2': 17, 'DLK': 17,\n                'DMPK1': 17, 'DNAPK': 17, 'DRAK1': 17, 'DYRK1A': 17,\n                'DYRK1B': 17, 'DYRK2': 17, 'DYRK3': 17, 'DYRK4': 17,\n                'ERK1': 17, 'ERK2': 17, 'ERK5': 17, 'ERK7': 17, 'MTOR':\n                17, 'GAK': 17, 'GCK': 17, 'GCN2': 17, 'GRK4': 17, 'GRK5':\n                17, 'GRK6': 17, 'GRK7': 17, 'GSK3A': 17, 'GSK3B': 17,\n                'HASPIN': 17, 'HGK': 17, 'HIPK1': 17, 'HIPK2': 17,\n                'HIPK3': 17, 'HIPK4': 17, 'HPK1': 17, 'HRI': 17, 'HUNK':\n                17, 'ICK': 17, 'IKKA': 17, 'IKKB': 17, 'IKKE': 17,\n                'IRAK1': 17, 'IRAK4': 17, 'IRE1': 17, 'IRE2': 17, 'JNK1':\n                17, 'JNK2': 17, 'JNK3': 17, 'KHS1': 17, 'KHS2': 17, 'KIS':\n                17, 'LATS1': 17, 'LATS2': 17, 'LKB1': 17, 'LOK': 17,\n                'LRRK2': 17, 'MAK': 17, 'MEK1': 17, 'MEK2': 17, 'MEK5':\n                17, 'MEKK1': 17, 'YSK4': 17, 'MEKK2': 17, 'MEKK3': 17,\n                'ASK1': 17, 'MEKK6': 17, 'MAP3K15': 17, 'MAPKAPK2': 17,\n                'MAPKAPK3': 17, 'MAPKAPK5': 17, 'MARK1': 17, 'MARK2': 17,\n                'MARK3': 17, 'MARK4': 17, 'MASTL': 17, 'MELK': 17, 'MINK':\n                17, 'MLK1': 17, 'MLK2': 17, 'MLK3': 17, 'MLK4': 17,\n                'MNK1': 17, 'MNK2': 17, 'MOK': 17, 'MOS': 17, 'MPSK1': 17,\n                'MRCKA': 17, 'MRCKB': 17, 'MSK1': 17, 'MSK2': 17, 'SRPK3':\n                17, 'MST1': 17, 'MST2': 17, 'MST3': 17, 'MST4': 17,\n                'MYO3A': 17, 'MYO3B': 17, 'NDR1': 17, 'NDR2': 17, 'NEK1':\n                17, 'NEK11': 17, 'NEK2': 17, 'NEK3': 17, 'NEK4': 17,\n                'NEK5': 17, 'NEK6': 17, 'NEK7': 17, 'NEK8': 17, 'NEK9':\n                17, 'NIK': 17, 'NIM1': 17, 'NLK': 17, 'NUAK1': 17,\n                'NUAK2': 17, 'OSR1': 17, 'P38A': 17, 'P38B': 17, 'P38D':\n                17, 'P38G': 17, 'P70S6K': 17, 'P70S6KB': 17, 'PAK1': 17,\n                'PAK2': 17, 'PAK3': 17, 'PAK4': 17, 'PAK5': 17, 'PAK6':\n                17, 'PASK': 17, 'PBK': 17, 'CDK16': 17, 'CDK17': 17,\n                'CDK18': 17, 'PDHK1': 16, 'PDHK4': 16, 'PDK1': 17, 'PERK':\n                17, 'CDK14': 17, 'PHKG1': 17, 'PHKG2': 17, 'PIM1': 17,\n                'PIM2': 17, 'PIM3': 17, 'PINK1': 17, 'PKACA': 17, 'PKACB':\n                17, 'PKACG': 17, 'PKCA': 17, 'PKCB': 17, 'PKCD': 17,\n                'PKCE': 17, 'PKCG': 17, 'PKCH': 17, 'PKCI': 17, 'PKCT':\n                17, 'PKCZ': 17, 'PRKD1': 17, 'PRKD2': 17, 'PRKD3': 17,\n                'PKG1': 17, 'PKG2': 17, 'PKN1': 17, 'PKN2': 17, 'PKN3':\n                17, 'PKR': 17, 'PLK1': 17, 'PLK2': 17, 'PLK3': 17, 'PLK4':\n                17, 'PRKX': 17, 'PRP4': 17, 'PRPK': 17, 'QIK': 17, 'QSK':\n                17, 'RAF1': 17, 'GRK1': 17, 'RIPK1': 17, 'RIPK2': 17,\n                'RIPK3': 17, 'ROCK1': 17, 'ROCK2': 17, 'P90RSK': 17,\n                'RSK2': 17, 'RSK3': 17, 'RSK4': 17, 'SBK': 17, 'MYLK4':\n                17, 'SGK1': 17, 'SGK3': 17, 'DSTYK': 17, 'SIK': 17,\n                'SKMLCK': 17, 'SLK': 17, 'SMG1': 17, 'SMMLCK': 17, 'SNRK':\n                17, 'SRPK1': 17, 'SRPK2': 17, 'SSTK': 17, 'STK33': 17,\n                'STLK3': 17, 'TAK1': 17, 'TAO1': 17, 'TAO2': 17, 'TAO3':\n                17, 'TBK1': 17, 'TGFBR1': 17, 'TGFBR2': 17, 'TLK1': 17,\n                'TLK2': 17, 'TNIK': 17, 'TSSK1': 17, 'TSSK2': 17, 'TTBK1':\n                17, 'TTBK2': 17, 'TTK': 17, 'ULK1': 17, 'ULK2': 17,\n                'VRK1': 17, 'VRK2': 17, 'WNK1': 17, 'WNK3': 17, 'WNK4':\n                17, 'YANK2': 17, 'YANK3': 17, 'YSK1': 17, 'ZAK': 17,\n                'EEF2K': 17, 'FAM20C': 17})\n\nMultiply values, consider the dynamics of scale factor, which is PSPA random aa number.\n\nmultiply_pspa(values=[1,2,3,4,5],kinase='PDHK1')\n\nnp.float64(22.906890595608516)\n\n\n\n\nSum\n\nsource\n\n\nsumup\n\n sumup (values, kinase=None)\n\nSum up the possibilities of the amino acids at each position in a phosphorylation site sequence\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nvalues\n\n\nlist of values, possibilities of amino acids at certain positions\n\n\nkinase\nNoneType\nNone",
    "crumbs": [
      "Modules",
      "Scoring"
    ]
  },
  {
    "objectID": "scoring.html#predict-kinase",
    "href": "scoring.html#predict-kinase",
    "title": "Scoring",
    "section": "Predict kinase",
    "text": "Predict kinase\n\nsource\n\nduplicate_ref_zero\n\n duplicate_ref_zero (df:pandas.core.frame.DataFrame)\n\nIf ‘0S’, ‘0T’, ‘0Y’ exist with non-zero values, create ‘0s’, ‘0t’, ‘0y’ with same values. If ‘0s’, ‘0t’, ‘0y’ exist with non-zero values, create ‘0S’, ‘0T’, ‘0Y’ with same values.\n\nsource\n\n\npreprocess_ref\n\n preprocess_ref (ref)\n\nConvert pS/T/Y in ref columns to s/t/y if any; mirror 0S/T/Y to 0s/t/y.\n\nsource\n\n\npredict_kinase\n\n predict_kinase (input_string:str, ref:pandas.core.frame.DataFrame,\n                 func:Callable, to_lower:bool=False, to_upper:bool=False,\n                 verbose=True)\n\nPredict kinase given a phosphorylation site sequence\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ninput_string\nstr\n\nsite sequence\n\n\nref\nDataFrame\n\nreference dataframe for scoring\n\n\nfunc\nCallable\n\nfunction to calculate score\n\n\nto_lower\nbool\nFalse\nconvert capital STY to lower case\n\n\nto_upper\nbool\nFalse\nconvert all letter to uppercase\n\n\nverbose\nbool\nTrue\n\n\n\n\nPSPA scoring:\n\npspa_ref = Data.get_pspa_all_norm()\n\n\npredict_kinase(\"PSVEPPLsQETFSDL\",ref=pspa_ref,func=multiply_pspa)\n\nconsidering string: ['-5V', '-4E', '-3P', '-2P', '-1L', '0s', '1Q', '2E', '3T', '4F', '5S']\n\n\nkinase\nATM       5.037\nSMG1      4.385\nDNAPK     3.818\nATR       3.507\nFAM20C    3.170\n          ...  \nPKN1     -7.275\nP70S6K   -7.295\nAKT3     -7.375\nPKCI     -7.742\nNEK3     -8.254\nLength: 303, dtype: float64\n\n\nCDDM scoring, LO + sum\n\nref=Data.get_cddm_LO() # Data.get_cddm_LO_upper()\n\n\npredict_kinase(\"PSVEPPLsQETFSDL\",ref=ref,func=sumup)\n\nconsidering string: ['-7P', '-6S', '-5V', '-4E', '-3P', '-2P', '-1L', '0s', '1Q', '2E', '3T', '4F', '5S', '6D', '7L']\n\n\nATR        12.751\nATM        10.960\nDNAPK       6.039\nSRPK2       2.079\nSMMLCK      1.876\n           ...   \nROR1      -89.216\nCDC7      -91.457\nCAMK1B    -91.577\nTNNI3K   -118.835\nBRAF     -134.851\nLength: 328, dtype: float64\n\n\nCDDM scoring, PSSM + multiply (#23aa)\n\nref=Data.get_cddm() # Data.get_cddm_upper()\npredict_kinase(\"PSVEPPLsQETFSDL\",ref=ref,func=multiply_23)\n\nconsidering string: ['-7P', '-6S', '-5V', '-4E', '-3P', '-2P', '-1L', '0s', '1Q', '2E', '3T', '4F', '5S', '6D', '7L']\n\n\nATR        16.824\nATM        15.033\nDNAPK      10.112\nSRPK2       6.152\nSMMLCK      5.949\n           ...   \nROR1      -85.143\nCDC7      -87.384\nCAMK1B    -87.503\nTNNI3K   -114.762\nBRAF     -130.778\nLength: 328, dtype: float64\n\n\nCDDM scoring, PSSM + multiply (#20aa)\n\nref=Data.get_cddm_upper() # Data.get_cddm_upper()\npredict_kinase(\"PSVEPPLsQETFSDL\",ref=ref,func=multiply_20)\n\nconsidering string: ['-7P', '-6S', '-5V', '-4E', '-3P', '-2P', '-1L', '0s', '1Q', '2E', '3T', '4F', '5S', '6D', '7L']\n\n\nATR        16.587\nATM        14.362\nDNAPK      10.430\nSRPK2       8.044\nCHK2        7.955\n           ...   \nTTK       -43.375\nGAK       -45.159\nCAMK1B    -69.395\nTNNI3K    -70.993\nBRAF     -109.130\nLength: 328, dtype: float64",
    "crumbs": [
      "Modules",
      "Scoring"
    ]
  },
  {
    "objectID": "scoring.html#params",
    "href": "scoring.html#params",
    "title": "Scoring",
    "section": "Params",
    "text": "Params\nHere we provide different PSSM settings from either PSPA data or kinase-substrate dataset for kinase prediction:\n\nsource\n\nParams\n\n Params (name=None, load=True)\n\n\nParams()\n\n['CDDM', 'CDDM_upper', 'PSPA_st', 'PSPA_y', 'PSPA']\n\n\n\nfor p in ['PSPA', 'CDDM','CDDM_upper']:\n    print(predict_kinase(\"PSVEPPLsQETFSDL\",**Params(p)).head())\n\nconsidering string: ['-5V', '-4E', '-3P', '-2P', '-1L', '0s', '1Q', '2E', '3T', '4F', '5S']\nkinase\nATM       5.037\nSMG1      4.385\nDNAPK     3.818\nATR       3.507\nFAM20C    3.170\ndtype: float64\nconsidering string: ['-7P', '-6S', '-5V', '-4E', '-3P', '-2P', '-1L', '0s', '1Q', '2E', '3T', '4F', '5S', '6D', '7L']\nATR       12.751\nATM       10.960\nDNAPK      6.039\nSRPK2      2.079\nSMMLCK     1.876\ndtype: float64\nconsidering string: ['-7P', '-6S', '-5V', '-4E', '-3P', '-2P', '-1L', '0S', '1Q', '2E', '3T', '4F', '5S', '6D', '7L']\nATR      11.815\nATM       9.590\nDNAPK     5.659\nSRPK2     3.272\nCHK2      3.183\ndtype: float64",
    "crumbs": [
      "Modules",
      "Scoring"
    ]
  },
  {
    "objectID": "scoring.html#predict-kinase-in-df",
    "href": "scoring.html#predict-kinase-in-df",
    "title": "Scoring",
    "section": "Predict kinase in df",
    "text": "Predict kinase in df\n\nsource\n\nmultiply_generic\n\n multiply_generic (merged_df, kinases, df_index, divide_factor_func)\n\nMultiply-based log-sum aggregation across kinases.\n\nsource\n\n\npredict_kinase_df\n\n predict_kinase_df (df, seq_col, ref, func, to_lower=False,\n                    to_upper=False)\n\nPredict kinase scores based on reference PSSM or weight matrix. Applies preprocessing, merges long format keys, then aggregates using given func.\n\ndf=Data.get_human_site()\n\n\n# for p in ['CDDM', 'CDDM_upper', 'PSPA_st', 'PSPA_y', 'PSPA']:\n#     out = predict_kinase_df2(df.head(10), seq_col='site_seq', **Params(p))\n#     print(out.head())\n\n\nout = predict_kinase_df(df.head(100), seq_col='site_seq', **Params('PSPA'))\n\nInput dataframe has 100 rows\nPreprocessing...\nPreprocessing done. Expanding sequences...\nMerging reference...\nMerge complete.\n\n\nComputing multiply_generic:   0%|          | 0/396 [00:00&lt;?, ?it/s]Computing multiply_generic: 100%|██████████| 396/396 [00:00&lt;00:00, 650.95it/s]",
    "crumbs": [
      "Modules",
      "Scoring"
    ]
  },
  {
    "objectID": "scoring.html#percentile-scoring",
    "href": "scoring.html#percentile-scoring",
    "title": "Scoring",
    "section": "Percentile scoring",
    "text": "Percentile scoring\n\nsource\n\nget_pct\n\n get_pct (site, ref, func, pct_ref)\n\nReplicate the precentile results from The Kinase Library.\n\nst_pct = Data.get_pspa_st_pct()\ny_pct = Data.get_pspa_tyr_pct()\n\n\nout = get_pct('PSVEPPLyQETFSDL',**Params('PSPA_y'), pct_ref=y_pct)\nout.sort_values('percentile',ascending=False)\n\nconsidering string: ['-5V', '-4E', '-3P', '-2P', '-1L', '0Y', '1Q', '2E', '3T', '4F', '5S']\n\n\n\n\n\n\n\n\n\nlog2(score)\npercentile\n\n\n\n\nABL2\n3.137\n96.568694\n\n\nBMX\n2.816\n96.117567\n\n\nBTK\n1.956\n95.693780\n\n\nCSK\n2.303\n95.174299\n\n\nMERTK\n2.509\n93.588517\n\n\n...\n...\n...\n\n\nFLT1\n-1.919\n25.358852\n\n\nPINK1_TYR\n-1.227\n21.927546\n\n\nMUSK\n-3.031\n21.298701\n\n\nTNNI3K_TYR\n-3.549\n11.004785\n\n\nPKMYT1_TYR\n-1.739\n4.798360\n\n\n\n\n93 rows × 2 columns\n\n\n\n\nget_pct('PSVEPPLsQETFSDL',**Params('PSPA_st'), pct_ref=st_pct)\n\nconsidering string: ['-5V', '-4E', '-3P', '-2P', '-1L', '0S', '1Q', '2E', '3T', '4F']\n\n\n\n\n\n\n\n\n\nlog2(score)\npercentile\n\n\n\n\nATM\n5.037\n99.822351\n\n\nSMG1\n4.385\n99.831819\n\n\nDNAPK\n3.818\n99.205315\n\n\nATR\n3.507\n99.680344\n\n\nFAM20C\n3.170\n95.370556\n\n\n...\n...\n...\n\n\nPKN1\n-7.275\n14.070436\n\n\nP70S6K\n-7.295\n4.089816\n\n\nAKT3\n-7.375\n11.432995\n\n\nPKCI\n-7.742\n8.129511\n\n\nNEK3\n-8.254\n4.637240\n\n\n\n\n303 rows × 2 columns\n\n\n\n\nsource\n\n\nget_pct_df\n\n get_pct_df (score_df, pct_ref)\n\nReplicate the precentile results from The Kinase Library.\n\n\n\n\nDetails\n\n\n\n\nscore_df\noutput from predict_kinase_df\n\n\npct_ref\na reference df for percentile calculation\n\n\n\n# substrate score first\nscore_df = predict_kinase_df(df_sty,'site_seq', **Params('PSPA_st'))\n\n#get percentile reference\npct_ref = Data.get_pspa_st_pct()\n\n# calculate percentile score\npct = get_pct_df(score_df,pct_ref)",
    "crumbs": [
      "Modules",
      "Scoring"
    ]
  },
  {
    "objectID": "scoring.html#end",
    "href": "scoring.html#end",
    "title": "Scoring",
    "section": "End",
    "text": "End",
    "crumbs": [
      "Modules",
      "Scoring"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "KATLAS",
    "section": "",
    "text": "KATLAS is a repository containing python tools to predict kinases given a substrate sequence. It also contains datasets of kinase substrate specificities and human phosphoproteomics.\nReferences: Please cite the appropriate papers if KATLAS is helpful to your research.",
    "crumbs": [
      "Get Started"
    ]
  },
  {
    "objectID": "index.html#reproduce-datasets-figures",
    "href": "index.html#reproduce-datasets-figures",
    "title": "KATLAS",
    "section": "Reproduce datasets & figures",
    "text": "Reproduce datasets & figures\nFollow the instructions in katlas_raw: https://github.com/sky1ove/katlas_raw",
    "crumbs": [
      "Get Started"
    ]
  },
  {
    "objectID": "index.html#web-applications",
    "href": "index.html#web-applications",
    "title": "KATLAS",
    "section": "Web applications",
    "text": "Web applications\nUsers can now run the analysis directly on the web without needing to code.\nCheck out our latest web platform: kinase-atlas.com",
    "crumbs": [
      "Get Started"
    ]
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "KATLAS",
    "section": "Install",
    "text": "Install\nUV:\nuv add -U python-katlas\npip:\npip install -U python-katlas\nIf using machine-learning related modules, need to install development verison: pip install -U \"python-katlas[dev]\"",
    "crumbs": [
      "Get Started"
    ]
  },
  {
    "objectID": "index.html#import",
    "href": "index.html#import",
    "title": "KATLAS",
    "section": "Import",
    "text": "Import\n\nfrom katlas.common import *",
    "crumbs": [
      "Get Started"
    ]
  },
  {
    "objectID": "index.html#quick-start-1",
    "href": "index.html#quick-start-1",
    "title": "KATLAS",
    "section": "Quick start",
    "text": "Quick start\n\nSite scoring\nCDDM, all capital\n\npredict_kinase('AAAAAAASGAGSDN',**Params(\"CDDM_upper\"))\n\nconsidering string: ['-7A', '-6A', '-5A', '-4A', '-3A', '-2A', '-1A', '0S', '1G', '2A', '3G', '4S', '5D', '6N']\n\n\nGCN2      4.556\nMPSK1     4.425\nMEKK2     4.253\nWNK3      4.213\nWNK1      4.064\n          ...  \nPDK1    -25.077\nPDHK3   -25.346\nCLK2    -27.251\nROR2    -27.582\nDDR1    -53.581\nLength: 328, dtype: float64\n\n\nCDDM, with lower case indicating phosphorylation status\n\npredict_kinase('AAAAAAAsGGAGsDN',**Params(\"CDDM\"))\n\nconsidering string: ['-7A', '-6A', '-5A', '-4A', '-3A', '-2A', '-1A', '0s', '1G', '2G', '3A', '4G', '5s', '6D', '7N']\n\n\nROR1       8.355\nWNK1       4.907\nWNK2       4.782\nERK5       4.466\nRIPK2      4.045\n           ...  \nDDR1     -29.393\nTNNI3K   -29.884\nCHAK1    -31.775\nVRK1     -45.287\nBRAF     -49.403\nLength: 328, dtype: float64\n\n\nPSPA, with lower case indicating phosphorylation status\n\npredict_kinase('AEEKEyHsEGG',**Params(\"PSPA\"))\n\nconsidering string: ['-5A', '-4E', '-3E', '-2K', '-1E', '0y', '1H', '2s', '3E', '4G', '5G']\n\n\nkinase\nEGFR          4.013\nFGFR4         3.568\nZAP70         3.412\nCSK           3.241\nSYK           3.209\n              ...  \nJAK1         -3.837\nDDR2         -4.421\nTNK2         -4.534\nTNNI3K_TYR   -4.651\nTNK1         -5.320\nLength: 93, dtype: float64\n\n\nTo replicate the results from The Kinase Library (PSPA)\nCheck this link: The Kinase Library, and use log2(score) to rank, it shows same results with the below (with slight differences due to rounding).\n\nout = predict_kinase('AEEKEyHSEGG',**Params(\"PSPA\"))\nout\n\nconsidering string: ['-5A', '-4E', '-3E', '-2K', '-1E', '0y', '1H', '2S', '3E', '4G', '5G']\n\n\nkinase\nEGFR     3.181\nFGFR4    2.390\nCSK      2.308\nZAP70    2.068\nSYK      1.998\n         ...  \nEPHA1   -3.501\nFES     -3.699\nTNK1    -4.269\nTNK2    -4.577\nDDR2    -4.920\nLength: 93, dtype: float64\n\n\n\nSo far The kinase Library considers all tyr sequences in capital regardless of whether or not they contain lower cases, which is a small bug and should be fixed soon.\nKinase with “_TYR” indicates it is a dual specificity kinase tested in PSPA tyrosine setting, which has not been included in kinase-library yet.\n\nWe can also calculate the percentile score using a referenced score sheet.\n\n# Percentile reference sheet\ny_pct = Data.get_pspa_tyr_pct()\n\n\nget_pct('AEEKEyHSEGG',pct_ref = y_pct,**Params(\"PSPA_y\"))\n\nconsidering string: ['-5A', '-4E', '-3E', '-2K', '-1E', '0Y', '1H', '2S', '3E', '4G', '5G']\n\n\n\n\n\n\n\n\n\nlog2(score)\npercentile\n\n\n\n\nEGFR\n3.181\n96.787423\n\n\nFGFR4\n2.390\n94.012303\n\n\nCSK\n2.308\n95.201640\n\n\nZAP70\n2.068\n88.380041\n\n\nSYK\n1.998\n85.522898\n\n\n...\n...\n...\n\n\nEPHA1\n-3.501\n12.139440\n\n\nFES\n-3.699\n21.216678\n\n\nTNK1\n-4.269\n5.481887\n\n\nTNK2\n-4.577\n2.050581\n\n\nDDR2\n-4.920\n10.403281\n\n\n\n\n93 rows × 2 columns\n\n\n\n\n\nSite scoring in a df\nLoad your csv:\n\n# df = pd.read_csv('your_file.csv')\n\nOr load a demo df\n\n# Load a demo df with phosphorylation sites\ndf = Data.get_ochoa_site().head()\ndf.iloc[:,-2:]\n\n\n\n\n\n\n\n\nsite_seq\ngene_site\n\n\n\n\n0\nVDDEKGDSNDDYDSA\nA0A075B6Q4_S24\n\n\n1\nYDSAGLLSDEDCMSV\nA0A075B6Q4_S35\n\n\n2\nIADHLFWSEETKSRF\nA0A075B6Q4_S57\n\n\n3\nKSRFTEYSMTSSVMR\nA0A075B6Q4_S68\n\n\n4\nFTEYSMTSSVMRRNE\nA0A075B6Q4_S71\n\n\n\n\n\n\n\nSet the column name and param to calculate\nHere we choose param_CDDM_upper, as the sequences in the demo df are all in capital. You can also choose other params.\n\nresults = predict_kinase_df(df,'site_seq',**Params(\"CDDM_upper\"))\nresults\n\ninput dataframe has a length 5\nPreprocessing\nFinish preprocessing\nMerging reference\nFinish merging\n\n\n\n\n\n\n\n\n\nSRC\nEPHA3\nFES\nNTRK3\nALK\nABL1\nFLT3\nEPHA8\nEPHB2\nEPHB1\n...\nVRK1\nPKMYT1\nGRK3\nCAMK1B\nCDC7\nSMMLCK\nROR1\nGAK\nMAST2\nBRAF\n\n\n\n\n0\n-2.440640\n-0.818753\n-1.663990\n-0.738991\n-2.047628\n-3.602344\n-3.200998\n-0.935176\n-1.388444\n-1.859450\n...\n-17.103237\n-113.698143\n-16.848783\n-41.520172\n-41.646187\n1.284159\n-26.566362\n-69.165062\n-17.706400\n-87.763214\n\n\n1\n-3.838486\n-2.735969\n-2.533986\n-2.150399\n-3.792498\n-4.725527\n-5.711791\n-4.534240\n-3.148449\n-2.511518\n...\n-67.889053\n-68.652641\n-45.833855\n-64.171600\n-39.465572\n-65.061722\n-109.561707\n-85.911224\n-60.105064\n-63.889122\n\n\n2\n-2.610423\n-2.370090\n-3.235637\n-1.508413\n-2.571347\n-3.740941\n-3.025596\n-3.373504\n-2.776297\n-3.060740\n...\n-15.798462\n-45.905319\n-61.440742\n-67.695694\n-55.047962\n-42.135216\n-38.501572\n-62.624382\n-56.119389\n-107.060989\n\n\n3\n-5.180541\n-4.201880\n-5.766463\n-3.038421\n-3.836897\n-4.249900\n-5.029885\n-5.411311\n-4.713308\n-4.827825\n...\n-96.978317\n-83.419777\n-22.559393\n-110.611588\n-63.283070\n-37.240440\n-24.497492\n-112.878151\n-43.538158\n-60.348518\n\n\n4\n-2.844254\n-3.322700\n-3.681745\n-1.766435\n-2.666579\n-3.748774\n-4.083619\n-3.912834\n-3.724181\n-3.948160\n...\n-35.824612\n-87.983566\n-83.312317\n-107.162407\n-61.478374\n-85.793571\n-43.738819\n-47.004211\n-42.281624\n-59.518513\n\n\n\n\n5 rows × 328 columns\n\n\n\n\nresults.iloc[0].sort_values(ascending=False)\n\nTLK2        8.264621\nGCN2        8.101542\nTLK1        7.693897\nHRI         6.691402\nPLK3        6.579368\n             ...    \nNIK       -64.605148\nSRPK2     -67.300667\nGAK       -69.165062\nBRAF      -87.763214\nPKMYT1   -113.698143\nName: 0, Length: 328, dtype: float32",
    "crumbs": [
      "Get Started"
    ]
  },
  {
    "objectID": "index.html#dataset",
    "href": "index.html#dataset",
    "title": "KATLAS",
    "section": "Dataset",
    "text": "Dataset\nBesides calculating sequence scores, we also provides multiple datasets of phosphorylation sites.\n\nCPTAC pan-cancer phosphoproteomics\n\ndf = Data.get_cptac_ensembl_site()\ndf.head(3)\n\n\n\n\n\n\n\n\ngene\nsite\nsite_seq\nprotein\ngene_name\ngene_site\nprotein_site\n\n\n\n\n0\nENSG00000003056.8\nS267\nDDQLGEESEERDDHL\nENSP00000000412.3\nM6PR\nM6PR_S267\nENSP00000000412_S267\n\n\n1\nENSG00000003056.8\nS267\nDDQLGEESEERDDHL\nENSP00000440488.2\nM6PR\nM6PR_S267\nENSP00000440488_S267\n\n\n2\nENSG00000048028.11\nS1053\nPPTIRPNSPYDLCSR\nENSP00000003302.4\nUSP28\nUSP28_S1053\nENSP00000003302_S1053\n\n\n\n\n\n\n\n\n\nOchoa et al. human phosphoproteome\n\ndf = Data.get_ochoa_site()\ndf.head(3)\n\n\n\n\n\n\n\n\nuniprot\nposition\nresidue\nis_disopred\ndisopred_score\nlog10_hotspot_pval_min\nisHotspot\nuniprot_position\nfunctional_score\ncurrent_uniprot\nname\ngene\nSequence\nis_valid\nsite_seq\ngene_site\n\n\n\n\n0\nA0A075B6Q4\n24\nS\n1.0\n0.91\n6.839384\n1.0\nA0A075B6Q4_24\n0.149257\nA0A075B6Q4\nA0A075B6Q4_HUMAN\nNone\nMDIQKSENEDDSEWEDVDDEKGDSNDDYDSAGLLSDEDCMSVPGKT...\nTrue\nVDDEKGDSNDDYDSA\nA0A075B6Q4_S24\n\n\n1\nA0A075B6Q4\n35\nS\n1.0\n0.87\n9.192622\n0.0\nA0A075B6Q4_35\n0.136966\nA0A075B6Q4\nA0A075B6Q4_HUMAN\nNone\nMDIQKSENEDDSEWEDVDDEKGDSNDDYDSAGLLSDEDCMSVPGKT...\nTrue\nYDSAGLLSDEDCMSV\nA0A075B6Q4_S35\n\n\n2\nA0A075B6Q4\n57\nS\n0.0\n0.28\n0.818834\n0.0\nA0A075B6Q4_57\n0.125364\nA0A075B6Q4\nA0A075B6Q4_HUMAN\nNone\nMDIQKSENEDDSEWEDVDDEKGDSNDDYDSAGLLSDEDCMSVPGKT...\nTrue\nIADHLFWSEETKSRF\nA0A075B6Q4_S57\n\n\n\n\n\n\n\n\n\nPhosphoSitePlus human phosphorylation site\n\ndf = Data.get_psp_human_site()\ndf.head(3)\n\n\n\n\n\n\n\n\ngene\nprotein\nuniprot\nsite\ngene_site\nSITE_GRP_ID\nspecies\nsite_seq\nLT_LIT\nMS_LIT\nMS_CST\nCST_CAT#\nAmbiguous_Site\n\n\n\n\n0\nYWHAB\n14-3-3 beta\nP31946\nT2\nYWHAB_T2\n15718712\nhuman\n______MtMDksELV\nNaN\n3.0\n1.0\nNone\n0\n\n\n1\nYWHAB\n14-3-3 beta\nP31946\nS6\nYWHAB_S6\n15718709\nhuman\n__MtMDksELVQkAk\nNaN\n8.0\nNaN\nNone\n0\n\n\n2\nYWHAB\n14-3-3 beta\nP31946\nY21\nYWHAB_Y21\n3426383\nhuman\nLAEQAERyDDMAAAM\nNaN\nNaN\n4.0\nNone\n0\n\n\n\n\n\n\n\n\n\nUnique sites of combined Ochoa & PhosphoSitePlus\n\ndf = Data.get_combine_site_psp_ochoa()\ndf.head(3)\n\n\n\n\n\n\n\n\nuniprot\ngene\nsite\nsite_seq\nsource\nAM_pathogenicity\nCDDM_upper\nCDDM_max_score\n\n\n\n\n0\nA0A024R4G9\nC19orf48\nS20\nITGSRLLSMVPGPAR\npsp\nNaN\nPRKX,AKT1,PKG1,P90RSK,HIPK4,AKT3,HIPK1,PKACB,H...\n2.407041\n\n\n1\nA0A075B6Q4\nNone\nS24\nVDDEKGDSNDDYDSA\nochoa\nNaN\nCK2A2,CK2A1,GRK7,GRK5,CK1G1,CK1A,IKKA,CK1G2,CA...\n2.295654\n\n\n2\nA0A075B6Q4\nNone\nS35\nYDSAGLLSDEDCMSV\nochoa\nNaN\nCK2A2,CK2A1,IKKA,ATM,IKKB,CAMK1D,MARK2,GRK7,IK...\n2.488683",
    "crumbs": [
      "Get Started"
    ]
  },
  {
    "objectID": "index.html#phosphorylation-site-sequence-example",
    "href": "index.html#phosphorylation-site-sequence-example",
    "title": "KATLAS",
    "section": "Phosphorylation site sequence example",
    "text": "Phosphorylation site sequence example\nAll capital - 15 length (-7 to +7)\n\nQSEEEKLSPSPTTED\nTLQHVPDYRQNVYIP\nTMGLSARyGPQFTLQ\n\nAll capital - 10 length (-5 to +4)\n\nSRDPHYQDPH\nLDNPDyQQDF\nAAAAAsGGAG\n\nWith lowercase - (-7 to +7)\n\nQsEEEKLsPsPTTED\nTLQHVPDyRQNVYIP\nTMGLsARyGPQFTLQ\n\nWith lowercase - (-5 to +4)\n\nsRDPHyQDPH\nLDNPDyQQDF\nAAAAAsGGAG",
    "crumbs": [
      "Get Started"
    ]
  },
  {
    "objectID": "pathway.html#reactome-pathway",
    "href": "pathway.html#reactome-pathway",
    "title": "Pathway analysis",
    "section": "Reactome pathway",
    "text": "Reactome pathway\n\nsource\n\nget_reactome_raw\n\n get_reactome_raw (gene_list)\n\nReactome pathway analysis for a given gene set; returns raw output in dataframe.\n\npi3ks=['PIK3CA','PIK3CB','PIK3CD','PIK3CG','PIK3R1','PIK3R2','PIK3R3','PTEN','AKT1','AKT2','AKT3','MTOR','RICTOR','RPTOR','TSC1','TSC2','PDK1','IRS1','IRS2','INSR','IGF1R','GAB1','HRAS','NRAS','KRAS','EGFR','ERBB2','ERBB3','ERBB4']\n\n\nraw_out = get_reactome_raw(pi3ks)\nraw_out.head()\n\n\n\n\n\n\n\n\nstId\ndbId\nname\nllp\ninDisease\nspecies.dbId\nspecies.taxId\nspecies.name\nentities.resource\nentities.total\nentities.found\nentities.ratio\nentities.pValue\nentities.fdr\nentities.exp\nreactions.resource\nreactions.total\nreactions.found\nreactions.ratio\n\n\n\n\n0\nR-HSA-1963640\n1963640\nGRB2 events in ERBB2 signaling\nTrue\nFalse\n48887\n9606\nHomo sapiens\nTOTAL\n21\n9\n0.001304\n1.110223e-16\n1.221245e-15\n[]\nTOTAL\n4\n4\n0.000255\n\n\n1\nR-HSA-9665348\n9665348\nSignaling by ERBB2 ECD mutants\nTrue\nTrue\n48887\n9606\nHomo sapiens\nTOTAL\n23\n9\n0.001428\n1.110223e-16\n1.221245e-15\n[]\nTOTAL\n15\n15\n0.000957\n\n\n2\nR-HSA-9664565\n9664565\nSignaling by ERBB2 KD Mutants\nTrue\nTrue\n48887\n9606\nHomo sapiens\nTOTAL\n35\n13\n0.002174\n1.110223e-16\n1.221245e-15\n[]\nTOTAL\n17\n17\n0.001085\n\n\n3\nR-HSA-1227990\n1227990\nSignaling by ERBB2 in Cancer\nFalse\nTrue\n48887\n9606\nHomo sapiens\nTOTAL\n36\n13\n0.002236\n1.110223e-16\n1.221245e-15\n[]\nTOTAL\n62\n62\n0.003957\n\n\n4\nR-HSA-9665686\n9665686\nSignaling by ERBB2 TMD/JMD mutants\nTrue\nTrue\n48887\n9606\nHomo sapiens\nTOTAL\n30\n10\n0.001863\n1.110223e-16\n1.221245e-15\n[]\nTOTAL\n13\n13\n0.000830\n\n\n\n\n\n\n\n\nsource\n\n\nget_reactome\n\n get_reactome (gene_list, p_type='FDR')\n\nReactome pathway analysis for a given gene set; returns formated output in dataframe with additional -log10(p)\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ngene_list\n\n\n\n\n\np_type\nstr\nFDR\nor p\n\n\n\n\npath = get_reactome(pi3ks,p_type='p')\npath.head()\n\nRunning pathway anlysis\nDone\n\n\n\n\n\n\n\n\n\nname\nreactome_id\np\n-log10_p\n\n\n\n\n0\nGRB2 events in ERBB2 signaling\nR-HSA-1963640\n1.110223e-16\n15.955\n\n\n1\nSignaling by ERBB2 ECD mutants\nR-HSA-9665348\n1.110223e-16\n15.955\n\n\n2\nSignaling by ERBB2 KD Mutants\nR-HSA-9664565\n1.110223e-16\n15.955\n\n\n3\nSignaling by ERBB2 in Cancer\nR-HSA-1227990\n1.110223e-16\n15.955\n\n\n4\nSignaling by ERBB2 TMD/JMD mutants\nR-HSA-9665686\n1.110223e-16\n15.955\n\n\n\n\n\n\n\n\npath = get_reactome(pi3ks,p_type='FDR')\npath.head()\n\nRunning pathway anlysis\nDone\n\n\n\n\n\n\n\n\n\nname\nreactome_id\nFDR\n-log10_FDR\n\n\n\n\n0\nGRB2 events in ERBB2 signaling\nR-HSA-1963640\n1.221245e-15\n14.913\n\n\n1\nSignaling by ERBB2 ECD mutants\nR-HSA-9665348\n1.221245e-15\n14.913\n\n\n2\nSignaling by ERBB2 KD Mutants\nR-HSA-9664565\n1.221245e-15\n14.913\n\n\n3\nSignaling by ERBB2 in Cancer\nR-HSA-1227990\n1.221245e-15\n14.913\n\n\n4\nSignaling by ERBB2 TMD/JMD mutants\nR-HSA-9665686\n1.221245e-15\n14.913\n\n\n\n\n\n\n\n\npath[path.FDR&lt;0.05]\n\n\n\n\n\n\n\n\nname\nreactome_id\nFDR\n-log10_FDR\n\n\n\n\n0\nGRB2 events in ERBB2 signaling\nR-HSA-1963640\n1.221245e-15\n14.913\n\n\n1\nSignaling by ERBB2 ECD mutants\nR-HSA-9665348\n1.221245e-15\n14.913\n\n\n2\nSignaling by ERBB2 KD Mutants\nR-HSA-9664565\n1.221245e-15\n14.913\n\n\n3\nSignaling by ERBB2 in Cancer\nR-HSA-1227990\n1.221245e-15\n14.913\n\n\n4\nSignaling by ERBB2 TMD/JMD mutants\nR-HSA-9665686\n1.221245e-15\n14.913\n\n\n...\n...\n...\n...\n...\n\n\n319\nViral Infection Pathways\nR-HSA-9824446\n3.888317e-02\n1.410\n\n\n320\nRHO GTPase cycle\nR-HSA-9012999\n3.922694e-02\n1.406\n\n\n321\nRUNX3 regulates p14-ARF\nR-HSA-8951936\n4.374857e-02\n1.359\n\n\n322\nCellular response to chemical stress\nR-HSA-9711123\n4.654844e-02\n1.332\n\n\n323\nSignaling by Rho GTPases\nR-HSA-194315\n4.672781e-02\n1.330\n\n\n\n\n324 rows × 4 columns",
    "crumbs": [
      "Modules",
      "Pathway analysis"
    ]
  },
  {
    "objectID": "pathway.html#reference",
    "href": "pathway.html#reference",
    "title": "Pathway analysis",
    "section": "Reference",
    "text": "Reference\nDownload from Reactome/Download_data: https://reactome.org/download-data\nDownload UniProt to All pathways under Identifier mapping files\nfor type, there are IEA (Inferred from Electronic Annotation) and TAS (Traceable Author Statement, higher confidence)\n\nref = Data.get_reactome_pathway()\n\n\nref.head()\n\n\n\n\n\n\n\n\nuniprot\nreactome_id\npathway\ntype\nspecies\n\n\n\n\n0\nA0A023GPK8\nR-DME-1500931\nCell-Cell communication\nIEA\nDrosophila melanogaster\n\n\n1\nA0A023GPK8\nR-DME-373753\nNephrin family interactions\nIEA\nDrosophila melanogaster\n\n\n2\nA0A023GRW3\nR-DME-72163\nmRNA Splicing - Major Pathway\nIEA\nDrosophila melanogaster\n\n\n3\nA0A023GRW3\nR-DME-72172\nmRNA Splicing\nIEA\nDrosophila melanogaster\n\n\n4\nA0A023GRW3\nR-DME-72203\nProcessing of Capped Intron-Containing Pre-mRNA\nIEA\nDrosophila melanogaster\n\n\n\n\n\n\n\n\nsource\n\nquery_reactome\n\n query_reactome (uniprot_id)\n\nQuery uniprot ID in Reactome all level pathway database.\n\nuniprot='P31751' # AKT2\nakt_path = query_reactome(uniprot) # AKT2\n\n\nakt_path\n\n\n\n\n\n\n\n\nreactome_id\nuniprot\npathway\ntype\nspecies\nlowest\n\n\n\n\n0\nR-HSA-109581\nP31751\nApoptosis\nIEA\nHomo sapiens\n0\n\n\n1\nR-HSA-109606\nP31751\nIntrinsic Pathway for Apoptosis\nIEA\nHomo sapiens\n0\n\n\n2\nR-HSA-109703\nP31751\nPKB-mediated events\nIEA\nHomo sapiens\n0\n\n\n3\nR-HSA-109704\nP31751\nPI3K Cascade\nIEA, TAS\nHomo sapiens\n0\n\n\n4\nR-HSA-111447\nP31751\nActivation of BAD and translocation to mitocho...\nIEA\nHomo sapiens\n1\n\n\n...\n...\n...\n...\n...\n...\n...\n\n\n93\nR-HSA-9755511\nP31751\nKEAP1-NFE2L2 pathway\nTAS\nHomo sapiens\n1\n\n\n94\nR-HSA-9755779\nP31751\nSARS-CoV-2 targets host intracellular signalli...\nTAS\nHomo sapiens\n1\n\n\n95\nR-HSA-9824446\nP31751\nViral Infection Pathways\nTAS\nHomo sapiens\n0\n\n\n96\nR-HSA-9824585\nP31751\nRegulation of MITF-M-dependent genes involved ...\nIEA\nHomo sapiens\n1\n\n\n97\nR-HSA-9856651\nP31751\nMITF-M-dependent gene expression\nIEA\nHomo sapiens\n0\n\n\n\n\n98 rows × 6 columns\n\n\n\n\n# lowest\nakt_path[akt_path.lowest==1].shape\n\n(32, 6)\n\n\n\nsource\n\n\nadd_reactome_ref\n\n add_reactome_ref (df, uniprot)\n\n\nout = add_reactome_ref(path,uniprot)\nout.shape\n\n(403, 6)",
    "crumbs": [
      "Modules",
      "Pathway analysis"
    ]
  },
  {
    "objectID": "pathway.html#bar-plot-of-pathways",
    "href": "pathway.html#bar-plot-of-pathways",
    "title": "Pathway analysis",
    "section": "Bar plot of pathways",
    "text": "Bar plot of pathways\n\nsource\n\nplot_path\n\n plot_path (react_df, p_type='FDR', ref_id_list=None, ref_col=None,\n            top_n=10, max_label_length=80)\n\nPlot the output of get_reactome. If ref_df is provided, bars corresponding to pathways in ref_df are shown in dark red.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nreact_df\n\n\nthe output df of get_reactome\n\n\np_type\nstr\nFDR\n\n\n\nref_id_list\nNoneType\nNone\nlist of reactome_id\n\n\nref_col\nNoneType\nNone\ncolumn in reac_df, 1 or 0 to indicate whether it’s in ref\n\n\ntop_n\nint\n10\n\n\n\nmax_label_length\nint\n80\n\n\n\n\n\nplot_path(out)\nplt.title('PI3K Pathways');\n\n\n\n\n\n\n\n\n\n# All level\nplot_path(out,p_type='FDR',ref_id_list=akt_path.reactome_id,top_n=15)\nplt.title('PI3K Pathways (with highlight as overlap with all level Reactome database)');\n\n\n\n\n\n\n\n\n\nout.head()\n\n\n\n\n\n\n\n\nname\nreactome_id\nFDR\n-log10_FDR\nref_path\nref_path_lowest\n\n\n\n\n0\nGRB2 events in ERBB2 signaling\nR-HSA-1963640\n1.221245e-15\n14.913\n0\n0\n\n\n1\nSignaling by ERBB2 ECD mutants\nR-HSA-9665348\n1.221245e-15\n14.913\n0\n0\n\n\n2\nSignaling by ERBB2 KD Mutants\nR-HSA-9664565\n1.221245e-15\n14.913\n0\n0\n\n\n3\nSignaling by ERBB2 in Cancer\nR-HSA-1227990\n1.221245e-15\n14.913\n0\n0\n\n\n4\nSignaling by ERBB2 TMD/JMD mutants\nR-HSA-9665686\n1.221245e-15\n14.913\n0\n0\n\n\n\n\n\n\n\n\n# All level, use ref_col\nplot_path(out,p_type='FDR',ref_col='ref_path',top_n=15)\nplt.title('PI3K Pathways (with highlight as overlap with all level Reactome database)');\n\n\n\n\n\n\n\n\n\n# All level\nplot_path(out,p_type='FDR',ref_col='ref_path_lowest',top_n=15)\nplt.title('PI3K Pathways (with highlight as overlap with lowest level Reactome database)');",
    "crumbs": [
      "Modules",
      "Pathway analysis"
    ]
  },
  {
    "objectID": "pathway.html#overlap",
    "href": "pathway.html#overlap",
    "title": "Pathway analysis",
    "section": "Overlap",
    "text": "Overlap\n\nsource\n\nget_overlap\n\n get_overlap (react_df, ref_id_list=None, ref_col=None, p_type='FDR',\n              thr=0.05, plot=True, figsize=(5, 3), **kwargs)\n\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nreact_df\n\n\n\n\n\nref_id_list\nNoneType\nNone\n\n\n\nref_col\nNoneType\nNone\ncolumn in react_df, 1 or 0 to indicate whether it’s in ref\n\n\np_type\nstr\nFDR\n\n\n\nthr\nfloat\n0.05\noriginal threshold of p value, will be log10 transformed\n\n\nplot\nbool\nTrue\n\n\n\nfigsize\ntuple\n(5, 3)\n\n\n\nkwargs\nVAR_KEYWORD\n\n\n\n\n\n\nget_overlap(out, ref_id_list=akt_path.reactome_id,plot=True)\n\n0.8979591836734694\n\n\n\n\n\n\n\n\n\n\nget_overlap(out, ref_col='ref_path')\n\n0.8979591836734694\n\n\n\n\n\n\n\n\n\n\nget_overlap(out, ref_col='ref_path_lowest')\n\n0.96875",
    "crumbs": [
      "Modules",
      "Pathway analysis"
    ]
  },
  {
    "objectID": "pathway.html#pipeline",
    "href": "pathway.html#pipeline",
    "title": "Pathway analysis",
    "section": "Pipeline",
    "text": "Pipeline\nout = get_reactome(pi3ks,p_type='FDR')\nout = add_reactome_ref(out,'P31749') # kinase uniprot\naccuracy = get_overlap(out, ref_col='ref_path',plot=True) # if lowest, change all to lo",
    "crumbs": [
      "Modules",
      "Pathway analysis"
    ]
  },
  {
    "objectID": "pathway.html#end",
    "href": "pathway.html#end",
    "title": "Pathway analysis",
    "section": "End",
    "text": "End",
    "crumbs": [
      "Modules",
      "Pathway analysis"
    ]
  },
  {
    "objectID": "dnn.html#utils",
    "href": "dnn.html#utils",
    "title": "Train DL",
    "section": "Utils",
    "text": "Utils\n\nsource\n\nseed_everything\n\n seed_everything (seed=123)\n\n\nseed_everything()\n\n\ndef_device\n\n'cuda'",
    "crumbs": [
      "Modules",
      "Train DL"
    ]
  },
  {
    "objectID": "dnn.html#load-data",
    "href": "dnn.html#load-data",
    "title": "Train DL",
    "section": "Load Data",
    "text": "Load Data\n\n# df=pd.read_parquet('paper/kinase_domain/train/pspa_t5.parquet')\n\n\n# info=Data.get_kinase_info()\n\n# info = info[info.pseudo=='0']\n\n# info = info[info.kd_ID.notna()]\n\n# subfamily_map = info[['kd_ID','subfamily']].drop_duplicates().set_index('kd_ID')['subfamily']\n\n# pspa_info = pd.DataFrame(df.index.tolist(),columns=['kinase'])\n\n# pspa_info['subfamily'] = pspa_info.kinase.map(subfamily_map)\n\n# splits = get_splits(pspa_info, group='subfamily',nfold=5)\n\n# split0 = splits[0]\n\nGroupKFold(n_splits=5, random_state=None, shuffle=False)\n# subfamily in train set: 120\n# subfamily in test set: 29\n\n\n\n# df=df.reset_index()\n\n\n# df.columns\n\nIndex(['index', '-5P', '-4P', '-3P', '-2P', '-1P', '0P', '1P', '2P', '3P',\n       ...\n       'T5_1014', 'T5_1015', 'T5_1016', 'T5_1017', 'T5_1018', 'T5_1019',\n       'T5_1020', 'T5_1021', 'T5_1022', 'T5_1023'],\n      dtype='object', length=1255)\n\n\n\n# # column name of feature and target\n# feat_col = df.columns[df.columns.str.startswith('T5_')]\n# target_col = df.columns[~df.columns.isin(feat_col)][1:]\n\n\n# feat_col\n\nIndex(['T5_0', 'T5_1', 'T5_2', 'T5_3', 'T5_4', 'T5_5', 'T5_6', 'T5_7', 'T5_8',\n       'T5_9',\n       ...\n       'T5_1014', 'T5_1015', 'T5_1016', 'T5_1017', 'T5_1018', 'T5_1019',\n       'T5_1020', 'T5_1021', 'T5_1022', 'T5_1023'],\n      dtype='object', length=1024)\n\n\n\n# target_col\n\nIndex(['-5P', '-4P', '-3P', '-2P', '-1P', '0P', '1P', '2P', '3P', '4P',\n       ...\n       '-5pY', '-4pY', '-3pY', '-2pY', '-1pY', '0pY', '1pY', '2pY', '3pY',\n       '4pY'],\n      dtype='object', length=230)",
    "crumbs": [
      "Modules",
      "Train DL"
    ]
  },
  {
    "objectID": "dnn.html#dataset",
    "href": "dnn.html#dataset",
    "title": "Train DL",
    "section": "Dataset",
    "text": "Dataset\n\nsource\n\nGeneralDataset\n\n GeneralDataset (df, feat_col, target_col=None, A:int=23, dtype=&lt;class\n                 'numpy.float32'&gt;)\n\n*An abstract class representing a :class:Dataset.\nAll datasets that represent a map from keys to data samples should subclass it. All subclasses should overwrite :meth:__getitem__, supporting fetching a data sample for a given key. Subclasses could also optionally overwrite :meth:__len__, which is expected to return the size of the dataset by many :class:~torch.utils.data.Sampler implementations and the default options of :class:~torch.utils.data.DataLoader. Subclasses could also optionally implement :meth:__getitems__, for speedup batched samples loading. This method accepts list of indices of samples of batch and returns list of samples.\n.. note:: :class:~torch.utils.data.DataLoader by default constructs an index sampler that yields integral indices. To make it work with a map-style dataset with non-integral indices/keys, a custom sampler must be provided.*\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\n\n\n\n\n\nfeat_col\n\n\nlist/Index of feature columns (e.g., 100 cols)\n\n\ntarget_col\nNoneType\nNone\nlist/Index of flattened PSSM cols; AA-first; A=23\n\n\nA\nint\n23\n\n\n\ndtype\ntype\nfloat32\n\n\n\n\n\n# # dataset\n# ds = GeneralDataset(df,feat_col,target_col)\n\n\n# len(ds)\n\n368\n\n\n\n# dl = DataLoader(ds, batch_size=64, shuffle=True)\n\n\n# xb,yb = next(iter(dl))\n\n# xb.shape,yb.shape\n\n(torch.Size([64, 1024]), torch.Size([64, 23, 10]))",
    "crumbs": [
      "Modules",
      "Train DL"
    ]
  },
  {
    "objectID": "dnn.html#models",
    "href": "dnn.html#models",
    "title": "Train DL",
    "section": "Models",
    "text": "Models\n\nMLP\n\nsource\n\n\nMLP\n\n MLP (num_features, num_targets, hidden_units=[512, 218], dp=0.2)\n\n\n# n_feature = len(feat_col)\n# n_target = len(target_col)\n\n\n# model = MLP(n_feature, n_target)\n\n\n# model(xb)\n\ntensor([[-0.6386,  0.6025, -0.5043,  ...,  0.4508,  0.6506,  0.4236],\n        [ 0.6917, -0.3774,  0.4275,  ..., -0.2647, -0.5108,  0.2595],\n        [ 0.0525,  0.5919, -0.6559,  ...,  0.2015,  0.1638, -0.0517],\n        ...,\n        [ 0.2075,  0.2489,  0.0794,  ...,  0.0141, -0.0182,  0.0464],\n        [-0.2573,  0.9761, -1.6474,  ...,  0.5026,  0.4576,  0.5259],\n        [-0.0075,  0.6411, -0.4033,  ...,  0.6004,  0.4007, -0.1181]],\n       grad_fn=&lt;AddmmBackward0&gt;)\n\n\n\n\nCNN1D\n\nsource\n\n\ninit_weights\n\n init_weights (m, leaky=0.0)\n\nInitiate any Conv layer with Kaiming norm.\n\nsource\n\n\nlin_wn\n\n lin_wn (ni, nf, dp=0.1, act=&lt;class 'torch.nn.modules.activation.SiLU'&gt;)\n\nWeight norm of linear.\n\nsource\n\n\nconv_wn\n\n conv_wn (ni, nf, ks=3, stride=1, padding=1, dp=0.1, act=&lt;class\n          'torch.nn.modules.activation.ReLU'&gt;)\n\nWeight norm of conv.\n\nsource\n\n\nCNN1D\n\n CNN1D (ni, nf, amp_scale=16)\n\n*Base class for all neural network modules.\nYour models should also subclass this class.\nModules can also contain other Modules, allowing them to be nested in a tree structure. You can assign the submodules as regular attributes::\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self) -&gt; None:\n        super().__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\nSubmodules assigned in this way will be registered, and will also have their parameters converted when you call :meth:to, etc.\n.. note:: As per the example above, an __init__() call to the parent class must be made before assignment on the child.\n:ivar training: Boolean represents whether this module is in training or evaluation mode. :vartype training: bool*\n\n# model = CNN1D(n_feature,n_target).apply(init_weights)\n\n\n# model(xb).shape\n\ntorch.Size([64, 230])",
    "crumbs": [
      "Modules",
      "Train DL"
    ]
  },
  {
    "objectID": "dnn.html#wrapper",
    "href": "dnn.html#wrapper",
    "title": "Train DL",
    "section": "Wrapper",
    "text": "Wrapper\n\nsource\n\nPSSM_model\n\n PSSM_model (n_features, n_targets, model='MLP')\n\n*Base class for all neural network modules.\nYour models should also subclass this class.\nModules can also contain other Modules, allowing them to be nested in a tree structure. You can assign the submodules as regular attributes::\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self) -&gt; None:\n        super().__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\nSubmodules assigned in this way will be registered, and will also have their parameters converted when you call :meth:to, etc.\n.. note:: As per the example above, an __init__() call to the parent class must be made before assignment on the child.\n:ivar training: Boolean represents whether this module is in training or evaluation mode. :vartype training: bool*\n\n# model = PSSM_model(n_feature,n_target)\n\n\n# logits= model(xb)\n\n\n# logits.shape\n\ntorch.Size([64, 23, 10])\n\n\n\n# def get_mlp(): return PSSM_model(n_feature,n_target,model='MLP')\n\n# def get_cnn(): return PSSM_model(n_feature,n_target,model='CNN')",
    "crumbs": [
      "Modules",
      "Train DL"
    ]
  },
  {
    "objectID": "dnn.html#loss",
    "href": "dnn.html#loss",
    "title": "Train DL",
    "section": "Loss",
    "text": "Loss\n\nsource\n\nCE\n\n CE (logits:torch.Tensor, target_probs:torch.Tensor)\n\nCross-entropy with soft labels. logits: (B, 20, 10) target_probs: (B, 20, 10), each column (over AA) sums to 1\n\n# CE(logits,yb)\n\ntensor(3.2424, grad_fn=&lt;MeanBackward0&gt;)",
    "crumbs": [
      "Modules",
      "Train DL"
    ]
  },
  {
    "objectID": "dnn.html#metrics",
    "href": "dnn.html#metrics",
    "title": "Train DL",
    "section": "Metrics",
    "text": "Metrics\n\nsource\n\nKLD\n\n KLD (logits:torch.Tensor, target_probs:torch.Tensor)\n\n*Averaged KL divergence across positions between target_probs (p) and softmax(logits) (q).\nlogits: (B, 20, 10) target_probs: (B, 20, 10), each column (over AA) sums to 1*\n\n# KLD(logits,yb)\n\ntensor(0.5011, grad_fn=&lt;MeanBackward0&gt;)\n\n\n\nsource\n\n\nJSD\n\n JSD (logits:torch.Tensor, target_probs:torch.Tensor)\n\n*Averaged Jensen-Shannon Divergence across positions between target_probs (p) and softmax(logits) (q).\nlogits: (B, 20, 10) target_probs: (B, 20, 10), each column (over AA) sums to 1*\n\n# JSD(logits,yb)\n\ntensor(0.1034, grad_fn=&lt;MeanBackward0&gt;)",
    "crumbs": [
      "Modules",
      "Train DL"
    ]
  },
  {
    "objectID": "dnn.html#trainer",
    "href": "dnn.html#trainer",
    "title": "Train DL",
    "section": "Trainer",
    "text": "Trainer\n\nsource\n\ntrain_dl\n\n train_dl (df, feat_col, target_col, split, model_func, n_epoch=4, bs=32,\n           lr=0.01, loss=&lt;function CE&gt;, save=None, sampler=None,\n           lr_find=False)\n\nA DL trainer.\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\n\n\n\n\n\nfeat_col\n\n\n\n\n\ntarget_col\n\n\n\n\n\nsplit\n\n\ntuple of numpy array for split index\n\n\nmodel_func\n\n\nfunction to get pytorch model\n\n\nn_epoch\nint\n4\nnumber of epochs\n\n\nbs\nint\n32\nbatch size\n\n\nlr\nfloat\n0.01\nwill be useless if lr_find is True\n\n\nloss\nfunction\nCE\nloss function\n\n\nsave\nNoneType\nNone\nmodels/{save}.pth\n\n\nsampler\nNoneType\nNone\n\n\n\nlr_find\nbool\nFalse\nif true, will use lr from lr_find\n\n\n\n\n# target, pred = train_dl(df, \n#                         feat_col, \n#                         target_col,\n#                         split0, \n#                         model_func=get_cnn,\n#                         n_epoch=1,\n#                         lr = 3e-3,\n#                         lr_find=True,\n#                         save = 'test')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSuggestedLRs(valley=0.00363078061491251)\nlr in training is SuggestedLRs(valley=0.00363078061491251)\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\nKLD\nJSD\ntime\n\n\n\n\n0\n3.147446\n3.038438\n0.318980\n0.071486\n00:00\n\n\n\n\n\n\n\n\n\n\n\n\n\n# pred\n\n\n\n\n\n\n\n\n-5P\n-4P\n-3P\n-2P\n-1P\n0P\n1P\n2P\n3P\n4P\n...\n-5pY\n-4pY\n-3pY\n-2pY\n-1pY\n0pY\n1pY\n2pY\n3pY\n4pY\n\n\n\n\n14\n0.051638\n0.042721\n0.047461\n0.041219\n0.033932\n0.018915\n0.077473\n0.034604\n0.045717\n0.041970\n...\n0.036053\n0.056273\n0.031747\n0.048270\n0.061980\n0.046331\n0.054140\n0.053547\n0.048135\n0.059772\n\n\n15\n0.051626\n0.042801\n0.047456\n0.041166\n0.034053\n0.018975\n0.077170\n0.034668\n0.045690\n0.042009\n...\n0.035993\n0.056192\n0.031686\n0.048179\n0.061937\n0.046108\n0.053993\n0.053433\n0.048049\n0.059777\n\n\n16\n0.051641\n0.042793\n0.047463\n0.041167\n0.034072\n0.018973\n0.077176\n0.034652\n0.045694\n0.042008\n...\n0.035997\n0.056190\n0.031682\n0.048167\n0.061924\n0.046074\n0.053964\n0.053437\n0.048047\n0.059765\n\n\n36\n0.051615\n0.042611\n0.047080\n0.041040\n0.034041\n0.018777\n0.077937\n0.034638\n0.045706\n0.041972\n...\n0.036068\n0.056490\n0.031812\n0.048282\n0.062101\n0.045894\n0.054315\n0.053463\n0.048288\n0.059904\n\n\n37\n0.051693\n0.042929\n0.047477\n0.041184\n0.034156\n0.018997\n0.077338\n0.034726\n0.045655\n0.042012\n...\n0.035987\n0.056114\n0.031603\n0.048077\n0.061846\n0.046072\n0.053757\n0.053384\n0.047950\n0.059570\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n340\n0.051463\n0.042745\n0.047294\n0.041089\n0.034083\n0.019065\n0.077317\n0.034702\n0.046079\n0.042078\n...\n0.036065\n0.056231\n0.031961\n0.048298\n0.061863\n0.047434\n0.054065\n0.053318\n0.048310\n0.059943\n\n\n348\n0.051470\n0.042849\n0.047324\n0.041169\n0.034008\n0.019065\n0.077173\n0.034711\n0.045994\n0.042123\n...\n0.036031\n0.056180\n0.031971\n0.048263\n0.061977\n0.047308\n0.054164\n0.053355\n0.048320\n0.059924\n\n\n354\n0.051433\n0.042782\n0.047271\n0.041186\n0.034024\n0.019104\n0.077271\n0.034715\n0.045971\n0.042089\n...\n0.036032\n0.056207\n0.032021\n0.048299\n0.061972\n0.047766\n0.054218\n0.053410\n0.048319\n0.059949\n\n\n356\n0.051309\n0.042509\n0.047054\n0.041165\n0.034242\n0.019028\n0.077537\n0.034745\n0.046062\n0.042151\n...\n0.035995\n0.056161\n0.031950\n0.048345\n0.061846\n0.047154\n0.054128\n0.053405\n0.047976\n0.059789\n\n\n360\n0.051457\n0.042792\n0.047258\n0.041206\n0.034020\n0.019108\n0.077283\n0.034738\n0.045946\n0.042075\n...\n0.036040\n0.056208\n0.032032\n0.048276\n0.061980\n0.047821\n0.054200\n0.053409\n0.048339\n0.059919\n\n\n\n\n74 rows × 230 columns\n\n\n\n\n# pred_pssm = recover_pssm(pred.iloc[0])\n# pred_pssm.sum()\n\nPosition\n-5    1.0\n-4    1.0\n-3    1.0\n-2    1.0\n-1    1.0\n 0    1.0\n 1    1.0\n 2    1.0\n 3    1.0\n 4    1.0\ndtype: float32",
    "crumbs": [
      "Modules",
      "Train DL"
    ]
  },
  {
    "objectID": "dnn.html#predict",
    "href": "dnn.html#predict",
    "title": "Train DL",
    "section": "Predict",
    "text": "Predict\n\nsource\n\npredict_dl\n\n predict_dl (df, feat_col, target_col, model_func, model_pth)\n\nPredict dataframe given a deep learning model\n\n\n\n\nDetails\n\n\n\n\ndf\n\n\n\nfeat_col\n\n\n\ntarget_col\n\n\n\nmodel_func\nmodel architecture\n\n\nmodel_pth\nonly name, not with .pth\n\n\n\n\n# test = df.loc[split0[1]].copy()\n\n\n# test_pred = predict_dl(test, \n#                feat_col, \n#                target_col,\n#                model_func=get_cnn, # model architecture\n#                model_pth='test', # only name, not with .pth\n#               )\n\n\n# test_pred.columns\n\nIndex(['-5P', '-4P', '-3P', '-2P', '-1P', '0P', '1P', '2P', '3P', '4P',\n       ...\n       '-5pY', '-4pY', '-3pY', '-2pY', '-1pY', '0pY', '1pY', '2pY', '3pY',\n       '4pY'],\n      dtype='object', length=230)\n\n\n\n# pssm_pred = recover_pssm(test_pred.iloc[0])\n# pssm_pred.sum()\n\nPosition\n-5    1.0\n-4    1.0\n-3    1.0\n-2    1.0\n-1    1.0\n 0    1.0\n 1    1.0\n 2    1.0\n 3    1.0\n 4    1.0\ndtype: float32\n\n\n\n# plot_heatmap(pssm_pred)",
    "crumbs": [
      "Modules",
      "Train DL"
    ]
  },
  {
    "objectID": "dnn.html#cv-train",
    "href": "dnn.html#cv-train",
    "title": "Train DL",
    "section": "CV train",
    "text": "CV train\n\ncross-validation\n\n\nsource\n\ntrain_dl_cv\n\n train_dl_cv (df, feat_col, target_col, splits, model_func, save:str=None,\n              **kwargs)\n\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\n\n\n\n\n\nfeat_col\n\n\n\n\n\ntarget_col\n\n\n\n\n\nsplits\n\n\nlist of tuples\n\n\nmodel_func\n\n\nfunctions like lambda x: return MLP_1(num_feat, num_target)\n\n\nsave\nstr\nNone\n\n\n\nkwargs\nVAR_KEYWORD\n\n\n\n\n\n\n# oof = train_dl_cv(df,feat_col,target_col,\n#                   splits = splits,\n#                   model_func = get_cnn,\n#                   n_epoch=1,lr=3e-3,save='cnn')\n\n------fold0------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\nKLD\nJSD\ntime\n\n\n\n\n0\n3.136976\n3.053134\n0.333676\n0.075223\n00:00\n\n\n\n\n\n\n\n\n\n\n\n\n------fold1------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\nKLD\nJSD\ntime\n\n\n\n\n0\n3.116230\n2.985299\n0.230389\n0.051941\n00:00\n\n\n\n\n\n\n\n\n\n\n\n\n------fold2------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\nKLD\nJSD\ntime\n\n\n\n\n0\n3.126288\n2.993812\n0.241427\n0.059246\n00:00\n\n\n\n\n\n\n\n\n\n\n\n\n------fold3------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\nKLD\nJSD\ntime\n\n\n\n\n0\n3.097305\n3.008505\n0.245488\n0.061335\n00:00\n\n\n\n\n\n\n\n\n\n\n\n\n------fold4------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\nKLD\nJSD\ntime\n\n\n\n\n0\n3.120687\n3.022246\n0.272693\n0.061717\n00:00\n\n\n\n\n\n\n\n\n\n\n\n\n\n# oof.nfold.value_counts()\n\nnfold\n2    74\n1    74\n0    74\n3    73\n4    73\nName: count, dtype: int64",
    "crumbs": [
      "Modules",
      "Train DL"
    ]
  },
  {
    "objectID": "dnn.html#end",
    "href": "dnn.html#end",
    "title": "Train DL",
    "section": "End",
    "text": "End",
    "crumbs": [
      "Modules",
      "Train DL"
    ]
  },
  {
    "objectID": "ml.html#splitter",
    "href": "ml.html#splitter",
    "title": "Train ML",
    "section": "Splitter",
    "text": "Splitter\n\nsource\n\nget_splits\n\n get_splits (df:pandas.core.frame.DataFrame, stratified:str=None,\n             group:str=None, nfold:int=5, seed:int=123)\n\nSplit samples in a dataframe based on Stratified, Group, or StratifiedGroup Kfold method\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\nDataFrame\n\ndf contains info for split\n\n\nstratified\nstr\nNone\ncolname to make stratified kfold; sampling from different groups\n\n\ngroup\nstr\nNone\ncolname to make group kfold; test and train are from different groups\n\n\nnfold\nint\n5\n\n\n\nseed\nint\n123\n\n\n\n\n\n!ls\n\n00_data.ipynb          04_feature.ipynb     10_ML.ipynb   models\n01_utils.ipynb         05_plot.ipynb        11_DNN.ipynb  nbdev.yml\n02_pssm.ipynb          06_pathway.ipynb     _quarto.yml   styles.css\n03_hierarchical.ipynb  07_alignment.ipynb   custom.scss\n03_scoring.ipynb       08_statistics.ipynb  index.ipynb\n\n\n\n# df=pd.read_parquet('paper/kinase_domain/train/pspa_t5.parquet')\n\n\n# info=Data.get_kinase_info()\n\n# info = info[info.pseudo=='0']\n\n# info = info[info.kd_ID.notna()]\n\n# subfamily_map = info[['kd_ID','subfamily']].drop_duplicates().set_index('kd_ID')['subfamily']\n\n# pspa_info = pd.DataFrame(df.index.tolist(),columns=['kinase'])\n\n# pspa_info['subfamily'] = pspa_info.kinase.map(subfamily_map)\n\n# splits = get_splits(pspa_info, group='subfamily',nfold=5)\n\n# split0 = splits[0]\n\n\n# df=df.reset_index()\n\n\n# df.columns\n\n\n# # column name of feature and target\n# feat_col = df.columns[df.columns.str.startswith('T5_')]\n# target_col = df.columns[~df.columns.isin(feat_col)][1:]\n\n\n# feat_col\n\n\n# target_col\n\n\nsource\n\n\nsplit_data\n\n split_data (df:pandas.core.frame.DataFrame, feat_col:list,\n             target_col:list, split:tuple)\n\nGiven split tuple, split dataframe into X_train, y_train, X_test, y_test\n\n\n\n\nType\nDetails\n\n\n\n\ndf\nDataFrame\ndataframe of values\n\n\nfeat_col\nlist\nfeature columns\n\n\ntarget_col\nlist\ntarget columns\n\n\nsplit\ntuple\none of the split in splits\n\n\n\n\n# X_train, y_train, X_test, y_test = split_data(df,feat_col, target_col, split0)\n\n\n# X_train.shape,y_train.shape,X_test.shape,y_test.shape",
    "crumbs": [
      "Modules",
      "Train ML"
    ]
  },
  {
    "objectID": "ml.html#trainer",
    "href": "ml.html#trainer",
    "title": "Train ML",
    "section": "Trainer",
    "text": "Trainer\n\nsource\n\ntrain_ml\n\n train_ml (df, feat_col, target_col, split, model, save=None, params={})\n\nFit and predict using sklearn model format, return target and pred of valid dataset.\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\n\n\ndataframe of values\n\n\nfeat_col\n\n\nfeature columns\n\n\ntarget_col\n\n\ntarget columns\n\n\nsplit\n\n\none split in splits\n\n\nmodel\n\n\na sklearn models\n\n\nsave\nNoneType\nNone\nfile (.joblib) to save, e.g. ‘model.joblib’\n\n\nparams\ndict\n{}\nparameters for model.fit from sklearn\n\n\n\n\n# model = LinearRegression()\n\n# ## Uncheck to run with saving model\n# # target,pred = train_ml(df, feat_col, target_col, split0, model,'model.joblib')\n\n# # Run without saving model\n# target,pred = train_ml(df, feat_col, target_col, split0, model)\n\n# pred.head()",
    "crumbs": [
      "Modules",
      "Train ML"
    ]
  },
  {
    "objectID": "ml.html#cross-validation",
    "href": "ml.html#cross-validation",
    "title": "Train ML",
    "section": "Cross-Validation",
    "text": "Cross-Validation\n\nsource\n\ntrain_ml_cv\n\n train_ml_cv (df, feat_col, target_col, splits, model, save=None,\n              params={})\n\nCross-validation through the given splits\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\n\n\ndataframe of values\n\n\nfeat_col\n\n\nfeature columns\n\n\ntarget_col\n\n\ntarget columns\n\n\nsplits\n\n\nsplits\n\n\nmodel\n\n\nsklearn model\n\n\nsave\nNoneType\nNone\nmodel name to be saved, e.g., ‘LR’\n\n\nparams\ndict\n{}\nact as kwargs, for model.fit\n\n\n\n\n# oof = train_ml_cv(df,feat_col,target_col,splits=splits,model=model)",
    "crumbs": [
      "Modules",
      "Train ML"
    ]
  },
  {
    "objectID": "ml.html#score",
    "href": "ml.html#score",
    "title": "Train ML",
    "section": "Score",
    "text": "Score\n\nsource\n\npost_process\n\n post_process (pssm_df)\n\nConvert neg value to 0, clean non-last three values in position zero, and normalize each position\n\n# pssm = post_process(recover_pssm(oof.iloc[0,:-1].sort_values()))\n\n\n# pssm.sum()\n\n\nsource\n\n\npost_process_oof\n\n post_process_oof (oof_ml, target_col)\n\n\n# oof = post_process_oof(oof,target_col)\n\n\nsource\n\n\nget_score\n\n get_score (target, pred, func)\n\n\n# target = df[target_col].copy()\n\n\n# pspa_info['jsd'] =get_score_jsd(target,oof)\n# pspa_info['kld'] =get_score_kld(target,oof)\n\n\n# pspa_info['jsd']\n\n\n# pspa_info['kld']\n\n\nsource\n\n\ncalculate_ce\n\n calculate_ce (target_series, pred_series)\n\n\n# pspa_info['ce'] =get_score_ce(target,oof)\n\n\n# pspa_info['ce']\n\n\n# pspa_info['nfold'] = oof['nfold']\n\n\n# pspa_info.groupby('nfold').jsd.mean()",
    "crumbs": [
      "Modules",
      "Train ML"
    ]
  },
  {
    "objectID": "ml.html#predictor",
    "href": "ml.html#predictor",
    "title": "Train ML",
    "section": "Predictor",
    "text": "Predictor\n\nsource\n\npredict_ml\n\n predict_ml (df, feat_col, target_col=None, model_pth='model.joblib')\n\nMake predictions based on trained model.\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\n\n\nDataframe that contains features\n\n\nfeat_col\n\n\nfeature columns\n\n\ntarget_col\nNoneType\nNone\n\n\n\nmodel_pth\nstr\nmodel.joblib\n\n\n\n\nUncheck below to run if you have model_pth:\n\n# pred2 = predict_ml(X_test,feat_col, target_col, model_pth = 'model.joblib')\n# pred2.head()\n## or\n# predict_ml(df.iloc[split_0[1]],feat_col,'model.joblib')",
    "crumbs": [
      "Modules",
      "Train ML"
    ]
  },
  {
    "objectID": "ml.html#end",
    "href": "ml.html#end",
    "title": "Train ML",
    "section": "End",
    "text": "End",
    "crumbs": [
      "Modules",
      "Train ML"
    ]
  },
  {
    "objectID": "plot.html#utils",
    "href": "plot.html#utils",
    "title": "Plot",
    "section": "Utils",
    "text": "Utils\n\nsource\n\nset_sns\n\n set_sns (dpi=300)\n\nSet seaborn resolution for notebook display\n\nsource\n\n\nsave_svg\n\n save_svg (path)\n\n\nsource\n\n\nsave_pdf\n\n save_pdf (path)\n\n\nsource\n\n\nsave_show\n\n save_show (path=None, show_only=False)\n\nShow plot or save path\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\npath\nNoneType\nNone\nimage path, e.g., img.svg, if not None, will save, else plt.show()\n\n\nshow_only\nbool\nFalse",
    "crumbs": [
      "Modules",
      "Plot"
    ]
  },
  {
    "objectID": "plot.html#colorpalette",
    "href": "plot.html#colorpalette",
    "title": "Plot",
    "section": "Color/palette",
    "text": "Color/palette\n\nsource\n\nget_color_dict\n\n get_color_dict (categories, palette:str='tab20')\n\nAssign colors to a list of names (allow duplicates), returns a dictionary of unique name with corresponding color\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ncategories\n\n\nlist of names to assign color\n\n\npalette\nstr\ntab20\nchoose from sns.color_palette\n\n\n\n\ninfo = Data.get_kinase_info()\n\n\ninfo.modi_group.value_counts().index\n\nIndex(['TK', 'CAMK', 'Other', 'CMGC', 'AGC', 'STE', 'TKL', 'Atypical', 'CK1',\n       'NEK', 'RGC'],\n      dtype='object', name='modi_group')\n\n\n\ninfo.pspa_category_big.str.split('_').str[0].value_counts()[:20].index\n\nIndex(['Basophilic', 'Pro-directed', 'Acidophilic', 'Map3k', 'Map4k',\n       'Alpha/mlk', 'Fgf and vegf receptors', 'Assorted', 'Ripk/wnk', 'Pkc',\n       'Ephrin receptors', 'Eif2ak/tlk', 'Nek/ask', 'Pdgf receptors', 'Src',\n       'Jak', 'Tam receptors', 'Cmgc', 'Tec', 'Ulk/ttbk'],\n      dtype='object', name='pspa_category_big')\n\n\n\nsource\n\n\nget_subfamily_color\n\n get_subfamily_color ()\n\n\n# get_subfamily_color()\n\nSometimes plot functions do not take dict of colors but list of colors:\n\nsource\n\n\nget_plt_color\n\n get_plt_color (palette, columns)\n\nGiven a dict, list or set name, return the list of names; if dict, need to provide column names of the df.\n\n\n\n\nDetails\n\n\n\n\npalette\ndict, list, or set name (tab10)\n\n\ncolumns\ncolumns in the df for plot\n\n\n\n\nget_plt_color('Set2',['a','b'])\n\n\n\n\n\nsource\n\n\nget_hue_big\n\n get_hue_big (df, hue_col, cnt_thr=10)\n\nGet part of hue according to its value counts; applied when the groups are too many.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\n\n\n\n\n\nhue_col\n\n\ncolumn of hue\n\n\ncnt_thr\nint\n10\nhigher or equal to this threshold will be considered\n\n\n\nWhen the categories are too many to show on the plot, we can filter and only show those big categories:\n\nhue_big=get_hue_big(info,'pspa_category_big',10)\nhue_big\n\n5      Acidophilic\n6      Acidophilic\n11      Basophilic\n12      Basophilic\n13      Basophilic\n          ...     \n516    Acidophilic\n517    Acidophilic\n519          Map4k\n520          Map3k\n521          Map3k\nName: pspa_category_big, Length: 294, dtype: object\n\n\n\n# plot_2d(embed,hue=hue_pspa,hue_title='PSPA category',palette='tab20')",
    "crumbs": [
      "Modules",
      "Plot"
    ]
  },
  {
    "objectID": "plot.html#dimensionality-reduction",
    "href": "plot.html#dimensionality-reduction",
    "title": "Plot",
    "section": "Dimensionality reduction",
    "text": "Dimensionality reduction\n\nsource\n\nreduce_feature\n\n reduce_feature (df:pandas.core.frame.DataFrame, method:str='pca',\n                 complexity:int=20, n:int=2, load:str=None, save:str=None,\n                 seed:int=123, **kwargs)\n\nReduce the dimensionality given a dataframe of values\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\nDataFrame\n\n\n\n\nmethod\nstr\npca\ndimensionality reduction method, accept both capital and lower case\n\n\ncomplexity\nint\n20\nNone for PCA; perfplexity for TSNE, recommend: 30; n_neigbors for UMAP, recommend: 15\n\n\nn\nint\n2\nn_components\n\n\nload\nstr\nNone\nload a previous model, e.g. model.pkl\n\n\nsave\nstr\nNone\npkl file to be saved, e.g. pca_model.pkl\n\n\nseed\nint\n123\nseed for random_state\n\n\nkwargs\nVAR_KEYWORD\n\n\n\n\n\nA very common way to reduce feature number is to use dimensionality reduction method. reduce_feature is a dimensionality reduction function that can apply three dimensionality reduction methods: PCA, UMAP, TSNE. The later two is non-linear transformation, and PCA is linear transformation. Therefore, for plotting purpose, it is good to use UMAP/TSNE, by setting n (n_components) to 2 for 2d plot; for featuring purpose, it is good to use PCA, and set n to values to a rational values, like 64, 128 etc.\n\n# Load data\ndf=Data.get_aa_morgan()\n\n# Use PCA to reduce dimension; reduce the number of features to 20\nfeat = reduce_feature(df,'pca',n=2)\nfeat.head()\n\n\n\n\n\n\n\n\nPCA1\nPCA2\n\n\naa\n\n\n\n\n\n\nA\n-0.954819\n-0.953761\n\n\nC\n-0.041108\n0.205091\n\n\nD\n-0.087707\n0.245634\n\n\nE\n-0.271097\n1.023801\n\n\nF\n2.253264\n-0.251185",
    "crumbs": [
      "Modules",
      "Plot"
    ]
  },
  {
    "objectID": "plot.html#d-scatter-plot",
    "href": "plot.html#d-scatter-plot",
    "title": "Plot",
    "section": "2D scatter plot",
    "text": "2D scatter plot\n\nsource\n\nplot_2d\n\n plot_2d (embedding_df:pandas.core.frame.DataFrame, hue:str=None,\n          complexity:int=30, palette:str='tab20', legend:bool=False,\n          name_list=None, seed:int=123, s:int=20, legend_title:str=None,\n          **kwargs)\n\nGiven a dataframe of values, plot it in 2D. The method could be ‘pca’, ‘tsne’, or ‘umap’.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nembedding_df\nDataFrame\n\na dataframe of values that is waited for dimensionality reduction\n\n\nhue\nstr\nNone\ncolname of color\n\n\ncomplexity\nint\n30\nthis argument does not affect pca but others; recommend 30 for tsne, 15 for umap\n\n\npalette\nstr\ntab20\ncolor scheme, could be tab10 if less categories\n\n\nlegend\nbool\nFalse\nwhether or not add the legend on the side\n\n\nname_list\nNoneType\nNone\na list of names to annotate each dot in the plot\n\n\nseed\nint\n123\nseed for dimensionality reduction\n\n\ns\nint\n20\nsize of the dot\n\n\nlegend_title\nstr\nNone\nnew argument to override legend title\n\n\nkwargs\nVAR_KEYWORD\n\n\n\n\n\n\nplot_2d(feat)\n\n/tmp/ipykernel_8124/600276515.py:20: UserWarning: Ignoring `palette` because no `hue` variable has been assigned.\n  g = sns.relplot(",
    "crumbs": [
      "Modules",
      "Plot"
    ]
  },
  {
    "objectID": "plot.html#dimensionality-reduction-2d-plot",
    "href": "plot.html#dimensionality-reduction-2d-plot",
    "title": "Plot",
    "section": "Dimensionality reduction + 2d plot",
    "text": "Dimensionality reduction + 2d plot\n\nsource\n\nplot_cluster\n\n plot_cluster (df:pandas.core.frame.DataFrame, method:str='pca',\n               hue:str=None, complexity:int=30, palette:str='tab20',\n               legend:bool=False, name_list=None, seed:int=123, s:int=50,\n               legend_title:str=None, **kwargs)\n\nGiven a dataframe of values, plot it in 2D. The method could be ‘pca’, ‘tsne’, or ‘umap’.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\nDataFrame\n\na dataframe of values that is waited for dimensionality reduction\n\n\nmethod\nstr\npca\ndimensionality reduction method, choose from pca, umap, and tsne\n\n\nhue\nstr\nNone\ncolname of color\n\n\ncomplexity\nint\n30\nthis argument does not affect pca but others; recommend 30 for tsne, 15 for umap\n\n\npalette\nstr\ntab20\ncolor scheme, could be tab10 if less categories\n\n\nlegend\nbool\nFalse\nwhether or not add the legend on the side\n\n\nname_list\nNoneType\nNone\na list of names to annotate each dot in the plot\n\n\nseed\nint\n123\nseed for dimensionality reduction\n\n\ns\nint\n50\nsize of the dot\n\n\nlegend_title\nstr\nNone\nnew argument to override legend title\n\n\nkwargs\nVAR_KEYWORD\n\n\n\n\n\n\nplot_cluster(df,method='pca',legend=True)\n\n/tmp/ipykernel_8124/1814290957.py:23: UserWarning: Ignoring `palette` because no `hue` variable has been assigned.\n  g = sns.relplot(",
    "crumbs": [
      "Modules",
      "Plot"
    ]
  },
  {
    "objectID": "plot.html#bokeh-interactive-plot",
    "href": "plot.html#bokeh-interactive-plot",
    "title": "Plot",
    "section": "Bokeh interactive plot",
    "text": "Bokeh interactive plot\n\nsource\n\nplot_bokeh\n\n plot_bokeh (X:pandas.core.frame.DataFrame, idx, hue:None, s:int=3,\n             **kwargs)\n\nMake interactive 2D plot with a searching box and window of dot information when pointing\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nX\nDataFrame\n\na dataframe of two columns from dimensionality reduction\n\n\nidx\n\n\npd.Series or list that indicates identities for searching box\n\n\nhue\nNone\n\npd.Series or list that indicates category for each sample\n\n\ns\nint\n3\ndot size\n\n\nkwargs\nVAR_KEYWORD\n\n\n\n\n\n\n# PCA reduce dimension to 2\nX = reduce_feature(df)\n\n# get info\ninfo=Data.get_aa_info()\n\n#plot\nplot_bokeh(X, \n           idx = info.Name,\n           hue = info.Name,\n           s=7, \n           smiles = info.SMILES)\n\n    \n    \n        \n        Loading BokehJS ...",
    "crumbs": [
      "Modules",
      "Plot"
    ]
  },
  {
    "objectID": "plot.html#rank",
    "href": "plot.html#rank",
    "title": "Plot",
    "section": "Rank",
    "text": "Rank\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/fastcore/docscrape.py:230: UserWarning: Unknown section See Also\n  else: warn(msg)\n\nsource\n\nplot_rank\n\n plot_rank (sorted_df:pandas.core.frame.DataFrame, x:str, y:str,\n            n_hi:int=10, n_lo:int=10, figsize:tuple=(10, 8), data=None,\n            hue=None, size=None, style=None, palette=None, hue_order=None,\n            hue_norm=None, sizes=None, size_order=None, size_norm=None,\n            markers=True, style_order=None, legend='auto', ax=None)\n\nPlot rank from a sorted dataframe\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nsorted_df\nDataFrame\n\na sorted dataframe\n\n\nx\nstr\n\ncolumn name for x axis\n\n\ny\nstr\n\ncolumn name for y aixs\n\n\nn_hi\nint\n10\nif not None, show the head n names\n\n\nn_lo\nint\n10\nif not None, show the tail n names\n\n\nfigsize\ntuple\n(10, 8)\nfigure size\n\n\ndata\nNoneType\nNone\nInput data structure. Either a long-form collection of vectors that can beassigned to named variables or a wide-form dataset that will be internallyreshaped.\n\n\nhue\nNoneType\nNone\nGrouping variable that will produce points with different colors.Can be either categorical or numeric, although color mapping willbehave differently in latter case.\n\n\nsize\nNoneType\nNone\nGrouping variable that will produce points with different sizes.Can be either categorical or numeric, although size mapping willbehave differently in latter case.\n\n\nstyle\nNoneType\nNone\nGrouping variable that will produce points with different markers.Can have a numeric dtype but will always be treated as categorical.\n\n\npalette\nNoneType\nNone\nMethod for choosing the colors to use when mapping the hue semantic.String values are passed to :func:color_palette. List or dict valuesimply categorical mapping, while a colormap object implies numeric mapping.\n\n\nhue_order\nNoneType\nNone\nSpecify the order of processing and plotting for categorical levels of thehue semantic.\n\n\nhue_norm\nNoneType\nNone\nEither a pair of values that set the normalization range in data unitsor an object that will map from data units into a [0, 1] interval. Usageimplies numeric mapping.\n\n\nsizes\nNoneType\nNone\nAn object that determines how sizes are chosen when size is used.List or dict arguments should provide a size for each unique data value,which forces a categorical interpretation. The argument may also be amin, max tuple.\n\n\nsize_order\nNoneType\nNone\nSpecified order for appearance of the size variable levels,otherwise they are determined from the data. Not relevant when thesize variable is numeric.\n\n\nsize_norm\nNoneType\nNone\nNormalization in data units for scaling plot objects when thesize variable is numeric.\n\n\nmarkers\nbool\nTrue\nObject determining how to draw the markers for different levels of thestyle variable. Setting to True will use default markers, oryou can pass a list of markers or a dictionary mapping levels of thestyle variable to markers. Setting to False will drawmarker-less lines. Markers are specified as in matplotlib.\n\n\nstyle_order\nNoneType\nNone\nSpecified order for appearance of the style variable levelsotherwise they are determined from the data. Not relevant when thestyle variable is numeric.\n\n\nlegend\nstr\nauto\nHow to draw the legend. If “brief”, numeric hue and sizevariables will be represented with a sample of evenly spaced values.If “full”, every group will get an entry in the legend. If “auto”,choose between brief or full representation based on number of levels.If False, no legend data is added and no legend is drawn.\n\n\nax\nNoneType\nNone\nPre-existing axes for the plot. Otherwise, call :func:matplotlib.pyplot.gcainternally.\n\n\nReturns\n:class:matplotlib.axes.Axes\n\nThe matplotlib axes containing the plot.\n\n\n\n\n# load data\n# df = Data.get_pspa_raw().set_index('kinase')\ndf = pd.read_csv('https://github.com/sky1ove/katlas_raw/raw/refs/heads/main/nbs/raw/pspa_st_raw.csv').set_index('kinase')\n\n\n# get sorted dataframe\nsorted_df = df.max(1).reset_index(name='values').sort_values('values')\nsorted_df.head()\n\n\n\n\n\n\n\n\nkinase\nvalues\n\n\n\n\n68\nCK1G2\n189898.392\n\n\n294\nVRK2\n4191709.640\n\n\n8\nALPHAK3\n4573611.730\n\n\n249\nPRPK\n8495330.790\n\n\n38\nCAMLCK\n9413689.600\n\n\n\n\n\n\n\n\nplot_rank(sorted_df,x='kinase',y='values')\nplt.xlabel('kinase');",
    "crumbs": [
      "Modules",
      "Plot"
    ]
  },
  {
    "objectID": "plot.html#distribution-histogram",
    "href": "plot.html#distribution-histogram",
    "title": "Plot",
    "section": "Distribution histogram",
    "text": "Distribution histogram\n\nsource\n\nplot_hist\n\n plot_hist (df:pandas.core.frame.DataFrame, x:str, figsize:tuple=(6, 2),\n            data=None, y=None, hue=None, weights=None, stat='count',\n            bins='auto', binwidth=None, binrange=None, discrete=None,\n            cumulative=False, common_bins=True, common_norm=True,\n            multiple='layer', element='bars', fill=True, shrink=1,\n            kde=False, kde_kws=None, line_kws=None, thresh=0,\n            pthresh=None, pmax=None, cbar=False, cbar_ax=None,\n            cbar_kws=None, palette=None, hue_order=None, hue_norm=None,\n            color=None, log_scale=None, legend=True, ax=None)\n\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\nDataFrame\n\na dataframe that contain values for plot\n\n\nx\nstr\n\ncolumn name of values\n\n\nfigsize\ntuple\n(6, 2)\n\n\n\ndata\nNoneType\nNone\nInput data structure. Either a long-form collection of vectors that can beassigned to named variables or a wide-form dataset that will be internallyreshaped.\n\n\ny\nNoneType\nNone\n\n\n\nhue\nNoneType\nNone\nSemantic variable that is mapped to determine the color of plot elements.\n\n\nweights\nNoneType\nNone\nVector variables\n\n\nstat\nstr\ncount\nAggregate statistic to compute in each bin.- count: show the number of observations in each bin- frequency: show the number of observations divided by the bin width- probability or proportion: normalize such that bar heights sum to 1- percent: normalize such that bar heights sum to 100- density: normalize such that the total area of the histogram equals 1\n\n\nbins\nstr\nauto\nGeneric bin parameter that can be the name of a reference rule,the number of bins, or the breaks of the bins.Passed to :func:numpy.histogram_bin_edges.\n\n\nbinwidth\nNoneType\nNone\nWidth of each bin, overrides bins but can be used withbinrange.\n\n\nbinrange\nNoneType\nNone\nHistogram computation parameters\n\n\ndiscrete\nNoneType\nNone\nIf True, default to binwidth=1 and draw the bars so that they arecentered on their corresponding data points. This avoids “gaps” that mayotherwise appear when using discrete (integer) data.\n\n\ncumulative\nbool\nFalse\nIf True, plot the cumulative counts as bins increase.\n\n\ncommon_bins\nbool\nTrue\nIf True, use the same bins when semantic variables produce multipleplots. If using a reference rule to determine the bins, it will be computedwith the full dataset.\n\n\ncommon_norm\nbool\nTrue\nIf True and using a normalized statistic, the normalization will apply overthe full dataset. Otherwise, normalize each histogram independently.\n\n\nmultiple\nstr\nlayer\nApproach to resolving multiple elements when semantic mapping creates subsets.Only relevant with univariate data.\n\n\nelement\nstr\nbars\nVisual representation of the histogram statistic.Only relevant with univariate data.\n\n\nfill\nbool\nTrue\nIf True, fill in the space under the histogram.Only relevant with univariate data.\n\n\nshrink\nint\n1\nHistogram appearance parameters\n\n\nkde\nbool\nFalse\nIf True, compute a kernel density estimate to smooth the distributionand show on the plot as (one or more) line(s).Only relevant with univariate data.\n\n\nkde_kws\nNoneType\nNone\nParameters that control the KDE computation, as in :func:kdeplot.\n\n\nline_kws\nNoneType\nNone\nHistogram smoothing with a kernel density estimate\n\n\nthresh\nint\n0\nCells with a statistic less than or equal to this value will be transparent.Only relevant with bivariate data.\n\n\npthresh\nNoneType\nNone\nLike thresh, but a value in [0, 1] such that cells with aggregate counts(or other statistics, when used) up to this proportion of the total will betransparent.\n\n\npmax\nNoneType\nNone\nA value in [0, 1] that sets that saturation point for the colormap at a valuesuch that cells below constitute this proportion of the total count (orother statistic, when used).\n\n\ncbar\nbool\nFalse\nIf True, add a colorbar to annotate the color mapping in a bivariate plot.Note: Does not currently support plots with a hue variable well.\n\n\ncbar_ax\nNoneType\nNone\nPre-existing axes for the colorbar.\n\n\ncbar_kws\nNoneType\nNone\nBivariate histogram parameters\n\n\npalette\nNoneType\nNone\nMethod for choosing the colors to use when mapping the hue semantic.String values are passed to :func:color_palette. List or dict valuesimply categorical mapping, while a colormap object implies numeric mapping.\n\n\nhue_order\nNoneType\nNone\nSpecify the order of processing and plotting for categorical levels of thehue semantic.\n\n\nhue_norm\nNoneType\nNone\nEither a pair of values that set the normalization range in data unitsor an object that will map from data units into a [0, 1] interval. Usageimplies numeric mapping.\n\n\ncolor\nNoneType\nNone\nHue mapping parameters\n\n\nlog_scale\nNoneType\nNone\nSet axis scale(s) to log. A single value sets the data axis for any numericaxes in the plot. A pair of values sets each axis independently.Numeric values are interpreted as the desired base (default 10).When None or False, seaborn defers to the existing Axes scale.\n\n\nlegend\nbool\nTrue\nIf False, suppress the legend for semantic variables.\n\n\nax\nNoneType\nNone\nAxes information\n\n\nReturns\n:class:matplotlib.axes.Axes\n\nThe matplotlib axes containing the plot.\n\n\n\n\n# we can use the same df\nsorted_df.head()\n\n\n\n\n\n\n\n\nkinase\nvalues\n\n\n\n\n68\nCK1G2\n189898.392\n\n\n294\nVRK2\n4191709.640\n\n\n8\nALPHAK3\n4573611.730\n\n\n249\nPRPK\n8495330.790\n\n\n38\nCAMLCK\n9413689.600\n\n\n\n\n\n\n\n\nplot_hist(sorted_df,'values')",
    "crumbs": [
      "Modules",
      "Plot"
    ]
  },
  {
    "objectID": "plot.html#bar-graph",
    "href": "plot.html#bar-graph",
    "title": "Plot",
    "section": "Bar graph",
    "text": "Bar graph\n\nsource\n\nplot_count\n\n plot_count (cnt, tick_spacing:float=None, palette:str='tab20')\n\nMake bar plot from df[‘x’].value_counts()\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ncnt\n\n\nfrom df[‘x’].value_counts()\n\n\ntick_spacing\nfloat\nNone\ntick spacing for x axis\n\n\npalette\nstr\ntab20\n\n\n\n\n\ncnt = info.Name.value_counts()\n\n\nplot_count(cnt)\n\n\n\n\n\n\n\n\n\nsource\n\n\nplot_bar\n\n plot_bar (df, value, group, title=None, figsize=(12, 5), fontsize=14,\n           dots=True, rotation=90, ascending=False, ymin=None, data=None,\n           x=None, y=None, hue=None, order=None, hue_order=None,\n           estimator='mean', errorbar=('ci', 95), n_boot=1000, seed=None,\n           units=None, weights=None, orient=None, color=None,\n           palette=None, saturation=0.75, fill=True, hue_norm=None,\n           width=0.8, dodge='auto', gap=0, log_scale=None,\n           native_scale=False, formatter=None, legend='auto', capsize=0,\n           err_kws=None, ci=&lt;deprecated&gt;, errcolor=&lt;deprecated&gt;,\n           errwidth=&lt;deprecated&gt;, ax=None)\n\nPlot bar graph from unstacked dataframe; need to indicate columns of values and categories\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\n\n\n\n\n\nvalue\n\n\ncolname of value\n\n\ngroup\n\n\ncolname of group\n\n\ntitle\nNoneType\nNone\n\n\n\nfigsize\ntuple\n(12, 5)\n\n\n\nfontsize\nint\n14\n\n\n\ndots\nbool\nTrue\nwhether or not add dots in the graph\n\n\nrotation\nint\n90\n\n\n\nascending\nbool\nFalse\n\n\n\nymin\nNoneType\nNone\n\n\n\ndata\nNoneType\nNone\nDataset for plotting. If x and y are absent, this isinterpreted as wide-form. Otherwise it is expected to be long-form.\n\n\nx\nNoneType\nNone\n\n\n\ny\nNoneType\nNone\n\n\n\nhue\nNoneType\nNone\n\n\n\norder\nNoneType\nNone\n\n\n\nhue_order\nNoneType\nNone\n\n\n\nestimator\nstr\nmean\nStatistical function to estimate within each categorical bin.\n\n\nerrorbar\ntuple\n(‘ci’, 95)\nName of errorbar method (either “ci”, “pi”, “se”, or “sd”), or a tuplewith a method name and a level parameter, or a function that maps from avector to a (min, max) interval, or None to hide errorbar. See the:doc:errorbar tutorial &lt;/tutorial/error_bars&gt; for more information... versionadded:: v0.12.0\n\n\nn_boot\nint\n1000\nNumber of bootstrap samples used to compute confidence intervals.\n\n\nseed\nNoneType\nNone\nSeed or random number generator for reproducible bootstrapping.\n\n\nunits\nNoneType\nNone\nIdentifier of sampling units; used by the errorbar function toperform a multilevel bootstrap and account for repeated measures\n\n\nweights\nNoneType\nNone\nData values or column used to compute weighted statistics.Note that the use of weights may limit other statistical options... versionadded:: v0.13.1\n\n\norient\nNoneType\nNone\nOrientation of the plot (vertical or horizontal). This is usuallyinferred based on the type of the input variables, but it can be usedto resolve ambiguity when both x and y are numeric or whenplotting wide-form data... versionchanged:: v0.13.0 Added ‘x’/‘y’ as options, equivalent to ‘v’/‘h’.\n\n\ncolor\nNoneType\nNone\nSingle color for the elements in the plot.\n\n\npalette\nNoneType\nNone\nColors to use for the different levels of the hue variable. Shouldbe something that can be interpreted by :func:color_palette, or adictionary mapping hue levels to matplotlib colors.\n\n\nsaturation\nfloat\n0.75\nProportion of the original saturation to draw fill colors in. Largepatches often look better with desaturated colors, but set this to1 if you want the colors to perfectly match the input values.\n\n\nfill\nbool\nTrue\nIf True, use a solid patch. Otherwise, draw as line art... versionadded:: v0.13.0\n\n\nhue_norm\nNoneType\nNone\nNormalization in data units for colormap applied to the huevariable when it is numeric. Not relevant if hue is categorical... versionadded:: v0.12.0\n\n\nwidth\nfloat\n0.8\nWidth allotted to each element on the orient axis. When native_scale=True,it is relative to the minimum distance between two values in the native scale.\n\n\ndodge\nstr\nauto\nWhen hue mapping is used, whether elements should be narrowed and shifted alongthe orient axis to eliminate overlap. If \"auto\", set to True when theorient variable is crossed with the categorical variable or False otherwise... versionchanged:: 0.13.0 Added \"auto\" mode as a new default.\n\n\ngap\nint\n0\nShrink on the orient axis by this factor to add a gap between dodged elements... versionadded:: 0.13.0\n\n\nlog_scale\nNoneType\nNone\nSet axis scale(s) to log. A single value sets the data axis for any numericaxes in the plot. A pair of values sets each axis independently.Numeric values are interpreted as the desired base (default 10).When None or False, seaborn defers to the existing Axes scale... versionadded:: v0.13.0\n\n\nnative_scale\nbool\nFalse\nWhen True, numeric or datetime values on the categorical axis will maintaintheir original scaling rather than being converted to fixed indices... versionadded:: v0.13.0\n\n\nformatter\nNoneType\nNone\nFunction for converting categorical data into strings. Affects both groupingand tick labels... versionadded:: v0.13.0\n\n\nlegend\nstr\nauto\nHow to draw the legend. If “brief”, numeric hue and sizevariables will be represented with a sample of evenly spaced values.If “full”, every group will get an entry in the legend. If “auto”,choose between brief or full representation based on number of levels.If False, no legend data is added and no legend is drawn... versionadded:: v0.13.0\n\n\ncapsize\nint\n0\nWidth of the “caps” on error bars, relative to bar spacing.\n\n\nerr_kws\nNoneType\nNone\nParameters of :class:matplotlib.lines.Line2D, for the error bar artists... versionadded:: v0.13.0\n\n\nci\nDeprecated\n\nLevel of the confidence interval to show, in [0, 100]... deprecated:: v0.12.0 Use errorbar=(\"ci\", ...).\n\n\nerrcolor\nDeprecated\n\nColor used for the error bar lines... deprecated:: 0.13.0 Use err_kws={'color': ...}.\n\n\nerrwidth\nDeprecated\n\nThickness of error bar lines (and caps), in points... deprecated:: 0.13.0 Use err_kws={'linewidth': ...}.\n\n\nax\nNoneType\nNone\nAxes object to draw the plot onto, otherwise uses the current Axes.\n\n\nReturns\nmatplotlib Axes\n\nReturns the Axes object with the plot drawn onto it. \n\n\n\n\ninfo['cat'] = (info.pKa1&gt;2).astype(int)\n\n\n# get an unstacked dataframe\nplot_bar(info,value='MW',group='cat',palette='tab20')\n\n\n\n\n\n\n\n\n\nsource\n\n\nplot_group_bar\n\n plot_group_bar (df, value_cols, group, figsize=(12, 5), order=None,\n                 title=None, fontsize=14, rotation=90, data=None, x=None,\n                 y=None, hue=None, hue_order=None, estimator='mean',\n                 errorbar=('ci', 95), n_boot=1000, seed=None, units=None,\n                 weights=None, orient=None, color=None, palette=None,\n                 saturation=0.75, fill=True, hue_norm=None, width=0.8,\n                 dodge='auto', gap=0, log_scale=None, native_scale=False,\n                 formatter=None, legend='auto', capsize=0, err_kws=None,\n                 ci=&lt;deprecated&gt;, errcolor=&lt;deprecated&gt;,\n                 errwidth=&lt;deprecated&gt;, ax=None)\n\nPlot grouped bar graph from dataframe.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\n\n\n\n\n\nvalue_cols\n\n\nlist of column names for values, the order depends on the first item\n\n\ngroup\n\n\ncolumn name of group (e.g., ‘kinase’)\n\n\nfigsize\ntuple\n(12, 5)\n\n\n\norder\nNoneType\nNone\n\n\n\ntitle\nNoneType\nNone\n\n\n\nfontsize\nint\n14\n\n\n\nrotation\nint\n90\n\n\n\ndata\nNoneType\nNone\nDataset for plotting. If x and y are absent, this isinterpreted as wide-form. Otherwise it is expected to be long-form.\n\n\nx\nNoneType\nNone\n\n\n\ny\nNoneType\nNone\n\n\n\nhue\nNoneType\nNone\n\n\n\nhue_order\nNoneType\nNone\n\n\n\nestimator\nstr\nmean\nStatistical function to estimate within each categorical bin.\n\n\nerrorbar\ntuple\n(‘ci’, 95)\nName of errorbar method (either “ci”, “pi”, “se”, or “sd”), or a tuplewith a method name and a level parameter, or a function that maps from avector to a (min, max) interval, or None to hide errorbar. See the:doc:errorbar tutorial &lt;/tutorial/error_bars&gt; for more information... versionadded:: v0.12.0\n\n\nn_boot\nint\n1000\nNumber of bootstrap samples used to compute confidence intervals.\n\n\nseed\nNoneType\nNone\nSeed or random number generator for reproducible bootstrapping.\n\n\nunits\nNoneType\nNone\nIdentifier of sampling units; used by the errorbar function toperform a multilevel bootstrap and account for repeated measures\n\n\nweights\nNoneType\nNone\nData values or column used to compute weighted statistics.Note that the use of weights may limit other statistical options... versionadded:: v0.13.1\n\n\norient\nNoneType\nNone\nOrientation of the plot (vertical or horizontal). This is usuallyinferred based on the type of the input variables, but it can be usedto resolve ambiguity when both x and y are numeric or whenplotting wide-form data... versionchanged:: v0.13.0 Added ‘x’/‘y’ as options, equivalent to ‘v’/‘h’.\n\n\ncolor\nNoneType\nNone\nSingle color for the elements in the plot.\n\n\npalette\nNoneType\nNone\nColors to use for the different levels of the hue variable. Shouldbe something that can be interpreted by :func:color_palette, or adictionary mapping hue levels to matplotlib colors.\n\n\nsaturation\nfloat\n0.75\nProportion of the original saturation to draw fill colors in. Largepatches often look better with desaturated colors, but set this to1 if you want the colors to perfectly match the input values.\n\n\nfill\nbool\nTrue\nIf True, use a solid patch. Otherwise, draw as line art... versionadded:: v0.13.0\n\n\nhue_norm\nNoneType\nNone\nNormalization in data units for colormap applied to the huevariable when it is numeric. Not relevant if hue is categorical... versionadded:: v0.12.0\n\n\nwidth\nfloat\n0.8\nWidth allotted to each element on the orient axis. When native_scale=True,it is relative to the minimum distance between two values in the native scale.\n\n\ndodge\nstr\nauto\nWhen hue mapping is used, whether elements should be narrowed and shifted alongthe orient axis to eliminate overlap. If \"auto\", set to True when theorient variable is crossed with the categorical variable or False otherwise... versionchanged:: 0.13.0 Added \"auto\" mode as a new default.\n\n\ngap\nint\n0\nShrink on the orient axis by this factor to add a gap between dodged elements... versionadded:: 0.13.0\n\n\nlog_scale\nNoneType\nNone\nSet axis scale(s) to log. A single value sets the data axis for any numericaxes in the plot. A pair of values sets each axis independently.Numeric values are interpreted as the desired base (default 10).When None or False, seaborn defers to the existing Axes scale... versionadded:: v0.13.0\n\n\nnative_scale\nbool\nFalse\nWhen True, numeric or datetime values on the categorical axis will maintaintheir original scaling rather than being converted to fixed indices... versionadded:: v0.13.0\n\n\nformatter\nNoneType\nNone\nFunction for converting categorical data into strings. Affects both groupingand tick labels... versionadded:: v0.13.0\n\n\nlegend\nstr\nauto\nHow to draw the legend. If “brief”, numeric hue and sizevariables will be represented with a sample of evenly spaced values.If “full”, every group will get an entry in the legend. If “auto”,choose between brief or full representation based on number of levels.If False, no legend data is added and no legend is drawn... versionadded:: v0.13.0\n\n\ncapsize\nint\n0\nWidth of the “caps” on error bars, relative to bar spacing.\n\n\nerr_kws\nNoneType\nNone\nParameters of :class:matplotlib.lines.Line2D, for the error bar artists... versionadded:: v0.13.0\n\n\nci\nDeprecated\n\nLevel of the confidence interval to show, in [0, 100]... deprecated:: v0.12.0 Use errorbar=(\"ci\", ...).\n\n\nerrcolor\nDeprecated\n\nColor used for the error bar lines... deprecated:: 0.13.0 Use err_kws={'color': ...}.\n\n\nerrwidth\nDeprecated\n\nThickness of error bar lines (and caps), in points... deprecated:: 0.13.0 Use err_kws={'linewidth': ...}.\n\n\nax\nNoneType\nNone\nAxes object to draw the plot onto, otherwise uses the current Axes.\n\n\nReturns\nmatplotlib Axes\n\nReturns the Axes object with the plot drawn onto it. \n\n\n\n\nplot_group_bar(info,['pKa1','pKb2'],'Name')",
    "crumbs": [
      "Modules",
      "Plot"
    ]
  },
  {
    "objectID": "plot.html#stacked-bar-graph",
    "href": "plot.html#stacked-bar-graph",
    "title": "Plot",
    "section": "Stacked bar graph",
    "text": "Stacked bar graph\n\nsource\n\nplot_stacked\n\n plot_stacked (df, column, hue, figsize=(5, 4), xlabel=None, ylabel=None,\n               add_value=True, **kwargs)",
    "crumbs": [
      "Modules",
      "Plot"
    ]
  },
  {
    "objectID": "plot.html#violin-plot",
    "href": "plot.html#violin-plot",
    "title": "Plot",
    "section": "Violin plot",
    "text": "Violin plot\n\nsource\n\nplot_violin\n\n plot_violin (data, value='value', group='variable', ylabel=None,\n              dots=True, figsize=(5, 3), **kwargs)\n\nPlot violin plots (with optional strip dots) for long-form data.\n\n# plot_violin(data,ylabel='Accuracy',figsize=(4,3))\n\n\nsource\n\n\nadd_stats\n\n add_stats (ax, data, value='value', group='variable', pairs=None,\n            test='t-test_ind', loc='inside', text_format='star', **kwargs)",
    "crumbs": [
      "Modules",
      "Plot"
    ]
  },
  {
    "objectID": "plot.html#box-plot",
    "href": "plot.html#box-plot",
    "title": "Plot",
    "section": "Box plot",
    "text": "Box plot\n\nsource\n\nplot_box\n\n plot_box (df, value, group, title=None, figsize=(6, 3), fontsize=14,\n           dots=True, rotation=90, data=None, x=None, y=None, hue=None,\n           order=None, hue_order=None, orient=None, color=None,\n           palette=None, saturation=0.75, fill=True, dodge='auto',\n           width=0.8, gap=0, whis=1.5, linecolor='auto', linewidth=None,\n           fliersize=None, hue_norm=None, native_scale=False,\n           log_scale=None, formatter=None, legend='auto', ax=None)\n\nPlot box plot.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\n\n\n\n\n\nvalue\n\n\ncolname of value\n\n\ngroup\n\n\ncolname of group\n\n\ntitle\nNoneType\nNone\n\n\n\nfigsize\ntuple\n(6, 3)\n\n\n\nfontsize\nint\n14\n\n\n\ndots\nbool\nTrue\n\n\n\nrotation\nint\n90\n\n\n\ndata\nNoneType\nNone\nDataset for plotting. If x and y are absent, this isinterpreted as wide-form. Otherwise it is expected to be long-form.\n\n\nx\nNoneType\nNone\n\n\n\ny\nNoneType\nNone\n\n\n\nhue\nNoneType\nNone\n\n\n\norder\nNoneType\nNone\n\n\n\nhue_order\nNoneType\nNone\n\n\n\norient\nNoneType\nNone\nOrientation of the plot (vertical or horizontal). This is usuallyinferred based on the type of the input variables, but it can be usedto resolve ambiguity when both x and y are numeric or whenplotting wide-form data... versionchanged:: v0.13.0 Added ‘x’/‘y’ as options, equivalent to ‘v’/‘h’.\n\n\ncolor\nNoneType\nNone\nSingle color for the elements in the plot.\n\n\npalette\nNoneType\nNone\nColors to use for the different levels of the hue variable. Shouldbe something that can be interpreted by :func:color_palette, or adictionary mapping hue levels to matplotlib colors.\n\n\nsaturation\nfloat\n0.75\nProportion of the original saturation to draw fill colors in. Largepatches often look better with desaturated colors, but set this to1 if you want the colors to perfectly match the input values.\n\n\nfill\nbool\nTrue\nIf True, use a solid patch. Otherwise, draw as line art... versionadded:: v0.13.0\n\n\ndodge\nstr\nauto\nWhen hue mapping is used, whether elements should be narrowed and shifted alongthe orient axis to eliminate overlap. If \"auto\", set to True when theorient variable is crossed with the categorical variable or False otherwise... versionchanged:: 0.13.0 Added \"auto\" mode as a new default.\n\n\nwidth\nfloat\n0.8\nWidth allotted to each element on the orient axis. When native_scale=True,it is relative to the minimum distance between two values in the native scale.\n\n\ngap\nint\n0\nShrink on the orient axis by this factor to add a gap between dodged elements... versionadded:: 0.13.0\n\n\nwhis\nfloat\n1.5\nParamater that controls whisker length. If scalar, whiskers are drawnto the farthest datapoint within whis  IQR* from the nearest hinge.If a tuple, it is interpreted as percentiles that whiskers represent.\n\n\nlinecolor\nstr\nauto\nColor to use for line elements, when fill is True... versionadded:: v0.13.0\n\n\nlinewidth\nNoneType\nNone\nWidth of the lines that frame the plot elements.\n\n\nfliersize\nNoneType\nNone\nSize of the markers used to indicate outlier observations.\n\n\nhue_norm\nNoneType\nNone\nNormalization in data units for colormap applied to the huevariable when it is numeric. Not relevant if hue is categorical... versionadded:: v0.12.0\n\n\nnative_scale\nbool\nFalse\nWhen True, numeric or datetime values on the categorical axis will maintaintheir original scaling rather than being converted to fixed indices... versionadded:: v0.13.0\n\n\nlog_scale\nNoneType\nNone\nSet axis scale(s) to log. A single value sets the data axis for any numericaxes in the plot. A pair of values sets each axis independently.Numeric values are interpreted as the desired base (default 10).When None or False, seaborn defers to the existing Axes scale... versionadded:: v0.13.0\n\n\nformatter\nNoneType\nNone\nFunction for converting categorical data into strings. Affects both groupingand tick labels... versionadded:: v0.13.0\n\n\nlegend\nstr\nauto\nHow to draw the legend. If “brief”, numeric hue and sizevariables will be represented with a sample of evenly spaced values.If “full”, every group will get an entry in the legend. If “auto”,choose between brief or full representation based on number of levels.If False, no legend data is added and no legend is drawn... versionadded:: v0.13.0\n\n\nax\nNoneType\nNone\nAxes object to draw the plot onto, otherwise uses the current Axes.\n\n\nReturns\nmatplotlib Axes\n\nReturns the Axes object with the plot drawn onto it. \n\n\n\n\nplot_box(info,value='MW',group='cat',palette='tab20')",
    "crumbs": [
      "Modules",
      "Plot"
    ]
  },
  {
    "objectID": "plot.html#pearson-correlation",
    "href": "plot.html#pearson-correlation",
    "title": "Plot",
    "section": "Pearson correlation",
    "text": "Pearson correlation\n\nsource\n\nplot_corr\n\n plot_corr (df, x, y, text_location=(0.8, 0.1), method='spearman',\n            index_list=None, hue=None, reg_line=True, data=None,\n            x_estimator=None, x_bins=None, x_ci='ci', scatter=True,\n            fit_reg=True, ci=95, n_boot=1000, units=None, seed=None,\n            order=1, logistic=False, lowess=False, robust=False,\n            logx=False, x_partial=None, y_partial=None, truncate=True,\n            dropna=True, x_jitter=None, y_jitter=None, label=None,\n            color=None, marker='o', scatter_kws=None, line_kws=None,\n            ax=None)\n\nGiven a dataframe and the name of two columns, plot the two columns’ correlation with either Pearson or Spearman. Annotate points if their index is in index_list.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\n\n\ndataframe that contains data\n\n\nx\n\n\nx axis values, or colname of x axis\n\n\ny\n\n\ny axis values, or colname of y axis\n\n\ntext_location\ntuple\n(0.8, 0.1)\nrelative coords in Axes (0–1)\n\n\nmethod\nstr\nspearman\ncorrelation method: ‘pearson’ or ‘spearman’\n\n\nindex_list\nNoneType\nNone\nlist of indices to annotate\n\n\nhue\nNoneType\nNone\n\n\n\nreg_line\nbool\nTrue\n\n\n\ndata\nNoneType\nNone\nTidy (“long-form”) dataframe where each column is a variable and eachrow is an observation.\n\n\nx_estimator\nNoneType\nNone\nApply this function to each unique value of x and plot theresulting estimate. This is useful when x is a discrete variable.If x_ci is given, this estimate will be bootstrapped and aconfidence interval will be drawn.\n\n\nx_bins\nNoneType\nNone\nBin the x variable into discrete bins and then estimate the centraltendency and a confidence interval. This binning only influences howthe scatterplot is drawn; the regression is still fit to the originaldata. This parameter is interpreted either as the number ofevenly-sized (not necessary spaced) bins or the positions of the bincenters. When this parameter is used, it implies that the default ofx_estimator is numpy.mean.\n\n\nx_ci\nstr\nci\nSize of the confidence interval used when plotting a central tendencyfor discrete values of x. If \"ci\", defer to the value of theci parameter. If \"sd\", skip bootstrapping and show thestandard deviation of the observations in each bin.\n\n\nscatter\nbool\nTrue\nIf True, draw a scatterplot with the underlying observations (orthe x_estimator values).\n\n\nfit_reg\nbool\nTrue\nIf True, estimate and plot a regression model relating the xand y variables.\n\n\nci\nint\n95\nSize of the confidence interval for the regression estimate. This willbe drawn using translucent bands around the regression line. Theconfidence interval is estimated using a bootstrap; for largedatasets, it may be advisable to avoid that computation by settingthis parameter to None.\n\n\nn_boot\nint\n1000\nNumber of bootstrap resamples used to estimate the ci. The defaultvalue attempts to balance time and stability; you may want to increasethis value for “final” versions of plots.\n\n\nunits\nNoneType\nNone\nIf the x and y observations are nested within sampling units,those can be specified here. This will be taken into account whencomputing the confidence intervals by performing a multilevel bootstrapthat resamples both units and observations (within unit). This does nototherwise influence how the regression is estimated or drawn.\n\n\nseed\nNoneType\nNone\nSeed or random number generator for reproducible bootstrapping.\n\n\norder\nint\n1\nIf order is greater than 1, use numpy.polyfit to estimate apolynomial regression.\n\n\nlogistic\nbool\nFalse\nIf True, assume that y is a binary variable and usestatsmodels to estimate a logistic regression model. Note that thisis substantially more computationally intensive than linear regression,so you may wish to decrease the number of bootstrap resamples(n_boot) or set ci to None.\n\n\nlowess\nbool\nFalse\nIf True, use statsmodels to estimate a nonparametric lowessmodel (locally weighted linear regression). Note that confidenceintervals cannot currently be drawn for this kind of model.\n\n\nrobust\nbool\nFalse\nIf True, use statsmodels to estimate a robust regression. Thiswill de-weight outliers. Note that this is substantially morecomputationally intensive than standard linear regression, so you maywish to decrease the number of bootstrap resamples (n_boot) or setci to None.\n\n\nlogx\nbool\nFalse\nIf True, estimate a linear regression of the form y ~ log(x), butplot the scatterplot and regression model in the input space. Note thatx must be positive for this to work.\n\n\nx_partial\nNoneType\nNone\n\n\n\ny_partial\nNoneType\nNone\n\n\n\ntruncate\nbool\nTrue\nIf True, the regression line is bounded by the data limits. IfFalse, it extends to the x axis limits.\n\n\ndropna\nbool\nTrue\n\n\n\nx_jitter\nNoneType\nNone\n\n\n\ny_jitter\nNoneType\nNone\n\n\n\nlabel\nNoneType\nNone\nLabel to apply to either the scatterplot or regression line (ifscatter is False) for use in a legend.\n\n\ncolor\nNoneType\nNone\nColor to apply to all plot elements; will be superseded by colorspassed in scatter_kws or line_kws.\n\n\nmarker\nstr\no\nMarker to use for the scatterplot glyphs.\n\n\nscatter_kws\nNoneType\nNone\n\n\n\nline_kws\nNoneType\nNone\n\n\n\nax\nNoneType\nNone\nAxes object to draw the plot onto, otherwise uses the current Axes.\n\n\nReturns\nmatplotlib Axes\n\nThe Axes object containing the plot.\n\n\n\n\nnorm = Data.get_pspa_st_norm().iloc[:,:-6].T\n\nnorm.head()\n\n\n\n\n\n\n\nkinase\nAAK1\nACVR2A\nACVR2B\nAKT1\nAKT2\nAKT3\nALK2\nALK4\nALPHAK3\nAMPKA1\n...\nVRK1\nVRK2\nWNK1\nWNK3\nWNK4\nYANK2\nYANK3\nYSK1\nYSK4\nZAK\n\n\n\n\n-5P\n0.0720\n0.0415\n0.0533\n0.0603\n0.0602\n0.0705\n0.0536\n0.0552\n0.0571\n0.0555\n...\n0.0710\n0.0684\n0.0482\n0.0413\n0.0369\n0.0580\n0.0625\n0.0590\n0.0593\n0.0604\n\n\n-5G\n0.0245\n0.0481\n0.0517\n0.0594\n0.0617\n0.0624\n0.0659\n0.0574\n0.0478\n0.0504\n...\n0.0786\n0.0676\n0.0510\n0.0572\n0.0523\n0.0699\n0.0776\n0.0713\n0.0728\n0.0641\n\n\n-5A\n0.0284\n0.0584\n0.0566\n0.0552\n0.0643\n0.0745\n0.0662\n0.0605\n0.0253\n0.0534\n...\n0.0633\n0.0636\n0.0555\n0.0503\n0.0539\n0.0637\n0.0647\n0.0731\n0.0744\n0.0659\n\n\n-5C\n0.0456\n0.0489\n0.0772\n0.0605\n0.0582\n0.0628\n0.0762\n0.0483\n0.0384\n0.0588\n...\n0.0641\n0.0644\n0.0576\n0.0732\n0.0544\n0.0602\n0.0598\n0.0606\n0.0734\n0.0631\n\n\n-5S\n0.0425\n0.0578\n0.0533\n0.0516\n0.0534\n0.0442\n0.0567\n0.0574\n0.0571\n0.0504\n...\n0.0595\n0.0573\n0.0561\n0.0569\n0.0580\n0.0580\n0.0545\n0.0542\n0.0597\n0.0597\n\n\n\n\n5 rows × 303 columns\n\n\n\n\nplot_corr(df=norm, x='AAK1', y='BIKE')",
    "crumbs": [
      "Modules",
      "Plot"
    ]
  },
  {
    "objectID": "plot.html#matrix-heatmap",
    "href": "plot.html#matrix-heatmap",
    "title": "Plot",
    "section": "Matrix heatmap",
    "text": "Matrix heatmap\n\nsource\n\nget_similarity\n\n get_similarity (df, metric='euclidean')\n\nCalculate distance matrix of a df; also return inverse df (similarity df)\n\nsource\n\n\nplot_corr\n\n plot_corr (df_corr, inverse_color=False)\n\nPlot distance/similarity matrix\n\ncorr = info.head(8).corr(numeric_only=True)\n\n\nplot_corr(corr)",
    "crumbs": [
      "Modules",
      "Plot"
    ]
  },
  {
    "objectID": "plot.html#aucdf",
    "href": "plot.html#aucdf",
    "title": "Plot",
    "section": "AUCDF",
    "text": "AUCDF\nWe compute the area under the empirical cumulative distribution function (CDF) as a function of kinase rank using the trapezoidal rule.\nLet $ r_{(1)} &lt; r_{(2)} &lt; &lt; r_{(n)} $ be the sorted rank values (e.g., \\(1,2,\\dots,n\\)), and define the empirical CDF values as:\n\\[\nF(r_{(i)}) = \\frac{i}{n}\n\\]\nThe normalized area under this CDF-vs-rank curve (AUCDF) is then computed via the trapezoidal rule:\n\\[\n\\text{AUC}_{\\text{CDF}} =\n\\frac{1}{r_{\\max} - r_{\\min}} \\sum_{i=1}^{n-1}\n\\frac{F(r_{(i)}) + F(r_{(i+1)})}{2} \\cdot (r_{(i+1)} - r_{(i)})\n\\]\nwhere $ r_{} = r_{(1)} $, typically 1; $ r_{} = r_{(n)} $, typically \\(n\\).\nThis measures how quickly the cumulative mass increases across the ranked kinases. If better kinases (lower rank) tend to appear earlier in the CDF, the AUCDF will be higher.\n\nsource\n\nget_AUCDF\n\n get_AUCDF (df, col, reverse=False, plot=True, xlabel='Rank of reported\n            kinase')\n\nPlot CDF curve and get relative area under the curve\n\nget_AUCDF(sorted_df,'values')\n\n\n\n\n\n\n\n\nnp.float64(0.872608302329996)",
    "crumbs": [
      "Modules",
      "Plot"
    ]
  },
  {
    "objectID": "plot.html#confusion-matrix",
    "href": "plot.html#confusion-matrix",
    "title": "Plot",
    "section": "Confusion matrix",
    "text": "Confusion matrix\n\nsource\n\nplot_confusion_matrix\n\n plot_confusion_matrix (target, pred, class_names:list=['0', '1'],\n                        normalize=False, title='Confusion matrix',\n                        cmap=&lt;matplotlib.colors.LinearSegmentedColormap\n                        object at 0x7f4bf473bfa0&gt;)\n\nPlot the confusion matrix.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ntarget\n\n\npd.Series\n\n\npred\n\n\npd.Series\n\n\nclass_names\nlist\n[‘0’, ‘1’]\n\n\n\nnormalize\nbool\nFalse\n\n\n\ntitle\nstr\nConfusion matrix\n\n\n\ncmap\nLinearSegmentedColormap\n&lt;matplotlib.colors.LinearSegmentedColormap object at 0x7f4bf473bfa0&gt;\n\n\n\n\n\ntarget = info.MW&lt;160\npred = info.pKa1&gt;2.1\n\n\nplot_confusion_matrix(target,pred,normalize=True)\n\nNormalized confusion matrix",
    "crumbs": [
      "Modules",
      "Plot"
    ]
  },
  {
    "objectID": "plot.html#pie-plot",
    "href": "plot.html#pie-plot",
    "title": "Plot",
    "section": "Pie plot",
    "text": "Pie plot\n\nsource\n\nplot_pie\n\n plot_pie (value_counts, hue_order=None, labeldistance=0.8, fontsize=12,\n           fontcolor='black', palette='tab20', figsize=(4, 3))\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nvalue_counts\n\n\nvalue counts\n\n\nhue_order\nNoneType\nNone\nlist of strings\n\n\nlabeldistance\nfloat\n0.8\n\n\n\nfontsize\nint\n12\n\n\n\nfontcolor\nstr\nblack\n\n\n\npalette\nstr\ntab20\n\n\n\nfigsize\ntuple\n(4, 3)\n\n\n\n\n\ninfo=Data.get_kinase_info()\n\n\nplot_pie(info.modi_group.value_counts(),\n         fontsize=10,\n         labeldistance=1)",
    "crumbs": [
      "Modules",
      "Plot"
    ]
  },
  {
    "objectID": "plot.html#bar-composition",
    "href": "plot.html#bar-composition",
    "title": "Plot",
    "section": "Bar composition",
    "text": "Bar composition\n\nsource\n\ncalculate_pct\n\n calculate_pct (df, bin_col, hue_col)\n\nGet percentage for hue in each bin; with hue adding up to 1 in each bin.\n\nsource\n\n\nplot_composition\n\n plot_composition (df, bin_col, hue_col, palette='tab20',\n                   legend_title=None, rotate=45, xlabel=None,\n                   ylabel='Percentage', figsize=(5, 3))",
    "crumbs": [
      "Modules",
      "Plot"
    ]
  },
  {
    "objectID": "plot.html#plot-bar-count-with-value-text",
    "href": "plot.html#plot-bar-count-with-value-text",
    "title": "Plot",
    "section": "Plot bar count with value text",
    "text": "Plot bar count with value text\n\nsource\n\nplot_cnt\n\n plot_cnt (cnt, xlabel=None, ylabel='Count', figsize=(6, 3))",
    "crumbs": [
      "Modules",
      "Plot"
    ]
  },
  {
    "objectID": "plot.html#end",
    "href": "plot.html#end",
    "title": "Plot",
    "section": "End",
    "text": "End",
    "crumbs": [
      "Modules",
      "Plot"
    ]
  },
  {
    "objectID": "feature.html#utils",
    "href": "feature.html#utils",
    "title": "Feature",
    "section": "Utils",
    "text": "Utils\n\nsource\n\nremove_hi_corr\n\n remove_hi_corr (df:pandas.core.frame.DataFrame, thr:float=0.98)\n\nRemove highly correlated features in a dataframe given a pearson threshold\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\nDataFrame\n\n\n\n\nthr\nfloat\n0.98\nthreshold\n\n\n\nremove_hi_corr is a function to remove highly correlated features based on threshold of Pearson correlation between features.\n\n# Load data\ndf = Data.get_aa_rdkit()\ndf.shape\n\n(25, 106)\n\n\n\nremove_hi_corr(df,thr=0.9).shape\n\n(25, 78)\n\n\n\nsource\n\n\npreprocess\n\n preprocess (df:pandas.core.frame.DataFrame, thr:float=0.98)\n\nRemove features with no variance, and highly correlated features based on threshold\nThis function is similar to remove_hi_corr, but can additionaly remove features of zero variance (e.g., 1 across all samples)\n\npreprocess(df,thr=0.9).shape\n\nremoving columns: {'Chi2v', 'NumAromaticRings', 'fr_SH', 'RingCount', 'Chi2n', 'Chi0v', 'Chi1', 'NumHeteroatoms', 'Ipc', 'SMR_VSA1', 'fr_NH2', 'VSA_EState10', 'SMR_VSA9', 'Kappa1', 'SlogP_VSA5', 'Chi1v', 'VSA_EState2', 'NumAromaticCarbocycles', 'fr_Ar_N', 'Chi0n', 'Chi4v', 'VSA_EState6', 'Chi3v', 'Chi3n', 'NumHDonors', 'NOCount', 'Chi4n', 'NumRotatableBonds'}\n\n\n(25, 78)\n\n\n\nsource\n\n\nstandardize\n\n standardize (df)\n\nStandardize features from a df",
    "crumbs": [
      "Modules",
      "Feature"
    ]
  },
  {
    "objectID": "feature.html#compound-features",
    "href": "feature.html#compound-features",
    "title": "Feature",
    "section": "Compound features",
    "text": "Compound features\n\nRDKit descriptors\n\nsource\n\n\nget_rdkit\n\n get_rdkit (SMILES)\n\nExtract chemical features from SMILES Reference: https://greglandrum.github.io/rdkit-blog/posts/2022-12-23-descriptor-tutorial.html\n\nsource\n\n\nget_rdkit_3d\n\n get_rdkit_3d (SMILES)\n\nExtract 3d features from SMILES\n\nsource\n\n\nget_rdkit_all\n\n get_rdkit_all (SMILES)\n\nExtract chemical features and 3d features from SMILES\n\nsource\n\n\nget_rdkit_df\n\n get_rdkit_df (df, col, postprocess=True)\n\nExtract rdkit features (including 3d) from SMILES in a df\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\n\n\n\n\n\ncol\n\n\ncolumn of SMILES\n\n\npostprocess\nbool\nTrue\nremove redundant columns and standardize features for dimension reduction\n\n\n\n\naa = Data.get_aa_info()\naa.head()\n\n\n\n\n\n\n\n\nName\nSMILES\nMW\npKa1\npKb2\npKx3\npl4\nH\nVSC\nP1\nP2\nSASA\nNCISC\nphospho\n\n\naa\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA\nAlanine\nC[C@@H](C(=O)O)N\n89.10\n2.34\n9.69\nNaN\n6.00\n0.62\n27.5\n8.1\n0.046\n1.181\n0.007187\n0\n\n\nC\nCysteine\nC([C@@H](C(=O)O)N)S\n121.16\n1.96\n10.28\n8.18\n5.07\n0.29\n44.6\n5.5\n0.128\n1.461\n-0.036610\n0\n\n\nD\nAspartic acid\nC([C@@H](C(=O)O)N)C(=O)O\n133.11\n1.88\n9.60\n3.65\n2.77\n-0.90\n40.0\n13.0\n0.105\n1.587\n-0.023820\n0\n\n\nE\nGlutamic acid\nC(CC(=O)O)[C@@H](C(=O)O)N\n147.13\n2.19\n9.67\n4.25\n3.22\n-0.74\n62.0\n12.3\n0.151\n1.862\n0.006802\n0\n\n\nF\nPhenylalanine\nc1ccc(cc1)C[C@@H](C(=O)O)N\n165.19\n1.83\n9.13\nNaN\n5.48\n1.19\n115.5\n5.2\n0.290\n2.228\n0.037552\n0\n\n\n\n\n\n\n\n\naa_rdkit = get_rdkit_df(aa, 'SMILES')\naa_rdkit.head()\n\nremoving columns: {'fr_morpholine', 'fr_lactone', 'fr_ester', 'fr_Nhpyrrole', 'NumAliphaticCarbocycles', 'SlogP_VSA6', 'fr_thiophene', 'fr_Ndealkylation2', 'SlogP_VSA9', 'fr_nitro', 'fr_C_S', 'fr_dihydropyridine', 'fr_Ar_OH', 'NumSaturatedRings', 'fr_Ar_COO', 'fr_ether', 'fr_azide', 'fr_Imine', 'fr_benzene', 'Chi1n', 'fr_sulfonamd', 'fr_bicyclic', 'fr_phos_ester', 'fr_piperdine', 'fr_oxazole', 'fr_COO', 'fr_sulfone', 'NumSaturatedHeterocycles', 'Eccentricity', 'MolMR', 'fr_ketone', 'Chi0', 'BCUT2D_MRHI', 'PEOE_VSA5', 'SMR_VSA8', 'fr_methoxy', 'fr_alkyl_halide', 'SlogP_VSA11', 'fr_oxime', 'fr_N_O', 'ExactMolWt', 'fr_Al_OH_noTert', 'fr_pyridine', 'fr_isocyan', 'fr_amide', 'fr_imide', 'fr_guanido', 'fr_allylic_oxid', 'fr_HOCCN', 'fr_ketone_Topliss', 'fr_nitrile', 'fr_furan', 'MaxEStateIndex', 'fr_phos_acid', 'SlogP_VSA7', 'fr_nitro_arom_nonortho', 'fr_nitroso', 'MaxPartialCharge', 'NumBridgeheadAtoms', 'fr_Ar_NH', 'NumAliphaticRings', 'fr_quatN', 'fr_aldehyde', 'HeavyAtomMolWt', 'LabuteASA', 'NumSpiroAtoms', 'fr_prisulfonamd', 'fr_urea', 'fr_COO2', 'fr_aryl_methyl', 'fr_epoxide', 'fr_hdrzine', 'fr_isothiocyan', 'fr_halogen', 'NumAmideBonds', 'fr_piperzine', 'MinAbsPartialCharge', 'fr_alkyl_carbamate', 'fr_phenol', 'fr_thiazole', 'fr_ArN', 'fr_term_acetylene', 'fr_phenol_noOrthoHbond', 'fr_nitro_arom', 'fr_diazo', 'fr_azo', 'fr_hdrzone', 'PMI3', 'NumSaturatedCarbocycles', 'fr_thiocyan', 'fr_lactam', 'NumRadicalElectrons', 'SlogP_VSA10', 'SlogP_VSA12', 'NumValenceElectrons', 'fr_amidine', 'EState_VSA11', 'fr_para_hydroxylation', 'fr_barbitur', 'SMR_VSA2', 'HeavyAtomCount', 'fr_aniline', 'fr_tetrazole', 'fr_Ndealkylation1', 'Asphericity', 'VSA_EState1', 'fr_C_O_noCOO', 'fr_benzodiazepine', 'PEOE_VSA13'}\n\n\n\n\n\n\n\n\n\nMaxAbsEStateIndex\nMinAbsEStateIndex\nMinEStateIndex\nqed\nSPS\nMolWt\nMinPartialCharge\nMaxAbsPartialCharge\nFpDensityMorgan1\nFpDensityMorgan2\n...\nfr_sulfide\nfr_unbrch_alkane\nPMI1\nPMI2\nNPR1\nNPR2\nRadiusOfGyration\nInertialShapeFactor\nSpherocityIndex\nPBF\n\n\naa\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA\n-1.653421\n1.218945\n0.407753\n-0.383393\n-0.070345\n-1.523488\n0.218275\n-0.295105\n1.732180\n0.163309\n...\n-0.204124\n-0.369274\n-1.294800\n-1.086763\n1.710287\n1.057430\n-1.514798\n1.952520\n0.622167\n-1.068611\n\n\nC\n-1.058215\n-0.588000\n0.372307\n-0.641865\n-0.138884\n-0.727067\n0.223839\n-0.298132\n1.732180\n1.481227\n...\n-0.204124\n-0.369274\n-0.445607\n-0.885625\n1.398986\n-2.080741\n-0.970023\n-0.247854\n0.617683\n-0.493157\n\n\nD\n-0.764466\n0.554854\n0.126078\n-0.376981\n-0.390192\n-0.430473\n0.020085\n-0.187297\n-0.934412\n-1.234483\n...\n-0.204124\n-0.369274\n-0.724059\n-0.459223\n-0.441549\n0.454216\n-0.332705\n0.426131\n0.316338\n0.080717\n\n\nE\n-0.283221\n-1.143984\n0.235448\n-0.051582\n-0.406185\n-0.082096\n0.010166\n-0.181902\n-1.147739\n-1.178571\n...\n-0.204124\n-0.369274\n-0.504211\n-0.096004\n-0.699329\n1.605206\n0.070614\n0.283217\n-0.128709\n-0.453659\n\n\nF\n0.972596\n0.063427\n0.410788\n1.908107\n-0.430173\n0.366494\n0.221306\n-0.296754\n-1.067741\n-0.675366\n...\n-0.204124\n-0.369274\n-0.220806\n0.390422\n-1.137341\n0.320498\n0.643196\n-0.162855\n-1.214938\n-0.971254\n\n\n\n\n5 rows × 119 columns\n\n\n\n\n\nMorgan fingerprint\n\nsource\n\n\nget_morgan\n\n get_morgan (df:pandas.core.frame.DataFrame, col:str='SMILES', radius=3)\n\nGet 2048 morgan fingerprint (binary feature) from smiles in a dataframe\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\nDataFrame\n\na dataframe that contains smiles\n\n\ncol\nstr\nSMILES\ncolname of smile\n\n\nradius\nint\n3\n\n\n\n\n\naa_morgan = get_morgan(aa, 'SMILES')\naa_morgan.head()\n\n\n\n\n\n\n\n\nmorgan_0\nmorgan_1\nmorgan_2\nmorgan_3\nmorgan_4\nmorgan_5\nmorgan_6\nmorgan_7\nmorgan_8\nmorgan_9\n...\nmorgan_2038\nmorgan_2039\nmorgan_2040\nmorgan_2041\nmorgan_2042\nmorgan_2043\nmorgan_2044\nmorgan_2045\nmorgan_2046\nmorgan_2047\n\n\naa\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nC\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nD\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nE\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nF\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n\n\n5 rows × 2048 columns\n\n\n\n\naa_morgan = get_morgan(aa, 'SMILES')\naa_morgan.head()\n\n\n\n\n\n\n\n\nmorgan_0\nmorgan_1\nmorgan_2\nmorgan_3\nmorgan_4\nmorgan_5\nmorgan_6\nmorgan_7\nmorgan_8\nmorgan_9\n...\nmorgan_2038\nmorgan_2039\nmorgan_2040\nmorgan_2041\nmorgan_2042\nmorgan_2043\nmorgan_2044\nmorgan_2045\nmorgan_2046\nmorgan_2047\n\n\naa\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nC\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nD\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nE\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nF\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n\n\n5 rows × 2048 columns",
    "crumbs": [
      "Modules",
      "Feature"
    ]
  },
  {
    "objectID": "feature.html#protein-sequence",
    "href": "feature.html#protein-sequence",
    "title": "Feature",
    "section": "Protein sequence",
    "text": "Protein sequence\n\nOnehot\n\nsource\n\n\nonehot_encode\n\n onehot_encode (sequences, transform_colname=True, n=20)\n\n\nsource\n\n\nonehot_encode_df\n\n onehot_encode_df (df, seq_col='site_seq', **kwargs)\n\n\ndf=Data.get_combine_site_psp_ochoa()\n\n\ndf_k = df.head(1000)\n\n\nonehot = onehot_encode_df(df_k, seq_col='site_seq')\nonehot\n\n\n\n\n\n\n\n\n-20A\n-20C\n-20D\n-20E\n-20F\n-20G\n-20H\n-20I\n-20K\n-20L\n...\n-6N\n-6P\n-6Q\n-6R\n-6S\n-6T\n-6V\n-6W\n-6Y\n-6_\n\n\n\n\n0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n1.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n1.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n1\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n2\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n1.0\n0.0\n0.0\n0.0\n\n\n3\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n1.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n4\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n1.0\n0.0\n...\n0.0\n0.0\n0.0\n1.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n995\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n996\n0.0\n0.0\n0.0\n0.0\n0.0\n1.0\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n1.0\n0.0\n0.0\n0.0\n\n\n997\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n998\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n1.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n999\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n1.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n\n\n1000 rows × 297 columns\n\n\n\n\n\nKemans of onehot\n\nsource\n\n\nkmeans\n\n kmeans (onehot, n=2, seed=42)\n\nTake onehot encoded and regurn the cluster number.\n\nkmeans(onehot.head(100),n=10)\n\narray([5, 2, 0, 4, 8, 2, 3, 6, 6, 4, 1, 0, 0, 1, 0, 1, 2, 0, 9, 0, 6, 0,\n       1, 2, 3, 1, 4, 9, 0, 9, 4, 5, 4, 0, 8, 4, 6, 0, 3, 0, 6, 7, 0, 4,\n       0, 5, 4, 6, 0, 5, 0, 1, 2, 2, 1, 1, 8, 1, 1, 0, 5, 2, 0, 1, 4, 4,\n       9, 9, 5, 0, 5, 3, 3, 1, 4, 9, 7, 7, 6, 4, 7, 7, 6, 8, 0, 5, 6, 0,\n       7, 7, 8, 1, 7, 3, 7, 0, 1, 1, 6, 2], dtype=int32)\n\n\n\nonehot\n\n\n\n\n\n\n\n\n-20A\n-20C\n-20D\n-20E\n-20F\n-20G\n-20H\n-20I\n-20K\n-20L\n...\n-6N\n-6P\n-6Q\n-6R\n-6S\n-6T\n-6V\n-6W\n-6Y\n-6_\n\n\n\n\n0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n1.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n1.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n1\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n2\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n1.0\n0.0\n0.0\n0.0\n\n\n3\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n1.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n4\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n1.0\n0.0\n...\n0.0\n0.0\n0.0\n1.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n995\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n996\n0.0\n0.0\n0.0\n0.0\n0.0\n1.0\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n1.0\n0.0\n0.0\n0.0\n\n\n997\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n998\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n1.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n999\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n1.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n\n\n1000 rows × 297 columns\n\n\n\n\nsource\n\n\nfilter_range_columns\n\n filter_range_columns (df, low=-10, high=10)\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\n\n\ndf need to have column names of position + aa\n\n\nlow\nint\n-10\n\n\n\nhigh\nint\n10\n\n\n\n\n\nonehot_10 = filter_range_columns(onehot,low=-10,high=10)\nonehot_10\n\n\n\n\n\n\n\n\n-10A\n-10C\n-10D\n-10E\n-10F\n-10G\n-10H\n-10I\n-10K\n-10L\n...\n-6N\n-6P\n-6Q\n-6R\n-6S\n-6T\n-6V\n-6W\n-6Y\n-6_\n\n\n\n\n0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n1.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n1\n0.0\n0.0\n1.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n2\n0.0\n0.0\n1.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n1.0\n0.0\n0.0\n0.0\n\n\n3\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n4\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n1.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n995\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n1.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n996\n0.0\n0.0\n0.0\n1.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n1.0\n0.0\n0.0\n0.0\n\n\n997\n1.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n998\n0.0\n0.0\n0.0\n1.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n999\n0.0\n0.0\n0.0\n1.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n\n\n1000 rows × 105 columns\n\n\n\nPipeline:\nonehot = onehot_encode(df_k.site_seq)\nonehot_10 = filter_range_columns(onehot)\ndf_k['Cluster'] = kmeans(onehot_10,n=n,seed=42)\nThen plot onehot of onehot_10 with hue =‘Cluster’\n\n\nElbow method\n\nsource\n\n\nget_clusters_elbow\n\n get_clusters_elbow (encoded_data, max_cluster=400, interval=50)\n\n\nget_clusters_elbow(onehot,5,2)\n\n\n\n\n\n\n\n\n\n\nESM2\n\nsource\n\n\nget_esm\n\n get_esm (df:pandas.core.frame.DataFrame, col:str='sequence',\n          model_name:str='esm2_t33_650M_UR50D')\n\nExtract esmfold2 embeddings from protein sequence in a dataframe\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\nDataFrame\n\na dataframe that contains amino acid sequence\n\n\ncol\nstr\nsequence\ncolname of amino acid sequence\n\n\nmodel_name\nstr\nesm2_t33_650M_UR50D\nName of the ESM model to use for the embeddings.\n\n\n\nESM2 model is trained on UniRef sequence. The default model in the function is esm2_t33_650M_UR50D, which is trained on UniRef50.\nUncheck below to use:\n\n# # Examples\n# df = Data.get_kinase_info().set_index('kinase')\n# sample = df[:5]\n# esmfeature = get_esm(sample,'sequence')\n# esmfeature.head()\n\n\n\nProtT5\n\nsource\n\n\nget_t5\n\n get_t5 (df:pandas.core.frame.DataFrame, col:str='sequence')\n\nExtract ProtT5-XL-uniref50 embeddings from protein sequence in a dataframe\nXL-uniref50 model is a t5-3b model trained on Uniref50 Dataset.\nUncheck below to use:\n\n# t5feature = get_t5(sample,'sequence')\n# t5feature.head()\n\n\nsource\n\n\nget_t5_bfd\n\n get_t5_bfd (df:pandas.core.frame.DataFrame, col:str='sequence')\n\nExtract ProtT5-XL-BFD embeddings from protein sequence in a dataframe\nXL-BFD model is a t5-3b model trained on Big Fantastic Database(BFD).\nUncheck below to use:\n\n# t5bfd = get_t5_bfd(sample,'sequence')\n# t5bfd.head()",
    "crumbs": [
      "Modules",
      "Feature"
    ]
  },
  {
    "objectID": "feature.html#end",
    "href": "feature.html#end",
    "title": "Feature",
    "section": "End",
    "text": "End",
    "crumbs": [
      "Modules",
      "Feature"
    ]
  },
  {
    "objectID": "pssm.html",
    "href": "pssm.html",
    "title": "PSSM",
    "section": "",
    "text": "from katlas.pssm import *",
    "crumbs": [
      "Modules",
      "PSSM"
    ]
  },
  {
    "objectID": "pssm.html#setup",
    "href": "pssm.html#setup",
    "title": "PSSM",
    "section": "",
    "text": "from katlas.pssm import *",
    "crumbs": [
      "Modules",
      "PSSM"
    ]
  },
  {
    "objectID": "pssm.html#pssm",
    "href": "pssm.html#pssm",
    "title": "PSSM",
    "section": "PSSM",
    "text": "PSSM\nWe need to compute position-specific probability matrix (PSSM) from a list of aligned site sequences.\nFor each position \\(i\\) (e.g., from \\(-7\\) to \\(+7\\)), the probability of observing amino acid \\(x\\) is:\n\\[\nP_i(x) = \\frac{\\text{count of amino acid } x \\text{ at position } i}{\\text{total counts at position } i}\n\\]\nThe following 23 amino acids are included:\n\nStandard amino acids:\nA, C, D, E, F, G, H, I, K, L, M, N, P, Q, R, S, T, V, W, Y\n\nModified amino acids:\ns, t, y (often used to denote phosphorylated S, T, Y)\n\nIn the output, the modified residues are renamed as: - s → pS\n- t → pT\n- y → pY\nThe resulting matrix has: - Rows: Amino acids (including pS, pT, pY), - Columns: Sequence positions (centered on the phosphosite), - Values: Probabilities of each amino acid at each position.\n\nsource\n\nget_prob\n\n get_prob (data, col:str='site_seq', aa_order=['P', 'G', 'A', 'C', 'S',\n           'T', 'V', 'I', 'L', 'M', 'F', 'Y', 'W', 'H', 'K', 'R', 'Q',\n           'N', 'D', 'E', 's', 't', 'y'])\n\nGet the probability matrix of PSSM from phosphorylation site sequences.\n\ndata = Data.get_ks_dataset()\n\n\ndata_k = data[data.kinase_uniprot=='P06493'] # CDK1\n\n\nget_prob(data_k['site_seq'].tolist())\n\n\n\n\n\n\n\nPosition\n-20\n-19\n-18\n-17\n-16\n-15\n-14\n-13\n-12\n-11\n-10\n-9\n-8\n-7\n-6\n-5\n-4\n-3\n-2\n-1\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\naa\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nP\n0.100762\n0.083686\n0.082422\n0.090680\n0.079631\n0.082008\n0.088333\n0.077815\n0.091584\n0.083128\n0.071487\n0.080526\n0.085106\n0.091354\n0.097561\n0.087520\n0.091350\n0.104116\n0.159677\n0.082192\n0.000000\n0.758065\n0.086360\n0.088781\n0.084951\n0.101297\n0.090171\n0.107492\n0.086743\n0.098280\n0.088889\n0.085950\n0.091211\n0.078138\n0.078138\n0.085762\n0.096909\n0.096477\n0.063973\n0.081218\n0.094996\n\n\nG\n0.069433\n0.073542\n0.068966\n0.054576\n0.081308\n0.064435\n0.084167\n0.072848\n0.080858\n0.075720\n0.087099\n0.089565\n0.060556\n0.075041\n0.083740\n0.076985\n0.080032\n0.082324\n0.066935\n0.096696\n0.000000\n0.031452\n0.092817\n0.062954\n0.050162\n0.081037\n0.066613\n0.065961\n0.076105\n0.066339\n0.074074\n0.065289\n0.067993\n0.087282\n0.068994\n0.071607\n0.085213\n0.060403\n0.074074\n0.082910\n0.064461\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\npT\n0.028789\n0.027895\n0.031960\n0.020151\n0.020956\n0.038494\n0.019167\n0.031457\n0.023102\n0.023868\n0.032868\n0.027938\n0.033552\n0.027732\n0.038211\n0.038088\n0.039612\n0.047619\n0.045161\n0.031426\n0.324738\n0.016129\n0.037934\n0.025827\n0.038835\n0.021070\n0.035743\n0.035831\n0.027005\n0.026208\n0.023868\n0.026446\n0.022388\n0.033250\n0.023275\n0.022481\n0.028404\n0.024329\n0.028620\n0.027919\n0.018660\n\n\npY\n0.003387\n0.005917\n0.011775\n0.007557\n0.005029\n0.010879\n0.005000\n0.004139\n0.006601\n0.009877\n0.009860\n0.011504\n0.009820\n0.006525\n0.010569\n0.012156\n0.016168\n0.008071\n0.012097\n0.008058\n0.010475\n0.004032\n0.009685\n0.015335\n0.009709\n0.014587\n0.004874\n0.006515\n0.005728\n0.007371\n0.010700\n0.007438\n0.010779\n0.007481\n0.008313\n0.004996\n0.004177\n0.002517\n0.008418\n0.007614\n0.008482\n\n\n\n\n23 rows × 41 columns\n\n\n\n\npssm_df = get_prob(data_k) # or get_prob(data_k['site_seq'])\npssm_df.head()\n\n\n\n\n\n\n\nPosition\n-20\n-19\n-18\n-17\n-16\n-15\n-14\n-13\n-12\n-11\n-10\n-9\n-8\n-7\n-6\n-5\n-4\n-3\n-2\n-1\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\naa\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nP\n0.100762\n0.083686\n0.082422\n0.090680\n0.079631\n0.082008\n0.088333\n0.077815\n0.091584\n0.083128\n0.071487\n0.080526\n0.085106\n0.091354\n0.097561\n0.087520\n0.091350\n0.104116\n0.159677\n0.082192\n0.0\n0.758065\n0.086360\n0.088781\n0.084951\n0.101297\n0.090171\n0.107492\n0.086743\n0.098280\n0.088889\n0.085950\n0.091211\n0.078138\n0.078138\n0.085762\n0.096909\n0.096477\n0.063973\n0.081218\n0.094996\n\n\nG\n0.069433\n0.073542\n0.068966\n0.054576\n0.081308\n0.064435\n0.084167\n0.072848\n0.080858\n0.075720\n0.087099\n0.089565\n0.060556\n0.075041\n0.083740\n0.076985\n0.080032\n0.082324\n0.066935\n0.096696\n0.0\n0.031452\n0.092817\n0.062954\n0.050162\n0.081037\n0.066613\n0.065961\n0.076105\n0.066339\n0.074074\n0.065289\n0.067993\n0.087282\n0.068994\n0.071607\n0.085213\n0.060403\n0.074074\n0.082910\n0.064461\n\n\nA\n0.075360\n0.071006\n0.079058\n0.058774\n0.070411\n0.067782\n0.075833\n0.086921\n0.068482\n0.069959\n0.067379\n0.062449\n0.069558\n0.070962\n0.069919\n0.073744\n0.074373\n0.071832\n0.083065\n0.087027\n0.0\n0.022581\n0.092010\n0.056497\n0.079288\n0.057536\n0.077985\n0.072476\n0.068740\n0.066339\n0.075720\n0.071074\n0.065506\n0.063175\n0.069825\n0.072440\n0.067669\n0.079698\n0.058081\n0.061760\n0.078880\n\n\nC\n0.013548\n0.006762\n0.007569\n0.009236\n0.014250\n0.011715\n0.008333\n0.007450\n0.009901\n0.007407\n0.010682\n0.008217\n0.007365\n0.008972\n0.010569\n0.005673\n0.004042\n0.007264\n0.013710\n0.008864\n0.0\n0.001613\n0.008878\n0.006457\n0.010518\n0.009724\n0.008936\n0.010586\n0.007365\n0.010647\n0.006584\n0.011570\n0.012438\n0.004988\n0.011638\n0.010824\n0.011696\n0.009228\n0.013468\n0.007614\n0.012723\n\n\nS\n0.041490\n0.053254\n0.043734\n0.052057\n0.035205\n0.041004\n0.050833\n0.050497\n0.043729\n0.039506\n0.043550\n0.041085\n0.040098\n0.038336\n0.034146\n0.029984\n0.034762\n0.016949\n0.020968\n0.028203\n0.0\n0.003226\n0.029056\n0.025020\n0.038026\n0.033225\n0.044679\n0.041531\n0.043372\n0.044226\n0.050206\n0.041322\n0.046434\n0.044057\n0.050707\n0.045795\n0.045948\n0.046980\n0.050505\n0.054146\n0.047498",
    "crumbs": [
      "Modules",
      "PSSM"
    ]
  },
  {
    "objectID": "pssm.html#transform-pssm",
    "href": "pssm.html#transform-pssm",
    "title": "PSSM",
    "section": "Transform PSSM",
    "text": "Transform PSSM\n\nsource\n\npSTY2sty\n\n pSTY2sty (string)\n\nConvert pS/pT/pY to s/t/y in a string.\n\npspa_scale = Data.get_pspa_all_scale()\npspa_scale.columns.map(pSTY2sty)\n\nIndex(['-5P', '-5G', '-5A', '-5C', '-5S', '-5T', '-5V', '-5I', '-5L', '-5M',\n       ...\n       '4H', '4K', '4R', '4Q', '4N', '4D', '4E', '4s', '4t', '4y'],\n      dtype='object', length=230)\n\n\n\nsource\n\n\nflatten_pssm\n\n flatten_pssm (pssm_df, use_sty=False, column_wise=True)\n\nFlatten PSSM dataframe to dictionary\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\npssm_df\n\n\n\n\n\nuse_sty\nbool\nFalse\nif True, use s,t,y instead of pS,pT,pY\n\n\ncolumn_wise\nbool\nTrue\nif True, column major flatten; else row wise flatten (for pytorch training)\n\n\n\n\nflat_pssm = pd.Series(flatten_pssm(pssm_df))\nflat_pssm\n\n-20P    0.100762\n-20G    0.069433\n          ...   \n20pT    0.018660\n20pY    0.008482\nLength: 943, dtype: float64\n\n\n\nsource\n\n\nrecover_pssm\n\n recover_pssm (flat_pssm:pandas.core.series.Series)\n\nRecover 2D PSSM from flattened PSSM Series. Only includes amino acids present in flat_pssm, preserving canonical order.\n\nout = recover_pssm(flat_pssm)\nout\n\n\n\n\n\n\n\nPosition\n-20\n-19\n-18\n-17\n-16\n-15\n-14\n-13\n-12\n-11\n-10\n-9\n-8\n-7\n-6\n-5\n-4\n-3\n-2\n-1\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\naa\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nP\n0.100762\n0.083686\n0.082422\n0.090680\n0.079631\n0.082008\n0.088333\n0.077815\n0.091584\n0.083128\n0.071487\n0.080526\n0.085106\n0.091354\n0.097561\n0.087520\n0.091350\n0.104116\n0.159677\n0.082192\n0.000000\n0.758065\n0.086360\n0.088781\n0.084951\n0.101297\n0.090171\n0.107492\n0.086743\n0.098280\n0.088889\n0.085950\n0.091211\n0.078138\n0.078138\n0.085762\n0.096909\n0.096477\n0.063973\n0.081218\n0.094996\n\n\nG\n0.069433\n0.073542\n0.068966\n0.054576\n0.081308\n0.064435\n0.084167\n0.072848\n0.080858\n0.075720\n0.087099\n0.089565\n0.060556\n0.075041\n0.083740\n0.076985\n0.080032\n0.082324\n0.066935\n0.096696\n0.000000\n0.031452\n0.092817\n0.062954\n0.050162\n0.081037\n0.066613\n0.065961\n0.076105\n0.066339\n0.074074\n0.065289\n0.067993\n0.087282\n0.068994\n0.071607\n0.085213\n0.060403\n0.074074\n0.082910\n0.064461\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\npT\n0.028789\n0.027895\n0.031960\n0.020151\n0.020956\n0.038494\n0.019167\n0.031457\n0.023102\n0.023868\n0.032868\n0.027938\n0.033552\n0.027732\n0.038211\n0.038088\n0.039612\n0.047619\n0.045161\n0.031426\n0.324738\n0.016129\n0.037934\n0.025827\n0.038835\n0.021070\n0.035743\n0.035831\n0.027005\n0.026208\n0.023868\n0.026446\n0.022388\n0.033250\n0.023275\n0.022481\n0.028404\n0.024329\n0.028620\n0.027919\n0.018660\n\n\npY\n0.003387\n0.005917\n0.011775\n0.007557\n0.005029\n0.010879\n0.005000\n0.004139\n0.006601\n0.009877\n0.009860\n0.011504\n0.009820\n0.006525\n0.010569\n0.012156\n0.016168\n0.008071\n0.012097\n0.008058\n0.010475\n0.004032\n0.009685\n0.015335\n0.009709\n0.014587\n0.004874\n0.006515\n0.005728\n0.007371\n0.010700\n0.007438\n0.010779\n0.007481\n0.008313\n0.004996\n0.004177\n0.002517\n0.008418\n0.007614\n0.008482\n\n\n\n\n23 rows × 41 columns\n\n\n\n\nout.loc[pssm_df.index,pssm_df.columns].equals(pssm_df)\n\nTrue\n\n\nOr recover from PSPA data, where s, t, y will be converted to pS, pT, and pY:\n\npspa = Data.get_pspa_all_norm()\n\n\nflat_pssm_pspa = pspa.loc['AAK1'].dropna()\nflat_pssm_pspa\n\n-5P    0.0720\n-5G    0.0245\n        ...  \n0T     1.0000\n0Y     0.0000\nName: AAK1, Length: 213, dtype: float64\n\n\n\nrecovered = recover_pssm(flat_pssm_pspa)\nrecovered\n\n\n\n\n\n\n\nPosition\n-5\n-4\n-3\n-2\n-1\n0\n1\n2\n3\n4\n\n\naa\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nP\n0.0720\n0.0534\n0.1084\n0.0226\n0.1136\n0.0\n0.0463\n0.0527\n0.0681\n0.0628\n\n\nG\n0.0245\n0.0642\n0.0512\n0.0283\n0.0706\n0.0\n0.7216\n0.0749\n0.0923\n0.0702\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\npT\n0.0201\n0.0332\n0.0303\n0.0209\n0.0121\n1.0\n0.0123\n0.0409\n0.0335\n0.0251\n\n\npY\n0.0611\n0.0339\n0.0274\n0.0486\n0.0178\n0.0\n0.0100\n0.0410\n0.0359\n0.0270\n\n\n\n\n23 rows × 10 columns\n\n\n\nPSPA is not scaled per position, and the recovered pssm_df also contained copies of pS,pT,pY in zero position (S,T,Y).\nSo we need to remove the redundant copy in zero position (leave pS/pT/pY only) and scaled to 1 per position.\n\n_clean_zero(pssm_df)\n\n\n\n\n\n\n\nPosition\n-20\n-19\n-18\n-17\n-16\n-15\n-14\n-13\n-12\n-11\n-10\n-9\n-8\n-7\n-6\n-5\n-4\n-3\n-2\n-1\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\naa\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nP\n0.100762\n0.083686\n0.082422\n0.090680\n0.079631\n0.082008\n0.088333\n0.077815\n0.091584\n0.083128\n0.071487\n0.080526\n0.085106\n0.091354\n0.097561\n0.087520\n0.091350\n0.104116\n0.159677\n0.082192\n0.000000\n0.758065\n0.086360\n0.088781\n0.084951\n0.101297\n0.090171\n0.107492\n0.086743\n0.098280\n0.088889\n0.085950\n0.091211\n0.078138\n0.078138\n0.085762\n0.096909\n0.096477\n0.063973\n0.081218\n0.094996\n\n\nG\n0.069433\n0.073542\n0.068966\n0.054576\n0.081308\n0.064435\n0.084167\n0.072848\n0.080858\n0.075720\n0.087099\n0.089565\n0.060556\n0.075041\n0.083740\n0.076985\n0.080032\n0.082324\n0.066935\n0.096696\n0.000000\n0.031452\n0.092817\n0.062954\n0.050162\n0.081037\n0.066613\n0.065961\n0.076105\n0.066339\n0.074074\n0.065289\n0.067993\n0.087282\n0.068994\n0.071607\n0.085213\n0.060403\n0.074074\n0.082910\n0.064461\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\npT\n0.028789\n0.027895\n0.031960\n0.020151\n0.020956\n0.038494\n0.019167\n0.031457\n0.023102\n0.023868\n0.032868\n0.027938\n0.033552\n0.027732\n0.038211\n0.038088\n0.039612\n0.047619\n0.045161\n0.031426\n0.324738\n0.016129\n0.037934\n0.025827\n0.038835\n0.021070\n0.035743\n0.035831\n0.027005\n0.026208\n0.023868\n0.026446\n0.022388\n0.033250\n0.023275\n0.022481\n0.028404\n0.024329\n0.028620\n0.027919\n0.018660\n\n\npY\n0.003387\n0.005917\n0.011775\n0.007557\n0.005029\n0.010879\n0.005000\n0.004139\n0.006601\n0.009877\n0.009860\n0.011504\n0.009820\n0.006525\n0.010569\n0.012156\n0.016168\n0.008071\n0.012097\n0.008058\n0.010475\n0.004032\n0.009685\n0.015335\n0.009709\n0.014587\n0.004874\n0.006515\n0.005728\n0.007371\n0.010700\n0.007438\n0.010779\n0.007481\n0.008313\n0.004996\n0.004177\n0.002517\n0.008418\n0.007614\n0.008482\n\n\n\n\n23 rows × 41 columns\n\n\n\n\nsource\n\n\nclean_zero_normalize\n\n clean_zero_normalize (pssm_df)\n\nZero out non-last three values in position 0 (keep only s,t,y values at center), and normalize per position\nThis function applies phosphosite-specific cleaning and normalization to a PSSM.\nAt the center position (\\(i = 0\\)), only the last three rows of the matrix — corresponding to phosphorylatable residues s, t, and y — are retained. All other amino acid values at position 0 are set to 0.\nAfter masking, the matrix is column-normalized to ensure the probabilities at each position sum to 1:\n\\[\nP_i(x) = \\frac{P_i(x)}{\\sum_{x'} P_i(x')}\n\\]\n\nnorm_pssm = clean_zero_normalize(recovered)\nnorm_pssm.head()\n\n\n\n\n\n\n\nPosition\n-5\n-4\n-3\n-2\n-1\n0\n1\n2\n3\n4\n\n\naa\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nP\n0.058446\n0.041715\n0.086100\n0.017935\n0.096068\n0.0\n0.042649\n0.040482\n0.052640\n0.050260\n\n\nG\n0.019888\n0.050152\n0.040667\n0.022459\n0.059704\n0.0\n0.664702\n0.057536\n0.071346\n0.056182\n\n\nA\n0.023054\n0.055152\n0.088880\n0.042695\n0.032558\n0.0\n0.028740\n0.057613\n0.044987\n0.051701\n\n\nC\n0.037016\n0.043747\n0.052025\n0.046663\n0.026469\n0.0\n0.020542\n0.052543\n0.057355\n0.048259\n\n\nS\n0.034500\n0.048356\n0.041859\n0.044044\n0.046089\n0.0\n0.013172\n0.042403\n0.044987\n0.044818",
    "crumbs": [
      "Modules",
      "PSSM"
    ]
  },
  {
    "objectID": "pssm.html#pssm-of-log-odds",
    "href": "pssm.html#pssm-of-log-odds",
    "title": "PSSM",
    "section": "PSSM of Log odds",
    "text": "PSSM of Log odds\n\nsource\n\nget_pssm_LO\n\n get_pssm_LO (pssm_df, site_type)\n\nGet log odds PSSM: log2 (freq pssm/background pssm).\n\n\n\n\nDetails\n\n\n\n\npssm_df\n\n\n\nsite_type\nS, T, Y, ST, or STY\n\n\n\nLet \\(P_i(x)\\) be the frequency of amino acid \\(x\\) at position \\(i\\) in the input PSSM, and let \\(B_i(x)\\) be the background frequency of amino acid \\(x\\) at the same position, derived from a background model corresponding to the specified site type (S, T, Y, or STY).\nThe log-odds score at each position \\(i\\) for amino acid \\(x\\) is computed as:\n\\[\n\\mathrm{LO}_i(x) = \\log_2 \\left( \\frac{P_i(x) + \\varepsilon}{B_i(x) + \\varepsilon} \\right)\n\\]\nwhere \\(\\varepsilon = 10^{-8}\\) is a small constant added for numerical stability and to avoid division by zero.\nThis results in a matrix where:\n\nPositive values indicate enrichment over background,\nNegative values indicate depletion relative to background,\nZero indicates no difference from the expected background.\n\n\ndata_y = data_k[data_k.site.str[0]=='Y']\n\n\npssm_y = get_prob(data_y,'site_seq')\n\n\npssm_LO = get_pssm_LO(pssm_y,'Y')\npssm_LO.head()\n\n\n\n\n\n\n\nPosition\n-20\n-19\n-18\n-17\n-16\n-15\n-14\n-13\n-12\n-11\n-10\n-9\n-8\n-7\n-6\n-5\n-4\n-3\n-2\n-1\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\naa\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nP\n3.346408\n-22.443930\n-22.483757\n-22.372869\n-22.330630\n-22.389350\n-22.374998\n-22.472709\n-22.395309\n1.987578\n-22.494346\n0.445197\n-22.568837\n1.592465\n0.481417\n-22.533689\n-22.473171\n0.558965\n0.126645\n-22.159026\n0.0\n-21.219306\n-22.470595\n-22.994372\n-22.573771\n0.385159\n2.042311\n-22.444570\n-22.627742\n-22.737503\n-22.549071\n-22.614291\n-22.347248\n-22.450324\n-22.595771\n-22.811749\n-22.536017\n-22.489922\n-22.515220\n-22.349670\n-22.682968\n\n\nG\n-22.787984\n-22.672109\n-22.655669\n-22.817496\n-22.708532\n-22.680581\n-22.968862\n-22.718379\n-22.624127\n-22.752478\n-22.755633\n-22.704314\n1.820249\n-22.602035\n1.706290\n-22.640845\n1.574374\n2.033874\n2.576212\n-22.485306\n0.0\n1.630733\n1.522227\n-22.301926\n-22.682104\n-22.810346\n0.400104\n0.432959\n1.787902\n-22.691406\n-22.606718\n-22.871788\n2.968486\n-22.716477\n0.361061\n0.294925\n-22.713856\n0.228288\n-22.828378\n0.399785\n-22.816906\n\n\nA\n-22.752579\n-22.787101\n2.244467\n-22.501932\n1.566475\n0.633103\n0.209785\n-22.641046\n-22.668327\n-22.755401\n-22.862340\n-22.751717\n0.302850\n-22.576040\n-22.685439\n-22.680965\n-22.568254\n-22.719280\n-22.719076\n-22.414048\n0.0\n-22.708920\n1.140178\n0.379419\n0.404062\n-22.548438\n1.174414\n1.373115\n-22.526813\n-22.873080\n-22.715532\n-22.607643\n1.739891\n-22.700813\n0.116988\n-22.679525\n3.016130\n1.791966\n-22.670499\n-22.569718\n0.388038\n\n\nC\n-20.604884\n2.946480\n-20.610481\n-20.696340\n-20.705479\n-20.613911\n-20.674559\n-20.555965\n-20.395309\n-20.465246\n-20.723212\n-20.683076\n-20.273082\n-20.562865\n-20.151208\n-20.637713\n-20.490617\n-20.197935\n-20.073742\n-20.197731\n0.0\n-20.723779\n-20.427527\n-20.857363\n-20.533508\n-20.380203\n-20.784654\n-20.540430\n-20.325180\n-20.087586\n-20.474525\n-20.292364\n-20.675574\n-20.827394\n-20.497208\n-20.411330\n-20.843591\n-20.777410\n-20.951953\n-20.735729\n-20.464922\n\n\nS\n-22.084627\n-22.150318\n-22.199808\n-22.059594\n-22.210853\n-22.220374\n-22.174129\n0.711760\n-22.086471\n-21.971941\n-21.907636\n-21.850281\n-22.021350\n-22.147827\n-21.770936\n-21.831141\n-21.924603\n-21.627747\n-21.621229\n-21.092120\n0.0\n-21.500400\n-21.519269\n-21.615861\n-22.015041\n-22.077133\n-21.879565\n-21.929472\n-21.962609\n-21.994476\n-21.856395\n-22.144041\n-22.079396\n-22.071062\n-22.125238\n-22.129558\n-22.149269\n-22.204520\n-22.361597\n-22.234534\n-22.274444\n\n\n\n\n\n\n\n\npssm_y[0][pssm_y[0]==1].index\n\nIndex(['pY'], dtype='object', name='aa')\n\n\n\npssm_LO[0].sort_values() # log-odds is zero at center position when single site log-odds pssm\n\naa\nP     0.0\nG     0.0\n     ... \npT    0.0\npY    0.0\nName: 0, Length: 23, dtype: float64\n\n\n\nsource\n\n\nget_pssm_LO_flat\n\n get_pssm_LO_flat (flat_pssm, site_type)\n\n\n\n\n\nDetails\n\n\n\n\nflat_pssm\n\n\n\nsite_type\nS, T, Y, ST, or STY\n\n\n\n\npssm_LO = get_pssm_LO_flat(flat_pssm,'STY')\n\n\npssm_LO\n\n\n\n\n\n\n\nPosition\n-20\n-19\n-18\n-17\n-16\n-15\n-14\n-13\n-12\n-11\n-10\n-9\n-8\n-7\n-6\n-5\n-4\n-3\n-2\n-1\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\naa\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nP\n0.586661\n0.394140\n0.374573\n0.453820\n0.289470\n0.358996\n0.482618\n0.248724\n0.474829\n0.389672\n0.109081\n0.301898\n0.336760\n0.501053\n0.515588\n0.480427\n0.515543\n0.755197\n1.058815\n0.375288\n0.000000\n2.390017\n0.400188\n0.338692\n0.471584\n0.492282\n0.449106\n0.719679\n0.363679\n0.522566\n0.321624\n0.304491\n0.525998\n0.281515\n0.236806\n0.264957\n0.545151\n0.560067\n-0.022594\n0.367797\n0.484510\n\n\nG\n0.016858\n0.076312\n-0.002345\n-0.350629\n0.235031\n-0.081357\n0.200054\n0.090158\n0.242282\n0.091220\n0.285770\n0.325105\n-0.114557\n0.097086\n0.230386\n0.205338\n0.155133\n0.172609\n0.046828\n0.230478\n0.000000\n-1.025210\n0.477712\n-0.167647\n-0.357066\n0.253819\n0.024980\n-0.031828\n0.169769\n-0.015015\n0.151653\n-0.064451\n0.045944\n0.379475\n0.067256\n0.072006\n0.275037\n-0.179219\n0.127575\n0.299872\n-0.100680\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\npT\n0.911584\n0.912650\n1.056510\n0.470853\n0.670212\n1.311175\n0.429132\n1.116517\n0.677640\n0.513274\n0.960222\n0.625347\n0.681687\n0.332545\n0.822099\n0.639714\n0.489330\n0.812538\n0.380904\n0.113449\n0.517671\n-0.851332\n0.094978\n-0.048091\n0.336723\n-0.327027\n0.592702\n0.869663\n0.410747\n0.426680\n0.319514\n0.750686\n0.527680\n1.073488\n0.566722\n0.518353\n0.979661\n0.740521\n1.009246\n0.904865\n0.266921\n\n\npY\n-1.508258\n-0.327763\n0.479616\n-0.163146\n-0.511691\n0.115212\n-0.743236\n-0.951924\n-0.347715\n-0.199543\n-0.067569\n0.148547\n0.000651\n-0.746039\n-0.322579\n-0.285517\n0.017292\n-1.040118\n-0.684355\n-1.496942\n-4.500376\n-2.396887\n-1.123007\n-0.237850\n-0.777896\n-0.000605\n-1.465025\n-0.917736\n-0.957110\n-0.367131\n0.108010\n-0.646108\n0.325134\n-0.135098\n-0.112158\n-0.764045\n-1.033425\n-1.598003\n0.047446\n-0.108367\n-0.179734\n\n\n\n\n23 rows × 41 columns",
    "crumbs": [
      "Modules",
      "PSSM"
    ]
  },
  {
    "objectID": "pssm.html#pssms-of-clusters",
    "href": "pssm.html#pssms-of-clusters",
    "title": "PSSM",
    "section": "PSSMs of clusters",
    "text": "PSSMs of clusters\n\nsource\n\nget_cluster_pssms\n\n get_cluster_pssms (df, cluster_col, seq_col='site_seq',\n                    id_col='sub_site', count_thr=10, valid_thr=None,\n                    IC_thr=None, plot=False)\n\nExtract motifs from clusters in a dataframe\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\n\n\n\n\n\ncluster_col\n\n\n\n\n\nseq_col\nstr\nsite_seq\n\n\n\nid_col\nstr\nsub_site\n\n\n\ncount_thr\nint\n10\nif less than the count threshold, not include in the return\n\n\nvalid_thr\nNoneType\nNone\npercentage of not-nan values in pssm\n\n\nIC_thr\nNoneType\nNone\n\n\n\nplot\nbool\nFalse\n\n\n\n\n\ndata_10 = data.head(10)\n\n\nget_cluster_pssms(data,'kinase_group')\n\n100%|█████████████████████████████████████████████████████████████| 10/10 [00:00&lt;00:00, 10.17it/s]\n\n\n\n\n\n\n\n\n\n-20P\n-20G\n-20A\n-20C\n-20S\n-20T\n-20V\n-20I\n-20L\n-20M\n-20F\n-20Y\n-20W\n-20H\n-20K\n-20R\n-20Q\n-20N\n-20D\n-20E\n-20pS\n-20pT\n-20pY\n-19P\n-19G\n-19A\n-19C\n-19S\n-19T\n-19V\n-19I\n-19L\n-19M\n-19F\n-19Y\n-19W\n-19H\n-19K\n-19R\n-19Q\n-19N\n-19D\n-19E\n-19pS\n-19pT\n-19pY\n-18P\n-18G\n-18A\n-18C\n...\n18E\n18pS\n18pT\n18pY\n19P\n19G\n19A\n19C\n19S\n19T\n19V\n19I\n19L\n19M\n19F\n19Y\n19W\n19H\n19K\n19R\n19Q\n19N\n19D\n19E\n19pS\n19pT\n19pY\n20P\n20G\n20A\n20C\n20S\n20T\n20V\n20I\n20L\n20M\n20F\n20Y\n20W\n20H\n20K\n20R\n20Q\n20N\n20D\n20E\n20pS\n20pT\n20pY\n\n\n\n\nTK\n0.056754\n0.069067\n0.070474\n0.016886\n0.045028\n0.039400\n0.058630\n0.049836\n0.083255\n0.024038\n0.032716\n0.023335\n0.007974\n0.021107\n0.069184\n0.056168\n0.045966\n0.036585\n0.058865\n0.081027\n0.024508\n0.011843\n0.017355\n0.057915\n0.067158\n0.073125\n0.016731\n0.045396\n0.037440\n0.053001\n0.049959\n0.087633\n0.023751\n0.031356\n0.018018\n0.009594\n0.022230\n0.074529\n0.063999\n0.043173\n0.041652\n0.060840\n0.073359\n0.025389\n0.010881\n0.012870\n0.058123\n0.067810\n0.062792\n0.014006\n...\n0.080097\n0.027670\n0.012621\n0.012743\n0.058601\n0.065424\n0.065302\n0.014864\n0.045078\n0.038986\n0.056408\n0.048124\n0.087354\n0.018884\n0.042276\n0.017178\n0.008894\n0.018519\n0.073830\n0.061769\n0.047149\n0.040327\n0.059698\n0.078216\n0.028509\n0.010599\n0.014011\n0.066015\n0.072738\n0.065037\n0.013692\n0.048900\n0.037897\n0.054523\n0.050122\n0.077262\n0.023227\n0.039364\n0.018337\n0.008435\n0.019071\n0.070905\n0.059413\n0.040465\n0.038509\n0.056357\n0.083496\n0.025917\n0.012836\n0.017482\n\n\nCMGC\n0.080589\n0.070340\n0.083792\n0.013709\n0.050865\n0.035874\n0.053812\n0.035874\n0.074824\n0.022037\n0.029468\n0.015247\n0.007559\n0.020884\n0.069058\n0.057143\n0.044331\n0.032031\n0.053299\n0.078668\n0.042921\n0.020115\n0.007559\n0.079718\n0.075496\n0.072937\n0.012028\n0.058733\n0.035061\n0.053871\n0.032885\n0.074472\n0.021753\n0.026104\n0.013436\n0.007806\n0.021241\n0.064491\n0.063596\n0.046449\n0.037492\n0.055534\n0.080614\n0.042482\n0.018298\n0.005502\n0.074292\n0.068930\n0.074419\n0.013786\n...\n0.084768\n0.052185\n0.016556\n0.005960\n0.074212\n0.073813\n0.074212\n0.011970\n0.053731\n0.034047\n0.050805\n0.031520\n0.074345\n0.017423\n0.028195\n0.015029\n0.010374\n0.020215\n0.070887\n0.063173\n0.045884\n0.033914\n0.056124\n0.086980\n0.048278\n0.018619\n0.006251\n0.082465\n0.066961\n0.074980\n0.012563\n0.050789\n0.034215\n0.050521\n0.038626\n0.079925\n0.019246\n0.028869\n0.016840\n0.006816\n0.023924\n0.072307\n0.060011\n0.046111\n0.035285\n0.057070\n0.074044\n0.043972\n0.018043\n0.006415\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nCK1\n0.057860\n0.076419\n0.076965\n0.014192\n0.039847\n0.037118\n0.063865\n0.052402\n0.070961\n0.017467\n0.027293\n0.012555\n0.014192\n0.024017\n0.079694\n0.050764\n0.033297\n0.035480\n0.058406\n0.086790\n0.038210\n0.015830\n0.016376\n0.061069\n0.070883\n0.069793\n0.007634\n0.033806\n0.032715\n0.053435\n0.043075\n0.087786\n0.023991\n0.022901\n0.016903\n0.010905\n0.020720\n0.076881\n0.059978\n0.056161\n0.037077\n0.061069\n0.087786\n0.041439\n0.017448\n0.006543\n0.050000\n0.067935\n0.073913\n0.010870\n...\n0.084629\n0.041451\n0.015544\n0.012090\n0.053148\n0.068746\n0.069324\n0.012709\n0.036973\n0.021953\n0.047371\n0.042172\n0.082034\n0.017909\n0.030040\n0.017909\n0.020220\n0.019064\n0.095321\n0.047371\n0.041594\n0.034084\n0.065280\n0.098209\n0.041594\n0.021953\n0.015020\n0.051865\n0.074592\n0.088578\n0.015152\n0.039627\n0.034382\n0.055361\n0.039627\n0.074592\n0.020979\n0.034382\n0.020396\n0.008741\n0.026224\n0.079837\n0.046620\n0.038462\n0.043124\n0.067599\n0.087995\n0.027972\n0.012238\n0.011655\n\n\nAtypical\n0.071895\n0.065359\n0.063492\n0.014939\n0.053221\n0.045752\n0.058824\n0.050420\n0.085901\n0.020542\n0.017740\n0.020542\n0.005602\n0.034547\n0.049486\n0.057890\n0.040149\n0.034547\n0.059757\n0.078431\n0.041083\n0.025210\n0.004669\n0.042870\n0.052190\n0.074557\n0.013979\n0.063374\n0.036347\n0.054986\n0.031687\n0.089469\n0.027959\n0.036347\n0.015843\n0.010252\n0.026095\n0.074557\n0.056850\n0.054054\n0.034483\n0.063374\n0.068966\n0.046598\n0.018639\n0.006524\n0.051068\n0.063138\n0.072423\n0.012071\n...\n0.072175\n0.047483\n0.013295\n0.015195\n0.059829\n0.081671\n0.066477\n0.017094\n0.047483\n0.044634\n0.050332\n0.034188\n0.063628\n0.010446\n0.037037\n0.016144\n0.006648\n0.027540\n0.047483\n0.055081\n0.057930\n0.043685\n0.059829\n0.091168\n0.039886\n0.027540\n0.014245\n0.077290\n0.060115\n0.062977\n0.015267\n0.055344\n0.029580\n0.065840\n0.026718\n0.092557\n0.017176\n0.039122\n0.023855\n0.009542\n0.016221\n0.046756\n0.054389\n0.050573\n0.055344\n0.062977\n0.068702\n0.040076\n0.020992\n0.008588\n\n\n\n\n10 rows × 943 columns",
    "crumbs": [
      "Modules",
      "PSSM"
    ]
  },
  {
    "objectID": "pssm.html#entropy",
    "href": "pssm.html#entropy",
    "title": "PSSM",
    "section": "Entropy",
    "text": "Entropy\n\nsource\n\nget_entropy\n\n get_entropy (pssm_df, return_min=False, exclude_zero=False,\n              clean_zero=True)\n\nCalculate entropy per position of a PSSM surrounding 0. The less entropy the more information it contains.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\npssm_df\n\n\na dataframe of pssm with index as aa and column as position\n\n\nreturn_min\nbool\nFalse\nreturn min entropy as a single value or return all entropy as a pd.series\n\n\nexclude_zero\nbool\nFalse\nexclude the column of 0 (center position) in the entropy calculation\n\n\nclean_zero\nbool\nTrue\nif true, zero out non-last three values in position 0 (keep only s,t,y values at center)\n\n\n\nLet \\(P_i(x)\\) be the probability of amino acid \\(x\\) at position \\(i\\) in the PSSM, with \\(i \\in \\{-k, \\dots, -1, 0, +1, \\dots, +k\\}\\). The entropy at each position \\(i\\) is defined as:\n\\[\nH_i = - \\sum_{x} P_i(x) \\log_2 \\left( P_i(x) + \\varepsilon \\right)\n\\]\nwhere \\(\\varepsilon = 10^{-8}\\) is a small constant added for numerical stability.\nIf exclude_zero=True, the central position \\(i = 0\\) is omitted from the entropy calculation.\nIf clean_zero=True, all values at position \\(i = 0\\) are zeroed out except for amino acids Serine (S), Threonine (T), and Tyrosine (Y), typically the only possible phospho-acceptors in kinase motif analysis.\nIf return_min=True, the function returns the minimum entropy across all positions:\n\\[\nH_{\\text{spec}} = \\min_i H_i\n\\]\nOtherwise, the function returns the full vector \\(\\{H_i\\}\\) for each position \\(i\\), reflecting how much information (or uncertainty) is contained at each position in the motif.\n\n# get entropy per position\nget_entropy(pssm_df).sort_values()\n\nPosition\n 0     0.987416\n 1     1.740698\n         ...   \n-18    4.284598\n 14    4.285491\nLength: 41, dtype: float64\n\n\n\n# calculate minimum entropy of surrouding positions\nget_entropy(pssm_df,return_min=True,exclude_zero=True)\n\n1.7406981100302623\n\n\n\nsource\n\n\nget_entropy_flat\n\n get_entropy_flat (flat_pssm:pandas.core.series.Series, return_min=False,\n                   exclude_zero=False, clean_zero=True)\n\nCalculate entropy per position of a flat PSSM surrounding 0\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nflat_pssm\nSeries\n\n\n\n\nreturn_min\nbool\nFalse\nreturn min entropy as a single value or return all entropy as a pd.series\n\n\nexclude_zero\nbool\nFalse\nexclude the column of 0 (center position) in the entropy calculation\n\n\nclean_zero\nbool\nTrue\nif true, zero out non-last three values in position 0 (keep only s,t,y values at center)\n\n\n\n\nget_entropy_flat(flat_pssm).sort_values()\n\nPosition\n 0     0.987416\n 1     1.740698\n         ...   \n-18    4.284598\n 14    4.285491\nLength: 41, dtype: float64\n\n\n\nget_entropy_flat(flat_pssm,return_min=True,exclude_zero=True)\n\n1.7406981100302623\n\n\n\n# test equal\n(get_entropy_flat(flat_pssm).round(5) == get_entropy(pssm_df).round(5)).value_counts()\n\nTrue    41\nName: count, dtype: int64",
    "crumbs": [
      "Modules",
      "PSSM"
    ]
  },
  {
    "objectID": "pssm.html#information-content",
    "href": "pssm.html#information-content",
    "title": "PSSM",
    "section": "Information Content",
    "text": "Information Content\n\nsource\n\nget_IC\n\n get_IC (pssm_df, return_min=False, exclude_zero=False, clean_zero=True)\n\nCalculate the information content (bits) from a frequency matrix, using log2(3) for the middle position and log2(len(pssm_df)) for others. The higher the more information it contains.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\npssm_df\n\n\na dataframe of pssm with index as aa and column as position\n\n\nreturn_min\nbool\nFalse\nreturn min entropy as a single value or return all entropy as a pd.series\n\n\nexclude_zero\nbool\nFalse\nexclude the column of 0 (center position) in the entropy calculation\n\n\nclean_zero\nbool\nTrue\nif true, zero out non-last three values in position 0 (keep only s,t,y values at center)\n\n\n\nLet \\(P_i(x)\\) be the frequency (probability) of amino acid \\(x\\) at position \\(i\\) in the PSSM. The standard information content (IC) at position \\(i\\) is defined as:\n\\[\n\\mathrm{IC}_i = \\max H_i - H_i\n\\]\nwhich is:\n\\[\n\\mathrm{IC}_i = \\log_2(N) - H_i\n\\]\nwhere \\(N\\) is the number of possible amino acids (i.e., \\(N = \\text{len}(P_i)\\)).\nAt the center position (\\(i = 0\\)), only three amino acids (S, T, Y) are relevant, so the maximum entropy at each position is defined as:\n\\[\n\\max H_i =\n\\begin{cases}\n\\log_2(3) & \\text{if } i = 0 \\\\\n\\log_2(N) & \\text{otherwise}\n\\end{cases}\n\\]\n\n# the higher the more conserved\nget_IC(pssm_df,exclude_zero=True).sort_values()\n\nPosition\n 14    0.238071\n-18    0.238964\n         ...   \n 3     0.575586\n 1     2.782864\nLength: 40, dtype: float64\n\n\nCheck all zero cases:\n\npssm_df2=pssm_df.copy()\n\n\npssm_df2[-20]=0\n\n\nget_entropy(pssm_df2,exclude_zero=True).sort_values()\n\nPosition\n-20    0.000000\n 1     1.740698\n         ...   \n-18    4.284598\n 14    4.285491\nLength: 40, dtype: float64\n\n\n\nsource\n\n\nget_IC_flat\n\n get_IC_flat (flat_pssm:pandas.core.series.Series, return_min=False,\n              exclude_zero=False, clean_zero=True)\n\nCalculate the information content (bits) from a flattened pssm pd.Series, using log2(3) for the middle position and log2(len(pssm_df)) for others.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nflat_pssm\nSeries\n\n\n\n\nreturn_min\nbool\nFalse\nreturn min entropy as a single value or return all entropy as a pd.series\n\n\nexclude_zero\nbool\nFalse\nexclude the column of 0 (center position) in the entropy calculation\n\n\nclean_zero\nbool\nTrue\nif true, zero out non-last three values in position 0 (keep only s,t,y values at center)\n\n\n\n\nget_IC_flat(flat_pssm,exclude_zero=True).sort_values()\n\nPosition\n 14    0.238071\n-18    0.238964\n         ...   \n 3     0.575586\n 1     2.782864\nLength: 40, dtype: float64\n\n\n\n(get_IC_flat(flat_pssm).round(5) == get_IC(pssm_df).round(5)).value_counts()\n\nTrue    41\nName: count, dtype: int64",
    "crumbs": [
      "Modules",
      "PSSM"
    ]
  },
  {
    "objectID": "pssm.html#overall-specificity",
    "href": "pssm.html#overall-specificity",
    "title": "PSSM",
    "section": "Overall specificity",
    "text": "Overall specificity\n\nsource\n\nget_specificity\n\n get_specificity (pssm_df)\n\nGet specificity score of a pssm, excluding zero position.\nWe evaluated the overall specificity of a PSSM by combining two metrics: the maximum IC across surrounding positions and the variance of IC values:\n\\[\n\\text{Specificity Score} = 2 \\times \\max(\\text{IC}) + \\mathrm{Var}(\\text{IC})\n\\]\n\nget_specificity(pssm_df)\n\n5.7236223416577445\n\n\n\nsource\n\n\nget_specificity_flat\n\n get_specificity_flat (flat_pssm)\n\nGet specificity score of a pssm, excluding zero position.\n\nget_specificity_flat(flat_pssm)\n\n5.7236223416577445",
    "crumbs": [
      "Modules",
      "PSSM"
    ]
  },
  {
    "objectID": "pssm.html#plot",
    "href": "pssm.html#plot",
    "title": "PSSM",
    "section": "Plot",
    "text": "Plot\n\nHeatmap\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/fastcore/docscrape.py:230: UserWarning: Unknown section See Also\n  else: warn(msg)\n\nsource\n\n\nplot_heatmap_simple\n\n plot_heatmap_simple (matrix, title:str='heatmap', figsize:tuple=(6, 7),\n                      cmap:str='binary', vmin=None, vmax=None,\n                      center=None, robust=False, annot=None, fmt='.2g',\n                      annot_kws=None, linewidths=0, linecolor='white',\n                      cbar=True, cbar_kws=None, cbar_ax=None,\n                      square=False, xticklabels='auto',\n                      yticklabels='auto', mask=None, ax=None)\n\nPlot heatmap based on a matrix of values\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nmatrix\n\n\na matrix of values\n\n\ntitle\nstr\nheatmap\ntitle of the heatmap\n\n\nfigsize\ntuple\n(6, 7)\n(width, height)\n\n\ncmap\nstr\nbinary\ncolor map, default is dark&white\n\n\nvmin\nNoneType\nNone\n\n\n\nvmax\nNoneType\nNone\n\n\n\ncenter\nNoneType\nNone\nThe value at which to center the colormap when plotting divergent data.Using this parameter will change the default cmap if none isspecified.\n\n\nrobust\nbool\nFalse\nIf True and vmin or vmax are absent, the colormap range iscomputed with robust quantiles instead of the extreme values.\n\n\nannot\nNoneType\nNone\nIf True, write the data value in each cell. If an array-like with thesame shape as data, then use this to annotate the heatmap insteadof the data. Note that DataFrames will match on position, not index.\n\n\nfmt\nstr\n.2g\nString formatting code to use when adding annotations.\n\n\nannot_kws\nNoneType\nNone\nKeyword arguments for :meth:matplotlib.axes.Axes.text when annotis True.\n\n\nlinewidths\nint\n0\nWidth of the lines that will divide each cell.\n\n\nlinecolor\nstr\nwhite\nColor of the lines that will divide each cell.\n\n\ncbar\nbool\nTrue\nWhether to draw a colorbar.\n\n\ncbar_kws\nNoneType\nNone\nKeyword arguments for :meth:matplotlib.figure.Figure.colorbar.\n\n\ncbar_ax\nNoneType\nNone\nAxes in which to draw the colorbar, otherwise take space from themain Axes.\n\n\nsquare\nbool\nFalse\nIf True, set the Axes aspect to “equal” so each cell will besquare-shaped.\n\n\nxticklabels\nstr\nauto\n\n\n\nyticklabels\nstr\nauto\n\n\n\nmask\nNoneType\nNone\nIf passed, data will not be shown in cells where mask is True.Cells with missing values are automatically masked.\n\n\nax\nNoneType\nNone\nAxes in which to draw the plot, otherwise use the currently-activeAxes.\n\n\nReturns\nmatplotlib Axes\n\nAxes object with the heatmap.\n\n\n\n\n# plot_heatmap_simple(pssm_df,'kinase',figsize=(10,7))\n\n\nsource\n\n\nplot_heatmap\n\n plot_heatmap (heatmap_df, ax=None, position_label=True, figsize=(5, 6),\n               include_zero=True, scale_pos_neg=False,\n               colorbar_title='Prob.')\n\nPlots a heatmap with specific formatting.\nThis function visualizes a PSSM or log-odds matrix as a heatmap with diverging color scales centered at 0.\nColor scale behavior:\n\nBy default (scale_pos_neg=False), the colormap is centered at 0, but the full data range determines the color intensity:\n\\[\n\\text{color range} = [\\min(\\text{data}), \\max(\\text{data})], \\quad \\text{with center at } 0\n\\]\nThis is useful when you want to emphasize whether values are above or below zero, but without enforcing symmetry.\nIf scale_pos_neg=True, the function uses a balanced diverging scale via TwoSlopeNorm, such that:\n\\[\n\\text{min color} = \\min(\\text{data}), \\quad\n\\text{center} = 0, \\quad\n\\text{max color} = \\max(\\text{data})\n\\]\nThe positive and negative ranges are scaled separately, ensuring that both ends of the heatmap have equal visual weight — especially helpful for symmetric data like log-odds matrices.\n\nAdditional visual features: - The center position (\\(i = 0\\)) can be masked out using include_zero=False.\n\n# plot_heatmap(pssm_df-0.3,scale_pos_neg=False,figsize=(20, 6));\n\n\n# plot_heatmap(pssm_df-0.3,scale_pos_neg=True,figsize=(20, 6));\n\n\nplt.close('all')\n\n\nsource\n\n\nplot_two_heatmaps\n\n plot_two_heatmaps (matrix1, matrix2, kinase_name='Kinase', title1='CDDM',\n                    title2='PSPA', figsize=(4, 4.5), cbar=True,\n                    scale_01=False, **kwargs)\n\nPlot two side-by-side heatmaps with black rectangle borders, titles on top, shared kinase label below, and only left plot showing y-axis labels.\n\n# pssm1 = recover_pssm(target.loc[idx])\n# pssm2 = recover_pssm(pred.loc[idx])\n# plot_two_heatmaps(pssm1,pssm2,f'{idx}:{score:.3f}','PSP','Predicted')\n\n\n\nLogo motif\n\nsource\n\n\nchange_center_name\n\n change_center_name (df)\n\nTransfer the middle pS,pT,pY to S,T,Y for plot.\nNow instead of pS, pT, and pY, the center name becomes S, T and Y:\n\nchange_center_name(pssm_df)[0].sort_values(ascending=False).head()\n\naa\nS    0.664786\nT    0.324738\nY    0.010475\nA    0.000000\nG    0.000000\nName: 0, dtype: float64\n\n\n\nsource\n\n\nget_pos_min_max\n\n get_pos_min_max (pssm_df)\n\nGet min and max value of sum of positive and negative values across each position.\n\nsource\n\n\nscale_zero_position\n\n scale_zero_position (pssm_df)\n\nScale position 0 so that: - Positive values match the max positive column sum of other positions - Negative values match the min (most negative) column sum of other positions\nThis function rescales position 0 in a log-odds PSSM so that its total positive and negative stack heights match those of the most extreme positions on either side.\nThis ensures the central position visually matches the dynamic range of surrounding positions in log-odds logo plots.\n\nsource\n\n\nscale_pos_neg_values\n\n scale_pos_neg_values (pssm_df)\n\nGlobally scale all positive values by max positive column sum, and negative values by min negative column sum (preserving sign).\n\nsource\n\n\nconvert_logo_df\n\n convert_logo_df (pssm_df, scale_zero=True, scale_pos_neg=False)\n\nChange center name from pS,pT,pY to S, T, Y in a pssm and scaled zero position to the max of neigbors.\n\nsource\n\n\nplot_logo_raw\n\n plot_logo_raw (pssm_df, ax=None, title='Motif', ytitle='Bits',\n                figsize=(10, 2))\n\nPlot logo motif using Logomaker.\n\n# plot_logo_raw(pssm_df)\n\n\nsource\n\n\nget_logo_IC\n\n get_logo_IC (pssm_df)\n\nFor plotting purpose, calculate the scaled information content (bits) from a frequency matrix, using log2(3) for the middle position and log2(len(pssm_df)) for others.\nTo visualize the motif using Logomaker, the scaled PSSM is computed by weighting each amino acid’s frequency at position \\(i\\) by the position’s information content:\n\\[\n\\text{PSSM\\_scaled}_i(x) = P_i(x) \\cdot \\mathrm{IC}_i\n\\]\nThis results in a matrix where the total stack height at each position equals the information content, and each letter’s height is proportional to its contribution. This is the standard format used by Logomaker to generate sequence logos.\n\nget_logo_IC(pssm_df)\n\n\n\n\n\n\n\nPosition\n-20\n-19\n-18\n-17\n-16\n-15\n-14\n-13\n-12\n-11\n-10\n-9\n-8\n-7\n-6\n-5\n-4\n-3\n-2\n-1\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\naa\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nP\n0.028979\n0.021736\n0.019696\n0.026208\n0.020191\n0.020036\n0.026940\n0.020702\n0.024652\n0.022535\n0.017114\n0.021499\n0.023403\n0.026208\n0.031930\n0.024593\n0.032412\n0.039787\n0.068936\n0.029358\n0.000000\n2.109590\n0.033707\n0.051101\n0.028948\n0.037501\n0.028892\n0.036076\n0.027630\n0.028354\n0.025461\n0.025050\n0.022227\n0.020044\n0.018602\n0.024891\n0.026862\n0.027559\n0.015651\n0.022606\n0.025402\n\n\nG\n0.019969\n0.019102\n0.016480\n0.015774\n0.020616\n0.015743\n0.025669\n0.019380\n0.021765\n0.020527\n0.020852\n0.023912\n0.016652\n0.021528\n0.027406\n0.021633\n0.028396\n0.031460\n0.028898\n0.034539\n0.000000\n0.087526\n0.036227\n0.036235\n0.017093\n0.030001\n0.021343\n0.022138\n0.024241\n0.019139\n0.021217\n0.019028\n0.016569\n0.022389\n0.016426\n0.020782\n0.023620\n0.017255\n0.018122\n0.023077\n0.017237\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\npT\n0.008280\n0.007245\n0.007637\n0.005824\n0.005313\n0.009405\n0.005845\n0.008369\n0.006219\n0.006470\n0.007869\n0.007459\n0.009226\n0.007956\n0.012506\n0.010703\n0.014055\n0.018197\n0.019497\n0.011225\n0.194046\n0.044885\n0.014806\n0.014866\n0.013233\n0.007800\n0.011453\n0.012025\n0.008602\n0.007561\n0.006837\n0.007708\n0.005456\n0.008529\n0.005541\n0.006525\n0.007873\n0.006950\n0.007002\n0.007771\n0.004990\n\n\npY\n0.000974\n0.001537\n0.002814\n0.002184\n0.001275\n0.002658\n0.001525\n0.001101\n0.001777\n0.002677\n0.002361\n0.003071\n0.002700\n0.001872\n0.003459\n0.003416\n0.005737\n0.003084\n0.005222\n0.002878\n0.006260\n0.011221\n0.003780\n0.008827\n0.003308\n0.005400\n0.001562\n0.002186\n0.001825\n0.002127\n0.003065\n0.002168\n0.002627\n0.001919\n0.001979\n0.001450\n0.001158\n0.000719\n0.002059\n0.002119\n0.002268\n\n\n\n\n23 rows × 41 columns\n\n\n\n\nsource\n\n\nplot_logo\n\n plot_logo (pssm_df, title='Motif', scale_zero=True, ax=None, figsize=(10,\n            1))\n\nPlot logo of information content given a frequency PSSM.\n\n# plot_logo(pssm_df,scale_zero=False,figsize=(10,1))\n\nSet scale_zero to default True can have better vision of the side amino acids\n\n# plot_logo(pssm_df,figsize=(10,1))\n\n\n# plt.close('all')\n\n\n\nLogo motif of log-odds\n\nsource\n\n\nplot_logo_LO\n\n plot_logo_LO (pssm_LO, title='Motif', acceptor=None, scale_zero=True,\n               scale_pos_neg=True, ax=None, figsize=(10, 1))\n\nPlot logo of log-odds given a frequency PSSM.\nTo ensure the phosphorylated residue is visible at the center of a log-odds motif (position 0), two mechanisms are used:\n\nAcceptor override: If the center column is entirely zero (e.g., masked), the user can specify an acceptor ('S', 'T', 'Y', or 'STY'). The function then assigns a small nonzero value (e.g., 0.1) to the corresponding phospho-residue row (pS, pT, pY) at position 0. This ensures the central letter appears in the logo plot, even when real log-odds values are absent.\nStack height rescaling: To maintain visual consistency with surrounding columns, position 0 is rescaled so that its total positive and negative stack heights match the most extreme values observed elsewhere.\n\nTogether, these adjustments ensure that: - The phospho-acceptor appears explicitly at the center, - The visual scale remains consistent with neighboring positions, - The resulting logo can faithfully reflect both biological relevance and statistical signal.\n\npssm_LO = get_pssm_LO(pssm_df,'STY')\n# plot_logo_LO(pssm_LO,scale_zero=False,scale_pos_neg=False)\n\n\n## with zero position scaled to the max\n# plot_logo_LO(pssm_LO,scale_zero=True,scale_pos_neg=False)\n\n\n# # scaled positive and negative values for better visualization\n# plot_logo_LO(pssm_LO,scale_zero=True,scale_pos_neg=True)\n\n\n# for those specific site type (S,T or Y), show acceptor in the middle instead of empty\npssm_LO = get_pssm_LO(pssm_y,'Y')\n# plot_logo_LO(pssm_LO,acceptor='Y')\n\n\n# plt.close('all')\n\n\n\nMultiple logos\nAs multiple figures:\n\nsource\n\n\nplot_logos_idx\n\n plot_logos_idx (pssms_df, *idxs)\n\nPlot logos of a dataframe with flattened PSSMs with index ad IDs.\n\npssms = Data.get_cddm()\n\n\n# plot_logos_idx(pssms,*pssms.index[:2])\n\nIn one figure:\n\nsource\n\n\nplot_logos\n\n plot_logos (pssms_df, count_dict=None, path=None, prefix='Motif')\n\nPlot all logos from a dataframe of flattened PSSMs as subplots in a single figure.\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\npssms_df\n\n\n\n\n\ncount_dict\nNoneType\nNone\nused to display n in motif title\n\n\npath\nNoneType\nNone\n\n\n\nprefix\nstr\nMotif\n\n\n\n\n\n# plot_logos(pssms.head(2))\n\n\n# plt.close('all')\n\n\n\nLogo motif + Heatmap\n\nsource\n\n\nplot_logo_heatmap\n\n plot_logo_heatmap (pssm_df, title='Motif', figsize=(17, 10),\n                    include_zero=False)\n\nPlot logo and heatmap vertically\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\npssm_df\n\n\ncolumn is position, index is aa\n\n\ntitle\nstr\nMotif\n\n\n\nfigsize\ntuple\n(17, 10)\n\n\n\ninclude_zero\nbool\nFalse\n\n\n\n\n\n# plot_logo_heatmap(pssm_df,'Kinase',(17,10))\n\n\nsource\n\n\nplot_logo_heatmap_LO\n\n plot_logo_heatmap_LO (pssm_LO, title='Motif', acceptor=None, figsize=(17,\n                       10), include_zero=False, scale_pos_neg=True)\n\nPlot logo and heatmap of enrichment bits vertically\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\npssm_LO\n\n\npssm of log-odds\n\n\ntitle\nstr\nMotif\n\n\n\nacceptor\nNoneType\nNone\n\n\n\nfigsize\ntuple\n(17, 10)\n\n\n\ninclude_zero\nbool\nFalse\n\n\n\nscale_pos_neg\nbool\nTrue\n\n\n\n\n\n# plot_logo_heatmap_LO(pssm_LO,acceptor='Y')\n\n\npssm_LO = get_pssm_LO(pssm_df,'STY')\n# plot_logo_heatmap_LO(pssm_LO,scale_pos_neg=False) # normal color scale\n\n\n# plt.close('all')",
    "crumbs": [
      "Modules",
      "PSSM"
    ]
  },
  {
    "objectID": "pssm.html#pspa",
    "href": "pssm.html#pspa",
    "title": "PSSM",
    "section": "PSPA",
    "text": "PSPA\n\nPlot\n\nsource\n\n\nplot_logo_pspa\n\n plot_logo_pspa (row, title='Motif', figsize=(5, 2))\n\n\nsource\n\n\nplot_logo_heatmap_pspa\n\n plot_logo_heatmap_pspa (row, title='Motif', figsize=(6, 10),\n                         include_zero=False)\n\nPlot logo and heatmap vertically\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nrow\n\n\nrow of Data.get_pspa_all_norm()\n\n\ntitle\nstr\nMotif\n\n\n\nfigsize\ntuple\n(6, 10)\n\n\n\ninclude_zero\nbool\nFalse\n\n\n\n\n\npspa= Data.get_pspa_all_norm()\n\n\n# plot_logo_heatmap_pspa(pspa.iloc[0],title='kinase')\n\n\n\nCalculations\n\nsource\n\n\nraw2norm\n\n raw2norm (df:pandas.core.frame.DataFrame, PDHK:bool=False)\n\nNormalize single ST kinase data\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\nDataFrame\n\nsingle kinase’s df has position as index, and single amino acid as columns\n\n\nPDHK\nbool\nFalse\nwhether this kinase belongs to PDHK family\n\n\n\nThis function implement the normalization method from Johnson et al. Nature: An atlas of substrate specificities for the human serine/threonine kinome\nSpecifically, &gt; - matrices were column-normalized at all positions by the sum of the 17 randomized amino acids (excluding serine, threonine and cysteine), to yield PSSMs. &gt;- PDHK1 and PDHK4 were normalized to the 16 randomized amino acids (excluding serine, threonine, cysteine and additionally tyrosine) &gt;- The cysteine row was scaled by its median to be 1/17 (1/16 for PDHK1 and PDHK4). &gt;- The serine and threonine values in each position were set to be the median of that position. &gt;- The S0/T0 ratio was determined by summing the values of S and T rows in the matrix (SS and ST, respectively), accounting for the different S vs. T composition of the central (1:1) and peripheral (only S or only T) positions (Sctrl and Tctrl, respectively), and then normalizing to the higher value among the two (S0 and T0, respectively, Supplementary Note 1)\nThis function is usually implemented with the below function, with normalize being a bool argument.\n\nsource\n\n\nget_one_kinase\n\n get_one_kinase (df:pandas.core.frame.DataFrame, kinase:str,\n                 normalize:bool=False, drop_s:bool=True)\n\nObtain a specific kinase data from stacked dataframe\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\nDataFrame\n\nstacked dataframe (paper’s raw data)\n\n\nkinase\nstr\n\na specific kinase\n\n\nnormalize\nbool\nFalse\nnormalize according to the paper; special for PDHK1/4\n\n\ndrop_s\nbool\nTrue\ndrop s as s is a duplicates of t in PSPA\n\n\n\nRetreive a single kinase data from PSPA data that has an format of kinase as index and position+amino acid as column.\n\ndata = Data.get_pspa_st_norm()\n\n\nget_one_kinase(data,'PDHK1')\n\n\n\n\n\n\n\naa\nA\nC\nD\nE\nF\nG\nH\nI\nK\nL\nM\nN\nP\nQ\nR\nS\nT\nV\nW\nY\nt\ny\n\n\nposition\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-5\n0.0594\n0.0625\n0.0589\n0.0550\n0.0775\n0.0697\n0.0687\n0.0590\n0.0515\n0.0657\n0.0687\n0.0613\n0.0451\n0.0424\n0.0594\n0.0594\n0.0594\n0.0573\n0.1001\n0.0775\n0.0583\n0.0658\n\n\n-4\n0.0618\n0.0621\n0.0550\n0.0511\n0.0739\n0.0715\n0.0598\n0.0601\n0.0520\n0.0614\n0.0744\n0.0549\n0.0637\n0.0552\n0.0617\n0.0608\n0.0608\n0.0519\n0.0916\n0.0739\n0.0528\n0.0752\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n3\n0.0486\n0.0609\n0.0938\n0.0684\n0.1024\n0.0676\n0.0544\n0.0583\n0.0388\n0.0552\n0.0637\n0.0505\n0.0686\n0.0502\n0.0561\n0.0588\n0.0588\n0.0593\n0.0641\n0.1024\n0.0539\n0.0431\n\n\n4\n0.0565\n0.0749\n0.0631\n0.0535\n0.0732\n0.0655\n0.0664\n0.0625\n0.0496\n0.0552\n0.0627\n0.0640\n0.0677\n0.0553\n0.0604\n0.0626\n0.0626\n0.0579\n0.0864\n0.0732\n0.0548\n0.0575\n\n\n\n\n10 rows × 22 columns\n\n\n\n\npspa=Data.get_pspa_all_norm()\n\n\n\nPlot PSPA logo motif (old)\n\nsource\n\n\nget_logo\n\n get_logo (df:pandas.core.frame.DataFrame, kinase:str)\n\nGiven stacked df (index as kinase, columns as substrates), get a specific kinase’s logo\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\ndf\nDataFrame\nstacked Dataframe with kinase as index, substrates as columns\n\n\nkinase\nstr\na specific kinase name in index\n\n\n\nThis function is to replicate the motif logo from Johnson et al. Nature: An atlas of substrate specificities for the human serine/threonine kinome. Given raw PSPA data, it can output a motif logo.\n\nimport pandas as pd\n\n\n# load raw PSPA data\ndf = pd.read_csv('https://github.com/sky1ove/katlas_raw/raw/refs/heads/main/nbs/raw/pspa_st_raw.csv').set_index('kinase')\ndf.head()\n\n\n\n\n\n\n\n\n-5P\n-5G\n-5A\n-5C\n-5S\n-5T\n-5V\n-5I\n-5L\n-5M\n...\n4H\n4K\n4R\n4Q\n4N\n4D\n4E\n4s\n4t\n4y\n\n\nkinase\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAAK1\n7614134.38\n2590563.43\n3001315.49\n4696631.43\n4944311.77\n8315837.72\n10056545.00\n16433061.43\n10499735.53\n9133577.86\n...\n6020662.73\n8938081.41\n9983402.01\n6833481.55\n6364453.29\n4189045.89\n4921595.57\n2705053.53\n2705053.53\n2909279.71\n\n\nACVR2A\n4991039.28\n5783855.86\n7015770.78\n8367603.09\n7072052.48\n7601399.57\n7188292.41\n7513915.73\n7159894.71\n6266122.81\n...\n6039472.76\n5556300.56\n5178734.62\n6490097.70\n5862480.97\n6742905.78\n6750653.36\n7414220.16\n7414220.16\n6209576.97\n\n\nACVR2B\n26480329.10\n25689687.16\n28137300.90\n45175909.30\n32876722.90\n33516959.03\n27011194.06\n21996255.94\n23412987.54\n25670581.40\n...\n27984195.21\n22496915.32\n24236904.72\n29132857.30\n26527389.14\n36388726.15\n34729319.54\n37906081.09\n37906081.09\n31761418.56\n\n\nAKT1\n18399509.29\n18104681.05\n16831835.48\n17247743.90\n22647275.57\n17801288.32\n13037570.99\n13271896.32\n14156489.52\n15409761.84\n...\n29511541.69\n50942663.29\n48152924.11\n32693882.62\n28896602.57\n19701350.30\n13887460.52\n17483074.60\n17483074.60\n11696833.54\n\n\nAKT2\n5439237.54\n5569477.23\n5805462.70\n6301076.01\n5004932.12\n4812022.80\n3906822.27\n3776845.45\n4450344.85\n4629319.80\n...\n6812201.58\n11590683.50\n9932525.89\n6544476.93\n6252360.75\n3629091.99\n3510048.19\n5499662.30\n5499662.30\n4188620.88\n\n\n\n\n5 rows × 207 columns\n\n\n\n\n# # plot logo of a kinase\n# get_logo(df, 'AAK1')\n\n\n# plt.close('all')",
    "crumbs": [
      "Modules",
      "PSSM"
    ]
  },
  {
    "objectID": "pssm.html#compare-pssm",
    "href": "pssm.html#compare-pssm",
    "title": "PSSM",
    "section": "Compare PSSM",
    "text": "Compare PSSM\n\npssms = Data.get_pspa_all_scale()\n\n\n# one example\npssm_df = recover_pssm(pssms.iloc[1])\npssm_df2 = recover_pssm(pssms.iloc[0])\n\n\nKL divergence\n\nsource\n\n\nkl_divergence\n\n kl_divergence (p1, p2)\n\n*KL divergence D_KL(p1 || p2) over positions.\np1 and p2 are arrays (df or np) with index as aa and column as position. Returns average divergence across positions if mean=True, else per-position.*\n\n\n\n\nDetails\n\n\n\n\np1\ntarget pssm p (array-like, shape: (AA, positions))\n\n\np2\npred pssm q (array-like, same shape as p1)\n\n\n\nThe Kullback–Leibler (KL) divergence between two probability distributions ( P ) and ( Q ) is defined as:\n\\[\n\\mathrm{KL}(P \\| Q) = \\sum_{x \\in \\mathcal{X}} P(x) \\log \\left( \\frac{P(x)}{Q(x)} \\right)\n\\]\nThis measures the information lost when ( Q ) is used to approximate ( P ). It is not symmetric, i.e.,\n\\[\n\\mathrm{KL}(P \\| Q) \\ne \\mathrm{KL}(Q \\| P)\n\\]\nand it is non-negative, meaning:\n\\[\n\\mathrm{KL}(P \\| Q) \\ge 0\n\\]\nwith equality if and only if ( P = Q ) almost everywhere.\nIn practical computation, to avoid numerical instability when ( P(x) = 0 ) or ( Q(x) = 0 ), we often add a small constant ( ):\n\\[\n\\mathrm{KL}_\\varepsilon(P \\| Q) = \\sum_{x \\in \\mathcal{X}} P(x) \\log \\left( \\frac{P(x) + \\varepsilon}{Q(x) + \\varepsilon} \\right)\n\\]\n\nkl_divergence(pssm_df,pssm_df2)\n\narray([0.29182172, 0.11138481, 0.24590698, 0.46021635, 0.36874823,\n       0.53858511, 1.51571614, 0.02905442, 0.08530757, 0.07753394])\n\n\n\nkl_divergence(pssm_df,pssm_df2).mean()\n\nnp.float64(0.37242752573216287)\n\n\n\nkl_divergence(pssm_df,pssm_df2).max()\n\nnp.float64(1.5157161422110503)\n\n\n\nsource\n\n\nkl_divergence_flat\n\n kl_divergence_flat (p1_flat, p2_flat)\n\np1 and p2 are two flattened pd.Series with index as aa and column as position\n\n\n\n\nDetails\n\n\n\n\np1_flat\npd.Series of target flattened pssm p\n\n\np2_flat\npd.Series of pred flattened pssm q\n\n\n\n\nkl_divergence_flat(pssms.iloc[1],pssms.iloc[0])\n\nCPU times: user 1.37 ms, sys: 0 ns, total: 1.37 ms\nWall time: 1.37 ms\n\n\n0.37242752573216287\n\n\n\n\nJS divergence\n\nsource\n\n\njs_divergence\n\n js_divergence (p1, p2, index=True)\n\np1 and p2 are two arrays (df or np) with index as aa and column as position\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\np1\n\n\npssm\n\n\np2\n\n\npssm\n\n\nindex\nbool\nTrue\n\n\n\n\nThe Jensen-Shannon divergence between two probability distributions $ P $ and $ Q $ is defined as:\n\\[\n\\mathrm{JS}(P \\| Q) = \\frac{1}{2} \\, \\mathrm{KL}(P \\| M) + \\frac{1}{2} \\, \\mathrm{KL}(Q \\| M)\n\\]\nwhere $ M = (P + Q) $ is the average (mixture) distribution, and $ $ denotes the Kullback–Leibler divergence:\n\\[\n\\mathrm{KL}(P \\| Q) = \\sum_{x \\in \\mathcal{X}} P(x) \\log \\left( \\frac{P(x)}{Q(x)} \\right)\n\\]\nTherefore,\n\\[\n\\mathrm{JS}_\\varepsilon(P \\| Q) = \\frac{1}{2} \\sum_{x \\in \\mathcal{X}} P(x) \\log \\left( \\frac{P(x) + \\varepsilon}{M(x) + \\varepsilon} \\right)\n+ \\frac{1}{2} \\sum_{x \\in \\mathcal{X}} Q(x) \\log \\left( \\frac{Q(x) + \\varepsilon}{M(x) + \\varepsilon} \\right)\n\\]\n\njs_divergence(pssm_df,pssm_df2)\n\nPosition\n-5    0.065539\n-4    0.025712\n        ...   \n 3    0.020949\n 4    0.018206\nLength: 10, dtype: float64\n\n\n\njs_divergence(pssm_df,pssm_df2).max()\n\nnp.float64(0.34404931056288773)\n\n\n\njs_divergence(pssm_df,pssm_df2).mean()\n\nnp.float64(0.08286124552178498)\n\n\n\nsource\n\n\njs_divergence_flat\n\n js_divergence_flat (p1_flat, p2_flat)\n\np1 and p2 are two flattened pd.Series with index as aa and column as position\n\n\n\n\nDetails\n\n\n\n\np1_flat\npd.Series of flattened pssm\n\n\np2_flat\npd.Series of flattened pssm\n\n\n\n\njs_divergence_flat(pssms.iloc[1],pssms.iloc[0])\n\nCPU times: user 1.26 ms, sys: 0 ns, total: 1.26 ms\nWall time: 1.26 ms\n\n\n0.08286124552178498\n\n\n\n\nJS similarity\nTo convert the Jensen–Shannon divergence into a similarity measure, we first normalize it to bits by dividing by log(2), ensuring that the divergence lies within the range [0, 1]. \\[\n\\mathrm{JS}_{\\text{bits}}(P \\| Q) = \\frac{\\mathrm{JS}(P \\| Q)}{\\log 2}\n\\]\nThe similarity is then defined as one minus this normalized divergence: \\[\n\\mathrm{Sim}_{\\mathrm{JS}}(P, Q) = 1 - \\mathrm{JS}_{\\text{bits}}(P \\| Q)\n\\]\nThus, \\(\\mathrm{Sim}_{\\mathrm{JS}}\\) ranges from 0 (completely dissimilar) to 1 (identical distributions).\n\nsource\n\n\njs_similarity\n\n js_similarity (pssm1, pssm2)\n\nConvert JSD to bits to be in range (0,1) then 1-JSD.\n\njs_similarity(pssm_df,pssm_df2)\n\nPosition\n-5    0.905448\n-4    0.962905\n        ...   \n 3    0.969777\n 4    0.973734\nLength: 10, dtype: float64\n\n\n\nsource\n\n\njs_similarity_flat\n\n js_similarity_flat (p1_flat, p2_flat)\n\nConvert JSD to bits to be in range (0,1) then 1-JSD.\n\n# #| export\n# def weighted_js_similarity(pssm1,pssm2):\n#     pssm = (pssm1+pssm2)/2\n#     ic = get_IC(pssm)\n    \n#     similarity = js_similarity(pssm1,pssm2)\n#     return (ic*similarity)/ic.sum()\n\n\n\nCosine similarity\n\nsource\n\n\ncosine_similarity\n\n cosine_similarity (pssm1:pandas.core.frame.DataFrame,\n                    pssm2:pandas.core.frame.DataFrame)\n\nCompute cosine similarity per position (column) between two PSSMs.\nThe cosine similarity between two vectors ( P ) and ( Q ) (e.g., two PSSM columns representing amino acid probability distributions) is defined as:\n\\[\n\\mathrm{cos}(P, Q) = \\frac{P \\cdot Q}{\\|P\\| \\, \\|Q\\|}\n\\]\nwhere $ P Q = _{i=1}^{n} P_i Q_i $ is the dot product between $ P $ and $ Q $, and $ |P| = $ is the Euclidean norm of $ P $.\nSince all entries of $ P $ and $ Q $ are nonnegative probabilities (i.e., $ P_i, Q_i $), the cosine similarity lies within the range:\n\\[\n0 \\leq \\mathrm{cos}(P, Q) \\leq 1\n\\]\nGiven that pssm are probabilities between 0 and 1, cosine similarity is within (0,1)\n\ncosine_similarity(pssm_df,pssm_df2).sort_values()\n\n 1    0.130818\n-2    0.606234\n        ...   \n 4    0.934967\n 2    0.971066\nLength: 10, dtype: float64\n\n\n\ncosine_similarity(pssm_df,pssm_df2).mean()\n\nnp.float64(0.754148470457778)\n\n\n\nsource\n\n\ncosine_overall_flat\n\n cosine_overall_flat (pssm1_flat, pssm2_flat)\n\nCompute overall cosine similarity between two PSSMs (flattened).\n\ncosine_overall_flat(pssms.iloc[0],pssms.iloc[0])\n\nnp.float64(1.0000000000000004)\n\n\n\ncosine_overall_flat(pssms.iloc[0],pssms.iloc[1])\n\nnp.float64(0.6614783212500965)",
    "crumbs": [
      "Modules",
      "PSSM"
    ]
  },
  {
    "objectID": "pssm.html#end",
    "href": "pssm.html#end",
    "title": "PSSM",
    "section": "End",
    "text": "End",
    "crumbs": [
      "Modules",
      "PSSM"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "Data",
    "section": "",
    "text": "from katlas.data import *",
    "crumbs": [
      "Modules",
      "Data"
    ]
  },
  {
    "objectID": "data.html#setup",
    "href": "data.html#setup",
    "title": "Data",
    "section": "",
    "text": "from katlas.data import *",
    "crumbs": [
      "Modules",
      "Data"
    ]
  },
  {
    "objectID": "data.html#kinase-dataset",
    "href": "data.html#kinase-dataset",
    "title": "Data",
    "section": "Kinase Dataset",
    "text": "Kinase Dataset\nWe will go through how to load kinase information data and phosphorylation sites data.\nDatasets used in this study can be accessed through Data\n\nsource\n\nData\n\n Data ()\n\nA class for fetching various datasets.\nYou can change it to local path if you want:\nData.DATASET_DIR=Path('katlas_dataset')\n\nsource\n\n\nData.download\n\n Data.download (download_dir=None, force=False, verbose=True)\n\nDownload dataset zip and extract them in tmp folder if dataset_dir is not given.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndownload_dir\nNoneType\nNone\ndest directory of downloaded folder\n\n\nforce\nbool\nFalse\nif force, will overwrite the current dataset folder\n\n\nverbose\nbool\nTrue\nprint existing dataset folder\n\n\n\nFor the first time download or to update data folder:\nData.download(force=True)\n\n# Data.download(force=True)\n\n\nsource\n\n\nData.read_file\n\n Data.read_file (rel_path)\n\n*Load a CSV or Parquet file from the local dataset folder.\nAutomatically infers file type from the filename extension. Renames ‘Unnamed: 0’ column to ‘kinase’ if present.*\n\nData.read_file('kinase_info.csv')\n\n\n\n\n\n\n\n\nkinase\nID_coral\nuniprot\ngene\nmodi_group\ngroup\nfamily\nsubfamily_coral\nsubfamily\nin_pspa_st\nin_pspa_tyr\nin_pspa\nin_cddm\nkd_ID\nactive_D1_D2\nactive_kd_ID\npspa_ID\npseudo\npspa_category_small\npspa_category_big\ncddm_big\ncddm_small\nlength\nhuman_uniprot_sequence\nkinasecom_domain\nnucleus\ncytosol\ncytoskeleton\nplasma membrane\nmitochondrion\nGolgi apparatus\nendoplasmic reticulum\nvesicle\ncentrosome\naggresome\nmain_location\n\n\n\n\n0\nAAK1\nAAK1\nQ2M2I8\nAAK1\nOther\nOther\nNAK\nNaN\nNAK\n1\n0\n1\n0\nQ2M2I8_AAK1_HUMAN_KD1\n1.0\nQ2M2I8_AAK1_HUMAN_KD1\nAAK1\n0\nNak\nNak\nNaN\nNaN\n961\nMKKFFDSRREQGGSGLGSGSSGGGGSTSGLGSGYIGRVFGIGRQQV...\nVTVDEVLAEGGFAIVFLVRTSNGMKCALKRMFVNNEHDLQVCKREI...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1\nAATK\nLMR1\nQ6ZMQ8\nAATK\nTK\nTK\nLmr\nNaN\nLmr\n0\n0\n0\n0\nQ6ZMQ8_LMTK1_HUMAN_KD1\n1.0\nQ6ZMQ8_LMTK1_HUMAN_KD1\nNaN\n0\nNaN\nNaN\nNaN\nNaN\n1374\nMSSSFFNPSFAFSSHFDPDGAPLSELSWPSSLAVVAVSFSGLFAVI...\nLLYLKEIGRGWFGKVFLGEVNSGISSAQVVVKELQASASVQEQMQF...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n521\nZAK\nZAK\nQ9NYL2\nMAP3K20\nTKL\nTKL\nMLK\nZAK\nZAK\n1\n0\n1\n1\nQ9NYL2_M3K20_HUMAN_KD1\n1.0\nQ9NYL2_M3K20_HUMAN_KD1\nZAK\n0\nMap3k\nMap3k\n2.0\n9.0\n800\nMSSLGASFVQIKFDDLQFFENCGGGSFGSVYRAKWISQDKEVAVKK...\nLQFFENCGGGSFGSVYRAKWISQDKEVAVKKLLKIEKEAEILSVLS...\n5.0\n5.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nnucleus\n\n\n522\nZAP70\nZAP70\nP43403\nZAP70\nTK\nTK\nSyk\nNaN\nSyk\n0\n1\n1\n1\nP43403_ZAP70_HUMAN_KD1\n1.0\nP43403_ZAP70_HUMAN_KD1\nZAP70\n0\nSyk and fak\nSyk and fak\n1.0\n3.0\n619\nMPDPAAHLPFFYGSISRAEAEEHLKLAGMADGLFLLRQCLRSLGGY...\nLIADIELGCGNFGSVRQGVYRMRKKQIDVAIKVLKQGTEKADTEEM...\n3.0\n5.0\nNaN\n2.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\ncytosol\n\n\n\n\n523 rows × 36 columns\n\n\n\n\n\nKinase info\n\nsource\n\n\nData.get_kinase_info\n\n Data.get_kinase_info ()\n\nGet information of 523 human kinases on kinome tree. Group, family, and subfamily classifications are sourced from Coral; full protein sequences are retrieved using UniProt IDs; kinase domain sequences are obtained from KinaseDomain.com; and cellular localization data is extracted from published literature.\n\nData.get_kinase_info()\n\n\n\n\n\n\n\n\nkinase\nID_coral\nuniprot\ngene\nmodi_group\ngroup\nfamily\nsubfamily_coral\nsubfamily\nin_pspa_st\nin_pspa_tyr\nin_pspa\nin_cddm\nkd_ID\nactive_D1_D2\nactive_kd_ID\npspa_ID\npseudo\npspa_category_small\npspa_category_big\ncddm_big\ncddm_small\nlength\nhuman_uniprot_sequence\nkinasecom_domain\nnucleus\ncytosol\ncytoskeleton\nplasma membrane\nmitochondrion\nGolgi apparatus\nendoplasmic reticulum\nvesicle\ncentrosome\naggresome\nmain_location\n\n\n\n\n0\nAAK1\nAAK1\nQ2M2I8\nAAK1\nOther\nOther\nNAK\nNaN\nNAK\n1\n0\n1\n0\nQ2M2I8_AAK1_HUMAN_KD1\n1.0\nQ2M2I8_AAK1_HUMAN_KD1\nAAK1\n0\nNak\nNak\nNaN\nNaN\n961\nMKKFFDSRREQGGSGLGSGSSGGGGSTSGLGSGYIGRVFGIGRQQV...\nVTVDEVLAEGGFAIVFLVRTSNGMKCALKRMFVNNEHDLQVCKREI...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1\nAATK\nLMR1\nQ6ZMQ8\nAATK\nTK\nTK\nLmr\nNaN\nLmr\n0\n0\n0\n0\nQ6ZMQ8_LMTK1_HUMAN_KD1\n1.0\nQ6ZMQ8_LMTK1_HUMAN_KD1\nNaN\n0\nNaN\nNaN\nNaN\nNaN\n1374\nMSSSFFNPSFAFSSHFDPDGAPLSELSWPSSLAVVAVSFSGLFAVI...\nLLYLKEIGRGWFGKVFLGEVNSGISSAQVVVKELQASASVQEQMQF...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n521\nZAK\nZAK\nQ9NYL2\nMAP3K20\nTKL\nTKL\nMLK\nZAK\nZAK\n1\n0\n1\n1\nQ9NYL2_M3K20_HUMAN_KD1\n1.0\nQ9NYL2_M3K20_HUMAN_KD1\nZAK\n0\nMap3k\nMap3k\n2.0\n9.0\n800\nMSSLGASFVQIKFDDLQFFENCGGGSFGSVYRAKWISQDKEVAVKK...\nLQFFENCGGGSFGSVYRAKWISQDKEVAVKKLLKIEKEAEILSVLS...\n5.0\n5.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nnucleus\n\n\n522\nZAP70\nZAP70\nP43403\nZAP70\nTK\nTK\nSyk\nNaN\nSyk\n0\n1\n1\n1\nP43403_ZAP70_HUMAN_KD1\n1.0\nP43403_ZAP70_HUMAN_KD1\nZAP70\n0\nSyk and fak\nSyk and fak\n1.0\n3.0\n619\nMPDPAAHLPFFYGSISRAEAEEHLKLAGMADGLFLLRQCLRSLGGY...\nLIADIELGCGNFGSVRQGVYRMRKKQIDVAIKVLKQGTEKADTEEM...\n3.0\n5.0\nNaN\n2.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\ncytosol\n\n\n\n\n523 rows × 36 columns\n\n\n\n\nsource\n\n\nData.get_kinase_uniprot\n\n Data.get_kinase_uniprot ()\n\nGet information of 672 uniprot human kinases, which were retrieved from UniProt by filtering all human protein entries using the keyword ‘kinase’. It includes additional pseudokinases and lipid kinases.\n\nData.get_kinase_uniprot()\n\n\n\n\n\n\n\n\nEntry\nEntry Name\nProtein names\nGene Names\nuniprot_keyword_kinase\non_tree\nOrganism\nKeywords\nSequence\n\n\n\n\n0\nA2RU49\nHYKK_HUMAN\nHydroxylysine kinase (5-hydroxy-L-lysine kinas...\nHYKK AGPHD1\n1\n0\nHomo sapiens (Human)\nAlternative splicing;Cytoplasm;Kinase;Proteomi...\nMSSGNYQQSEALSKPTFSEEQASALVESVFGLKVSKVRPLPSYDDQ...\n\n\n1\nA4D2B8\nPM2P1_HUMAN\nPutative postmeiotic segregation increased 2-l...\nPMS2P1 PMS2L1 PMS2L13 PMS2L6 PMS2L8 PMS3 PMS8 ...\n1\n0\nHomo sapiens (Human)\nAlternative splicing;Kinase;Reference proteome...\nMVTMCGGHRPENFLHQVLTEFGEELAGEGKSEVGGGAPRSYLQVAS...\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n670\nQ8NCB2\nCAMKV_HUMAN\nCaM kinase-like vesicle-associated protein\nCAMKV\n0\n1\nHomo sapiens (Human)\nAlternative splicing;Calmodulin-binding;Cell m...\nMPFGCVTLGDKKNYNQPSEVTDRYDLGQVIKTEEFCEIFRAKDKTT...\n\n\n671\nQ8IV63\nVRK3_HUMAN\nSerine/threonine-protein kinase VRK3 (EC 2.7.1...\nVRK3\n0\n1\nHomo sapiens (Human)\n3D-structure;Alternative splicing;Cytoplasm;Nu...\nMISFCPDCGKSIQAAFKFCPYCGNSLPVEEHVGSQTFVNPHVSSFQ...\n\n\n\n\n672 rows × 9 columns\n\n\n\n\nsource\n\n\nData.get_kd_uniprot\n\n Data.get_kd_uniprot ()\n\nKinase domains extracted from UniProt database.\n\nData.get_kd_uniprot()\n\n\n\n\n\n\n\n\nkd_ID\nUniprot\nEntry Name\nProtein names\nGene Names\nGene Names (primary)\nOrganism\nkd_note\nkd_evidence\nkd_start\nkd_end\nkd_seq\nDomain [FT]\nDomain [CC]\nRegion\nMotif\nProtein families\nReactome\nComplexPortal\nSubcellular location [CC]\nGene Ontology (biological process)\nTissue specificity\nInteracts with\nSubunit structure\nFunction [CC]\nActivity regulation\nfull_seq\nD1\nD2\nD3\nN1\nactive_D1_D2\n\n\n\n\n0\nA0A075F7E9_LERK1_ORYSI_KD1\nA0A075F7E9\nLERK1_ORYSI\nG-type lectin S-receptor-like serine/threonine...\nLECRK1 LECRK OsI_14840\nLECRK1\nOryza sativa subsp. indica (Rice)\nProtein kinase\nECO:0000255|PROSITE-ProRule:PRU00159\n523\n797\nAGFHEILGAGASGVVYKGQLEDELKTNIAVKTIHKLQPETEKEFMV...\nDOMAIN 22..149; /note=\"Bulb-type lectin\"; /evi...\nNone\nNone\nNone\nProtein kinase superfamily, Ser/Thr protein ki...\nNone\nNone\nSUBCELLULAR LOCATION: Membrane {ECO:0000255}; ...\ndefense response [GO:0006952]; response to oth...\nTISSUE SPECIFICITY: Expressed in plumules, rad...\nNone\nSUBUNIT: Interacts (via kinase domain) with AD...\nFUNCTION: Involved in innate immunity. Require...\nNone\nMVALLLFPMLLQLLSPTCAQTQKNITLGSTLAPQGPASSWLSPSGD...\n1\n1\n1\n1\n1\n\n\n1\nA0A078BQP2_GCY25_CAEEL_KD1\nA0A078BQP2\nGCY25_CAEEL\nReceptor-type guanylate cyclase gcy-25 (EC 4.6...\ngcy-25 Y105C5B.2\ngcy-25\nCaenorhabditis elegans\nProtein kinase\nECO:0000255|PROSITE-ProRule:PRU00159\n464\n749\nRVSTISTARASYSSIFSGNVAEHAIVNKQKVSVKRHVQRRAITFSR...\nDOMAIN 464..749; /note=\"Protein kinase\"; /evid...\nDOMAIN: The protein kinase domain is predicted...\nNone\nNone\nAdenylyl cyclase class-4/guanylyl cyclase family\nR-CEL-2514859;\nNone\nSUBCELLULAR LOCATION: Cell membrane {ECO:00003...\ncGMP biosynthetic process [GO:0006182]; intrac...\nTISSUE SPECIFICITY: Expressed in AQR, PQR and ...\nNone\nNone\nFUNCTION: Guanylate cyclase involved in the pr...\nNone\nMLLLLLLLKISTFVDSFQIGHLEFENSNETRILEICMKNAGSWRDH...\n0\n0\n1\n0\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n5534\nX5M5N0_WNK_CAEEL_KD1\nX5M5N0\nWNK_CAEEL\nSerine/threonine-protein kinase WNK (EC 2.7.11...\nwnk-1 C46C2.1\nwnk-1\nCaenorhabditis elegans\nProtein kinase\nECO:0000255|PROSITE-ProRule:PRU00159\n334\n596\nLKFDEELGRGSFKTVFRGLDTETGVAVAWCELQESKLNKTERQRFR...\nDOMAIN 334..596; /note=\"Protein kinase\"; /evid...\nDOMAIN: Disordered regions undergo liquid-liqu...\nNone\nNone\nProtein kinase superfamily, Ser/Thr protein ki...\nNone\nNone\nSUBCELLULAR LOCATION: Cytoplasm {ECO:0000250|U...\ncell volume homeostasis [GO:0006884]; cellular...\nTISSUE SPECIFICITY: Expressed in pharynx, nerv...\nG5EEN4\nSUBUNIT: Interacts with gck-3 (via C-terminus)...\nFUNCTION: Serine/threonine-protein kinase comp...\nACTIVITY REGULATION: Activated in response to ...\nMPDSITNGGRPPAPPSSVSSTTASTTGNFGTRRRLVNRIKKVDELH...\n1\n1\n1\n1\n1\n\n\n5535\nX5M8U1_GCY17_CAEEL_KD1\nX5M8U1\nGCY17_CAEEL\nReceptor-type guanylate cyclase gcy-17 (EC 4.6...\ngcy-17 W03F11.2\ngcy-17\nCaenorhabditis elegans\nProtein kinase\nECO:0000255|PROSITE-ProRule:PRU00159\n535\n824\nEASQRSFASGPSTSTKLTVESRTETTRFIFYIYQVRNNEVVAANKH...\nDOMAIN 535..824; /note=\"Protein kinase\"; /evid...\nDOMAIN: The protein kinase domain is predicted...\nNone\nNone\nAdenylyl cyclase class-4/guanylyl cyclase family\nR-CEL-2514859;\nNone\nSUBCELLULAR LOCATION: Cell membrane {ECO:00003...\ncGMP biosynthetic process [GO:0006182]; intrac...\nTISSUE SPECIFICITY: Expressed in PHA sensory n...\nNone\nNone\nFUNCTION: Guanylate cyclase involved in the pr...\nNone\nMLFLRLFIFTPFLILANCQARRTIKVGLLFVQNVSSLQVGIGYRTS...\n0\n1\n1\n0\n0\n\n\n\n\n5536 rows × 32 columns\n\n\n\n\n\nPSPA data\n\n\n\nget_pspa_tyr_norm\n\n get_pspa_tyr_norm ()\n\nGet PSPA normalized data of tyrosine kinase.\n\nData.get_pspa_tyr_norm()\n\n\n\n\n\n\n\n\n-5P\n-5G\n-5A\n-5C\n-5S\n-5T\n-5V\n-5I\n-5L\n-5M\n-5F\n-5Y\n-5W\n-5H\n-5K\n-5R\n-5Q\n-5N\n-5D\n-5E\n-5s\n-5t\n-5y\n-4P\n-4G\n-4A\n-4C\n-4S\n-4T\n-4V\n-4I\n-4L\n-4M\n-4F\n-4Y\n-4W\n-4H\n-4K\n-4R\n-4Q\n-4N\n-4D\n-4E\n-4s\n-4t\n-4y\n-3P\n-3G\n-3A\n-3C\n...\n4A\n4C\n4S\n4T\n4V\n4I\n4L\n4M\n4F\n4Y\n4W\n4H\n4K\n4R\n4Q\n4N\n4D\n4E\n4s\n4t\n4y\n5P\n5G\n5A\n5C\n5S\n5T\n5V\n5I\n5L\n5M\n5F\n5Y\n5W\n5H\n5K\n5R\n5Q\n5N\n5D\n5E\n5s\n5t\n5y\n0S\n0T\n0Y\n0s\n0t\n0y\n\n\nkinase\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nABL1\n0.0668\n0.0689\n0.0646\n0.0520\n0.0564\n0.0539\n0.0485\n0.0448\n0.0520\n0.0536\n0.0454\n0.0454\n0.0283\n0.0597\n0.0600\n0.0662\n0.0594\n0.0606\n0.0575\n0.0535\n0.0507\n0.0507\n0.0658\n0.0680\n0.0758\n0.0687\n0.0518\n0.0478\n0.0442\n0.0561\n0.0443\n0.0547\n0.0491\n0.0390\n0.0390\n0.0345\n0.0496\n0.0485\n0.0530\n0.0655\n0.0502\n0.0667\n0.0843\n0.0618\n0.0618\n0.0925\n0.0634\n0.0642\n0.0568\n0.0527\n...\n0.0526\n0.0584\n0.0563\n0.0522\n0.0514\n0.0429\n0.0510\n0.0664\n0.0645\n0.0645\n0.0600\n0.0647\n0.0647\n0.0757\n0.0607\n0.0499\n0.0322\n0.0342\n0.0217\n0.0217\n0.0306\n0.0769\n0.0707\n0.0624\n0.0493\n0.0591\n0.0661\n0.0553\n0.0378\n0.0548\n0.0603\n0.0392\n0.0392\n0.0413\n0.0613\n0.0652\n0.0756\n0.0526\n0.0512\n0.0362\n0.0339\n0.0254\n0.0254\n0.0337\n0\n0\n1\n0\n0\n1\n\n\nTNK2\n0.0679\n0.0818\n0.0627\n0.0617\n0.0529\n0.0528\n0.0419\n0.0463\n0.0437\n0.0453\n0.0539\n0.0539\n0.0598\n0.0583\n0.0624\n0.0727\n0.0537\n0.0553\n0.0451\n0.0435\n0.0430\n0.0430\n0.0555\n0.0723\n0.0682\n0.0665\n0.0567\n0.0458\n0.0423\n0.0436\n0.0426\n0.0433\n0.0495\n0.0584\n0.0584\n0.0697\n0.0556\n0.0664\n0.0757\n0.0647\n0.0532\n0.0409\n0.0413\n0.0398\n0.0398\n0.0493\n0.0755\n0.0653\n0.0572\n0.0544\n...\n0.0580\n0.0648\n0.0670\n0.0571\n0.0470\n0.0493\n0.0412\n0.0568\n0.0516\n0.0516\n0.0499\n0.0559\n0.0430\n0.0553\n0.0485\n0.0502\n0.0416\n0.0464\n0.0452\n0.0452\n0.0533\n0.0644\n0.0599\n0.0609\n0.0629\n0.0564\n0.0634\n0.0527\n0.0502\n0.0641\n0.0539\n0.0679\n0.0679\n0.0680\n0.0499\n0.0385\n0.0302\n0.0531\n0.0465\n0.0630\n0.0572\n0.0364\n0.0364\n0.0572\n0\n0\n1\n0\n0\n1\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nYES1\n0.0677\n0.0571\n0.0537\n0.0530\n0.0527\n0.0505\n0.0435\n0.0375\n0.0400\n0.0463\n0.0478\n0.0478\n0.0419\n0.0564\n0.0681\n0.0647\n0.0610\n0.0752\n0.0748\n0.0610\n0.0652\n0.0652\n0.0668\n0.0625\n0.0695\n0.0524\n0.0530\n0.0470\n0.0404\n0.0476\n0.0416\n0.0528\n0.0529\n0.0406\n0.0406\n0.0424\n0.0566\n0.0549\n0.0561\n0.0607\n0.0559\n0.0786\n0.0875\n0.0596\n0.0596\n0.0705\n0.0564\n0.0580\n0.0456\n0.0572\n...\n0.0464\n0.0747\n0.0521\n0.0561\n0.0468\n0.0452\n0.0481\n0.0716\n0.0689\n0.0689\n0.0619\n0.0623\n0.0587\n0.0757\n0.0652\n0.0499\n0.0421\n0.0492\n0.0371\n0.0371\n0.0467\n0.0762\n0.0532\n0.0533\n0.0610\n0.0596\n0.0558\n0.0416\n0.0375\n0.0467\n0.0518\n0.0627\n0.0627\n0.0456\n0.0593\n0.0662\n0.0840\n0.0559\n0.0604\n0.0422\n0.0482\n0.0374\n0.0374\n0.0411\n0\n0\n1\n0\n0\n1\n\n\nZAP70\n0.0602\n0.0880\n0.0623\n0.0496\n0.0471\n0.0514\n0.0465\n0.0380\n0.0307\n0.0526\n0.0479\n0.0479\n0.0347\n0.0641\n0.0471\n0.0452\n0.0492\n0.0703\n0.0870\n0.0777\n0.1622\n0.1622\n0.1208\n0.0977\n0.0792\n0.0865\n0.0556\n0.0487\n0.0367\n0.0375\n0.0312\n0.0317\n0.0344\n0.0274\n0.0274\n0.0347\n0.0474\n0.0338\n0.0380\n0.0571\n0.0457\n0.0929\n0.1392\n0.1432\n0.1432\n0.1685\n0.0588\n0.0610\n0.0537\n0.0581\n...\n0.0491\n0.0520\n0.0583\n0.0530\n0.0504\n0.0304\n0.0424\n0.0554\n0.0393\n0.0393\n0.0539\n0.0671\n0.0562\n0.0557\n0.0712\n0.0406\n0.0597\n0.0558\n0.0440\n0.0440\n0.0318\n0.1269\n0.0904\n0.0737\n0.0457\n0.0638\n0.0692\n0.0343\n0.0235\n0.0305\n0.0461\n0.0343\n0.0343\n0.0344\n0.0484\n0.0477\n0.0290\n0.0520\n0.0537\n0.0709\n0.0710\n0.0862\n0.0862\n0.0605\n0\n0\n1\n0\n0\n1\n\n\n\n\n93 rows × 236 columns\n\n\n\n\n\n\nget_pspa_st_norm\n\n get_pspa_st_norm ()\n\nGet PSPA normalized data of serine/threonine kinase.\n\nData.get_pspa_st_norm()\n\n\n\n\n\n\n\n\n-5P\n-5G\n-5A\n-5C\n-5S\n-5T\n-5V\n-5I\n-5L\n-5M\n-5F\n-5Y\n-5W\n-5H\n-5K\n-5R\n-5Q\n-5N\n-5D\n-5E\n-5s\n-5t\n-5y\n-4P\n-4G\n-4A\n-4C\n-4S\n-4T\n-4V\n-4I\n-4L\n-4M\n-4F\n-4Y\n-4W\n-4H\n-4K\n-4R\n-4Q\n-4N\n-4D\n-4E\n-4s\n-4t\n-4y\n-3P\n-3G\n-3A\n-3C\n...\n3A\n3C\n3S\n3T\n3V\n3I\n3L\n3M\n3F\n3Y\n3W\n3H\n3K\n3R\n3Q\n3N\n3D\n3E\n3s\n3t\n3y\n4P\n4G\n4A\n4C\n4S\n4T\n4V\n4I\n4L\n4M\n4F\n4Y\n4W\n4H\n4K\n4R\n4Q\n4N\n4D\n4E\n4s\n4t\n4y\n0s\n0t\n0y\n0S\n0T\n0Y\n\n\nkinase\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAAK1\n0.0720\n0.0245\n0.0284\n0.0456\n0.0425\n0.0425\n0.0951\n0.1554\n0.0993\n0.0864\n0.0425\n0.0952\n0.0315\n0.0331\n0.0262\n0.0956\n0.0560\n0.0275\n0.0160\n0.0153\n0.0201\n0.0201\n0.0611\n0.0534\n0.0642\n0.0706\n0.0560\n0.0619\n0.0619\n0.0619\n0.0621\n0.0742\n0.0693\n0.0520\n0.0534\n0.0403\n0.0514\n0.0809\n0.0715\n0.0627\n0.0429\n0.0332\n0.0560\n0.0332\n0.0332\n0.0339\n0.1084\n0.0512\n0.1119\n0.0655\n...\n0.0582\n0.0742\n0.0582\n0.0582\n0.0610\n0.0388\n0.0489\n0.0437\n0.0430\n0.0533\n0.0481\n0.0674\n0.0739\n0.0901\n0.0623\n0.0735\n0.0405\n0.0371\n0.0335\n0.0335\n0.0359\n0.0628\n0.0702\n0.0646\n0.0603\n0.0560\n0.0560\n0.0422\n0.0415\n0.0461\n0.0464\n0.0523\n0.0521\n0.0826\n0.0560\n0.0831\n0.0928\n0.0635\n0.0592\n0.0389\n0.0457\n0.0251\n0.0251\n0.0270\n0.1013\n1.0\n0.0\n0.1013\n1.0\n0.0\n\n\nACVR2A\n0.0415\n0.0481\n0.0584\n0.0489\n0.0578\n0.0578\n0.0598\n0.0625\n0.0596\n0.0521\n0.0600\n0.0578\n0.0803\n0.0570\n0.0510\n0.0475\n0.0430\n0.0536\n0.0888\n0.0789\n0.0783\n0.0783\n0.0760\n0.0466\n0.0549\n0.0555\n0.0551\n0.0549\n0.0549\n0.0543\n0.0526\n0.0520\n0.0576\n0.0619\n0.0586\n0.0754\n0.0551\n0.0406\n0.0457\n0.0482\n0.0501\n0.1040\n0.0869\n0.0809\n0.0809\n0.0681\n0.0502\n0.0653\n0.0537\n0.0588\n...\n0.0529\n0.0481\n0.0590\n0.0590\n0.0567\n0.0554\n0.0612\n0.0589\n0.0644\n0.0654\n0.0635\n0.0590\n0.0462\n0.0387\n0.0499\n0.0524\n0.0622\n0.0870\n0.0519\n0.0519\n0.0815\n0.0758\n0.0544\n0.0498\n0.0517\n0.0563\n0.0563\n0.0516\n0.0563\n0.0512\n0.0662\n0.0523\n0.0579\n0.0800\n0.0573\n0.0527\n0.0491\n0.0616\n0.0556\n0.0640\n0.0640\n0.0703\n0.0703\n0.0589\n0.9833\n1.0\n0.0\n0.9833\n1.0\n0.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nYSK4\n0.0593\n0.0728\n0.0744\n0.0734\n0.0597\n0.0597\n0.0517\n0.0400\n0.0433\n0.0512\n0.0636\n0.0600\n0.0755\n0.0664\n0.0525\n0.0597\n0.0481\n0.0616\n0.0692\n0.0508\n0.0703\n0.0703\n0.0474\n0.0622\n0.0683\n0.0618\n0.0652\n0.0618\n0.0618\n0.0477\n0.0412\n0.0519\n0.0570\n0.0610\n0.0620\n0.0714\n0.0626\n0.0491\n0.0523\n0.0551\n0.0649\n0.0671\n0.0645\n0.0663\n0.0663\n0.0534\n0.0561\n0.0683\n0.0571\n0.0636\n...\n0.0531\n0.0545\n0.0578\n0.0578\n0.0540\n0.0436\n0.0481\n0.0473\n0.0573\n0.0578\n0.0625\n0.0645\n0.0774\n0.0697\n0.0580\n0.0720\n0.0471\n0.0450\n0.0642\n0.0642\n0.0397\n0.0790\n0.0721\n0.0573\n0.0557\n0.0573\n0.0573\n0.0445\n0.0471\n0.0481\n0.0507\n0.0461\n0.0493\n0.0539\n0.0657\n0.0814\n0.0618\n0.0741\n0.0620\n0.0585\n0.0484\n0.0634\n0.0634\n0.0389\n0.7907\n1.0\n0.0\n0.7907\n1.0\n0.0\n\n\nZAK\n0.0604\n0.0641\n0.0659\n0.0631\n0.0597\n0.0597\n0.0454\n0.0431\n0.0477\n0.0484\n0.0544\n0.0597\n0.0673\n0.0650\n0.0815\n0.0669\n0.0538\n0.0653\n0.0591\n0.0520\n0.0716\n0.0716\n0.0611\n0.0627\n0.0682\n0.0537\n0.0621\n0.0627\n0.0627\n0.0447\n0.0423\n0.0433\n0.0500\n0.0526\n0.0564\n0.0630\n0.0663\n0.0634\n0.0653\n0.0548\n0.0701\n0.0759\n0.0673\n0.0703\n0.0703\n0.0469\n0.0723\n0.0694\n0.0593\n0.0680\n...\n0.0489\n0.0588\n0.0582\n0.0582\n0.0579\n0.0636\n0.0630\n0.0572\n0.0652\n0.0710\n0.0738\n0.0664\n0.0851\n0.0833\n0.0527\n0.0484\n0.0281\n0.0319\n0.0459\n0.0459\n0.0423\n0.0684\n0.0623\n0.0561\n0.0519\n0.0556\n0.0556\n0.0406\n0.0429\n0.0395\n0.0481\n0.0424\n0.0526\n0.0698\n0.0672\n0.1207\n0.1012\n0.0614\n0.0556\n0.0342\n0.0370\n0.0390\n0.0390\n0.0408\n0.6135\n1.0\n0.0\n0.6135\n1.0\n0.0\n\n\n\n\n303 rows × 213 columns\n\n\n\n\n\n\nget_pspa_all_norm\n\n get_pspa_all_norm ()\n\nGet PSPA normalized data of serine/threonine and tyrosine kinases.\n\nData.get_pspa_all_norm()\n\n\n\n\n\n\n\n\n-5P\n-5G\n-5A\n-5C\n-5S\n-5T\n-5V\n-5I\n-5L\n-5M\n-5F\n-5Y\n-5W\n-5H\n-5K\n-5R\n-5Q\n-5N\n-5D\n-5E\n-5s\n-5t\n-5y\n-4P\n-4G\n-4A\n-4C\n-4S\n-4T\n-4V\n-4I\n-4L\n-4M\n-4F\n-4Y\n-4W\n-4H\n-4K\n-4R\n-4Q\n-4N\n-4D\n-4E\n-4s\n-4t\n-4y\n-3P\n-3G\n-3A\n-3C\n...\n4A\n4C\n4S\n4T\n4V\n4I\n4L\n4M\n4F\n4Y\n4W\n4H\n4K\n4R\n4Q\n4N\n4D\n4E\n4s\n4t\n4y\n0s\n0t\n0y\n0S\n0T\n0Y\n5P\n5G\n5A\n5C\n5S\n5T\n5V\n5I\n5L\n5M\n5F\n5Y\n5W\n5H\n5K\n5R\n5Q\n5N\n5D\n5E\n5s\n5t\n5y\n\n\nkinase\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAAK1\n0.0720\n0.0245\n0.0284\n0.0456\n0.0425\n0.0425\n0.0951\n0.1554\n0.0993\n0.0864\n0.0425\n0.0952\n0.0315\n0.0331\n0.0262\n0.0956\n0.0560\n0.0275\n0.0160\n0.0153\n0.0201\n0.0201\n0.0611\n0.0534\n0.0642\n0.0706\n0.0560\n0.0619\n0.0619\n0.0619\n0.0621\n0.0742\n0.0693\n0.0520\n0.0534\n0.0403\n0.0514\n0.0809\n0.0715\n0.0627\n0.0429\n0.0332\n0.0560\n0.0332\n0.0332\n0.0339\n0.1084\n0.0512\n0.1119\n0.0655\n...\n0.0646\n0.0603\n0.0560\n0.0560\n0.0422\n0.0415\n0.0461\n0.0464\n0.0523\n0.0521\n0.0826\n0.0560\n0.0831\n0.0928\n0.0635\n0.0592\n0.0389\n0.0457\n0.0251\n0.0251\n0.0270\n0.1013\n1.0\n0.0\n0.1013\n1.0\n0.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\nACVR2A\n0.0415\n0.0481\n0.0584\n0.0489\n0.0578\n0.0578\n0.0598\n0.0625\n0.0596\n0.0521\n0.0600\n0.0578\n0.0803\n0.0570\n0.0510\n0.0475\n0.0430\n0.0536\n0.0888\n0.0789\n0.0783\n0.0783\n0.0760\n0.0466\n0.0549\n0.0555\n0.0551\n0.0549\n0.0549\n0.0543\n0.0526\n0.0520\n0.0576\n0.0619\n0.0586\n0.0754\n0.0551\n0.0406\n0.0457\n0.0482\n0.0501\n0.1040\n0.0869\n0.0809\n0.0809\n0.0681\n0.0502\n0.0653\n0.0537\n0.0588\n...\n0.0498\n0.0517\n0.0563\n0.0563\n0.0516\n0.0563\n0.0512\n0.0662\n0.0523\n0.0579\n0.0800\n0.0573\n0.0527\n0.0491\n0.0616\n0.0556\n0.0640\n0.0640\n0.0703\n0.0703\n0.0589\n0.9833\n1.0\n0.0\n0.9833\n1.0\n0.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nYES1\n0.0677\n0.0571\n0.0537\n0.0530\n0.0527\n0.0505\n0.0435\n0.0375\n0.0400\n0.0463\n0.0478\n0.0478\n0.0419\n0.0564\n0.0681\n0.0647\n0.0610\n0.0752\n0.0748\n0.0610\n0.0652\n0.0652\n0.0668\n0.0625\n0.0695\n0.0524\n0.0530\n0.0470\n0.0404\n0.0476\n0.0416\n0.0528\n0.0529\n0.0406\n0.0406\n0.0424\n0.0566\n0.0549\n0.0561\n0.0607\n0.0559\n0.0786\n0.0875\n0.0596\n0.0596\n0.0705\n0.0564\n0.0580\n0.0456\n0.0572\n...\n0.0464\n0.0747\n0.0521\n0.0561\n0.0468\n0.0452\n0.0481\n0.0716\n0.0689\n0.0689\n0.0619\n0.0623\n0.0587\n0.0757\n0.0652\n0.0499\n0.0421\n0.0492\n0.0371\n0.0371\n0.0467\n0.0000\n0.0\n1.0\n0.0000\n0.0\n1.0\n0.0762\n0.0532\n0.0533\n0.0610\n0.0596\n0.0558\n0.0416\n0.0375\n0.0467\n0.0518\n0.0627\n0.0627\n0.0456\n0.0593\n0.0662\n0.084\n0.0559\n0.0604\n0.0422\n0.0482\n0.0374\n0.0374\n0.0411\n\n\nZAP70\n0.0602\n0.0880\n0.0623\n0.0496\n0.0471\n0.0514\n0.0465\n0.0380\n0.0307\n0.0526\n0.0479\n0.0479\n0.0347\n0.0641\n0.0471\n0.0452\n0.0492\n0.0703\n0.0870\n0.0777\n0.1622\n0.1622\n0.1208\n0.0977\n0.0792\n0.0865\n0.0556\n0.0487\n0.0367\n0.0375\n0.0312\n0.0317\n0.0344\n0.0274\n0.0274\n0.0347\n0.0474\n0.0338\n0.0380\n0.0571\n0.0457\n0.0929\n0.1392\n0.1432\n0.1432\n0.1685\n0.0588\n0.0610\n0.0537\n0.0581\n...\n0.0491\n0.0520\n0.0583\n0.0530\n0.0504\n0.0304\n0.0424\n0.0554\n0.0393\n0.0393\n0.0539\n0.0671\n0.0562\n0.0557\n0.0712\n0.0406\n0.0597\n0.0558\n0.0440\n0.0440\n0.0318\n0.0000\n0.0\n1.0\n0.0000\n0.0\n1.0\n0.1269\n0.0904\n0.0737\n0.0457\n0.0638\n0.0692\n0.0343\n0.0235\n0.0305\n0.0461\n0.0343\n0.0343\n0.0344\n0.0484\n0.0477\n0.029\n0.0520\n0.0537\n0.0709\n0.0710\n0.0862\n0.0862\n0.0605\n\n\n\n\n396 rows × 236 columns\n\n\n\n\n\n\nget_pspa_all_scale\n\n get_pspa_all_scale ()\n\nGet PSPA (-5 to +4) scaled data from PSPA normalized data. Each position (including both pS/pT and pS=pT) are normalized to 1.\n\nData.get_pspa_all_scale()\n\n\n\n\n\n\n\n\n-5P\n-5G\n-5A\n-5C\n-5S\n-5T\n-5V\n-5I\n-5L\n-5M\n-5F\n-5Y\n-5W\n-5H\n-5K\n-5R\n-5Q\n-5N\n-5D\n-5E\n-5pS\n-5pT\n-5pY\n-4P\n-4G\n-4A\n-4C\n-4S\n-4T\n-4V\n-4I\n-4L\n-4M\n-4F\n-4Y\n-4W\n-4H\n-4K\n-4R\n-4Q\n-4N\n-4D\n-4E\n-4pS\n-4pT\n-4pY\n-3P\n-3G\n-3A\n-3C\n...\n2E\n2pS\n2pT\n2pY\n3P\n3G\n3A\n3C\n3S\n3T\n3V\n3I\n3L\n3M\n3F\n3Y\n3W\n3H\n3K\n3R\n3Q\n3N\n3D\n3E\n3pS\n3pT\n3pY\n4P\n4G\n4A\n4C\n4S\n4T\n4V\n4I\n4L\n4M\n4F\n4Y\n4W\n4H\n4K\n4R\n4Q\n4N\n4D\n4E\n4pS\n4pT\n4pY\n\n\nkinase\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAAK1\n0.05845\n0.01989\n0.02305\n0.03702\n0.03450\n0.03450\n0.07720\n0.12615\n0.08061\n0.07014\n0.03450\n0.07728\n0.02557\n0.02687\n0.02127\n0.07760\n0.04546\n0.02232\n0.01299\n0.01242\n0.01632\n0.01632\n0.04960\n0.04172\n0.05015\n0.05515\n0.04375\n0.04836\n0.04836\n0.04836\n0.04851\n0.05796\n0.05414\n0.04062\n0.04172\n0.03148\n0.04015\n0.06320\n0.05586\n0.04898\n0.03351\n0.02594\n0.04375\n0.02594\n0.02594\n0.02648\n0.08610\n0.04067\n0.08888\n0.05203\n...\n0.04025\n0.03142\n0.03142\n0.03149\n0.05264\n0.07135\n0.04499\n0.05735\n0.04499\n0.04499\n0.04715\n0.02999\n0.03780\n0.03378\n0.03324\n0.04120\n0.03718\n0.05210\n0.05712\n0.06965\n0.04816\n0.05681\n0.03131\n0.02868\n0.02589\n0.02589\n0.02775\n0.05026\n0.05618\n0.05170\n0.04826\n0.04482\n0.04482\n0.03377\n0.03321\n0.03689\n0.03713\n0.04186\n0.04170\n0.06611\n0.04482\n0.06651\n0.07427\n0.05082\n0.04738\n0.03113\n0.03657\n0.02009\n0.02009\n0.02161\n\n\nACVR2A\n0.02971\n0.03443\n0.04180\n0.03500\n0.04137\n0.04137\n0.04281\n0.04474\n0.04266\n0.03729\n0.04295\n0.04137\n0.05748\n0.04080\n0.03651\n0.03400\n0.03078\n0.03837\n0.06356\n0.05648\n0.05605\n0.05605\n0.05440\n0.03341\n0.03936\n0.03979\n0.03950\n0.03936\n0.03936\n0.03893\n0.03771\n0.03728\n0.04130\n0.04438\n0.04201\n0.05406\n0.03950\n0.02911\n0.03276\n0.03456\n0.03592\n0.07456\n0.06230\n0.05800\n0.05800\n0.04882\n0.03345\n0.04351\n0.03578\n0.03918\n...\n0.04447\n0.04786\n0.04786\n0.03799\n0.04958\n0.04381\n0.03914\n0.03559\n0.04366\n0.04366\n0.04196\n0.04099\n0.04529\n0.04358\n0.04765\n0.04839\n0.04699\n0.04366\n0.03419\n0.02864\n0.03692\n0.03877\n0.04603\n0.06438\n0.03840\n0.03840\n0.06031\n0.05559\n0.03989\n0.03652\n0.03791\n0.04129\n0.04129\n0.03784\n0.04129\n0.03755\n0.04855\n0.03835\n0.04246\n0.05867\n0.04202\n0.03865\n0.03601\n0.04517\n0.04077\n0.04693\n0.04693\n0.05155\n0.05155\n0.04319\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nYES1\n0.05216\n0.04399\n0.04137\n0.04084\n0.04060\n0.03891\n0.03352\n0.02889\n0.03082\n0.03567\n0.03683\n0.03683\n0.03228\n0.04345\n0.05247\n0.04985\n0.04700\n0.05794\n0.05763\n0.04700\n0.05023\n0.05023\n0.05147\n0.04870\n0.05416\n0.04083\n0.04130\n0.03662\n0.03148\n0.03709\n0.03242\n0.04114\n0.04122\n0.03164\n0.03164\n0.03304\n0.04411\n0.04278\n0.04372\n0.04730\n0.04356\n0.06125\n0.06818\n0.04644\n0.04644\n0.05494\n0.04363\n0.04486\n0.03527\n0.04425\n...\n0.05324\n0.05535\n0.05535\n0.05174\n0.02228\n0.02870\n0.02669\n0.03458\n0.02886\n0.03899\n0.05880\n0.06545\n0.06259\n0.04333\n0.12155\n0.12155\n0.07172\n0.04309\n0.02375\n0.03923\n0.02576\n0.02824\n0.02120\n0.02352\n0.02135\n0.02135\n0.02739\n0.03449\n0.04429\n0.03670\n0.05908\n0.04121\n0.04437\n0.03702\n0.03575\n0.03804\n0.05663\n0.05450\n0.05450\n0.04896\n0.04928\n0.04643\n0.05988\n0.05157\n0.03947\n0.03330\n0.03891\n0.02934\n0.02934\n0.03694\n\n\nZAP70\n0.03902\n0.05704\n0.04038\n0.03215\n0.03053\n0.03332\n0.03014\n0.02463\n0.01990\n0.03410\n0.03105\n0.03105\n0.02249\n0.04155\n0.03053\n0.02930\n0.03189\n0.04557\n0.05639\n0.05037\n0.10514\n0.10514\n0.07830\n0.06354\n0.05151\n0.05625\n0.03616\n0.03167\n0.02387\n0.02439\n0.02029\n0.02062\n0.02237\n0.01782\n0.01782\n0.02257\n0.03083\n0.02198\n0.02471\n0.03713\n0.02972\n0.06041\n0.09052\n0.09313\n0.09313\n0.10958\n0.03211\n0.03331\n0.02933\n0.03173\n...\n0.04035\n0.08151\n0.08151\n0.09746\n0.12355\n0.03982\n0.04552\n0.04723\n0.05148\n0.03701\n0.07326\n0.05267\n0.04518\n0.09377\n0.04374\n0.04374\n0.07471\n0.04476\n0.01838\n0.02042\n0.02961\n0.02357\n0.02051\n0.01293\n0.01719\n0.01719\n0.02374\n0.08125\n0.05210\n0.04054\n0.04294\n0.04814\n0.04376\n0.04162\n0.02510\n0.03501\n0.04574\n0.03245\n0.03245\n0.04450\n0.05540\n0.04640\n0.04599\n0.05879\n0.03352\n0.04929\n0.04607\n0.03633\n0.03633\n0.02626\n\n\n\n\n396 rows × 230 columns\n\n\n\n\n\n\nget_pspa_st_pct\n\n get_pspa_st_pct ()\n\nGet PSPA reference score to calculate percentile for serine/threonine kinases.\n\nData.get_pspa_st_pct()\n\n\n\n\n\n\n\nkinase\nAAK1\nACVR2A\nACVR2B\nAKT1\nAKT2\nAKT3\nALK2\nALK4\nALPHAK3\nAMPKA1\nAMPKA2\nANKRD3\nASK1\nATM\nATR\nAURA\nAURB\nAURC\nBCKDK\nBIKE\nBMPR1A\nBMPR1B\nBMPR2\nBRAF\nBRSK1\nBRSK2\nBUB1\nCAMK1A\nCAMK1B\nCAMK1D\nCAMK1G\nCAMK2A\nCAMK2B\nCAMK2D\nCAMK2G\nCAMK4\nCAMKK1\nCAMKK2\nCAMLCK\nCDC7\nCDK1\nCDK10\nCDK12\nCDK13\nCDK14\nCDK16\nCDK17\nCDK18\nCDK19\nCDK2\n...\nRIPK1\nRIPK2\nRIPK3\nROCK1\nROCK2\nRSK2\nRSK3\nRSK4\nSBK\nSGK1\nSGK3\nSIK\nSKMLCK\nSLK\nSMG1\nSMMLCK\nSNRK\nSRPK1\nSRPK2\nSRPK3\nSSTK\nSTK33\nSTLK3\nTAK1\nTAO1\nTAO2\nTAO3\nTBK1\nTGFBR1\nTGFBR2\nTLK1\nTLK2\nTNIK\nTSSK1\nTSSK2\nTTBK1\nTTBK2\nTTK\nULK1\nULK2\nVRK1\nVRK2\nWNK1\nWNK3\nWNK4\nYANK2\nYANK3\nYSK1\nYSK4\nZAK\n\n\n\n\n0\n-10.960\n-0.581\n0.329\n-3.891\n-3.591\n-5.312\n0.814\n-0.559\n-0.933\n-2.607\n-3.167\n-0.764\n-6.366\n2.533\n0.010\n-1.164\n-4.296\n-4.302\n1.695\n-7.684\n1.713\n1.965\n0.183\n0.018\n-0.379\n-3.219\n-9.801\n-3.750\n0.149\n-0.610\n-2.746\n4.377\n4.940\n0.902\n2.957\n-2.297\n-3.196\n-3.469\n-1.716\n-0.232\n-1.378\n-9.497\n-5.727\n-4.521\n-8.698\n-7.186\n-5.666\n-5.802\n-4.029\n-4.039\n...\n-3.605\n-5.763\n-5.047\n-6.065\n-4.406\n-1.298\n-3.001\n-0.837\n-2.256\n-3.190\n-3.763\n-0.262\n-0.226\n-3.190\n-1.971\n-3.519\n-4.495\n-3.007\n-2.348\n-3.560\n-4.580\n-6.610\n-6.038\n-1.211\n-4.498\n-2.911\n0.463\n-1.287\n0.680\n-3.707\n1.479\n3.406\n-3.950\n-2.172\n-2.109\n-7.773\n-4.765\n-5.262\n-3.549\n-2.822\n-4.682\n-2.854\n-1.669\n-1.527\n-2.965\n-2.877\n-1.792\n-6.283\n-1.715\n-3.204\n\n\n1\n-6.788\n-0.166\n0.307\n-5.886\n-4.786\n-6.576\n1.561\n-0.865\n-3.399\n-3.261\n-3.464\n-4.366\n-7.176\n0.019\n-0.697\n-1.581\n-4.628\n-4.533\n-1.092\n-5.161\n1.202\n1.525\n-0.386\n-3.377\n-1.858\n-3.819\n-5.141\n-5.537\n-1.294\n-3.311\n-5.862\n-0.315\n0.517\n-0.535\n0.877\n-3.692\n-1.182\n-1.239\n-1.285\n2.578\n-4.304\n-7.431\n-4.146\n-3.498\n-6.062\n-5.981\n-5.925\n-5.136\n-4.122\n-3.122\n...\n-2.358\n-5.160\n-3.075\n-7.793\n-6.160\n-1.518\n-2.279\n-2.877\n-2.437\n-5.513\n-6.566\n-4.297\n-0.846\n-7.367\n1.751\n-4.481\n-5.585\n-4.549\n-5.719\n-5.101\n-2.420\n-6.698\n-8.190\n-4.619\n-8.130\n-4.908\n-5.247\n-1.650\n1.537\n-4.228\n-5.881\n-4.427\n-7.145\n-2.825\n-0.935\n-4.638\n-3.624\n-9.189\n-4.698\n-3.656\n-5.670\n-2.817\n-4.071\n-3.394\n-5.097\n-1.874\n-1.480\n-8.709\n-3.708\n-6.093\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n89782\n-3.753\n1.451\n1.883\n-5.583\n-5.253\n-7.164\n1.226\n-0.399\n3.341\n-5.932\n-7.009\n-1.346\n-1.257\n-1.930\n-1.086\n-5.300\n-6.268\n-6.415\n-6.027\n-2.674\n2.403\n3.097\n0.315\n0.331\n-8.989\n-9.727\n-0.962\n-6.574\n-2.149\n-5.753\n-6.502\n-3.379\n-3.798\n-4.577\n-2.381\n-5.040\n-0.197\n-0.772\n-1.802\n-0.784\n-1.720\n-6.366\n-3.784\n-2.870\n-4.482\n-2.392\n-2.803\n-2.889\n-3.985\n-2.087\n...\n-5.479\n-5.107\n-5.028\n-4.316\n-3.410\n-4.957\n-5.244\n-5.152\n-5.324\n-5.636\n-5.262\n-5.684\n-3.825\n-1.824\n-3.824\n-4.159\n-6.882\n-4.014\n-4.454\n-3.755\n-8.207\n-5.581\n-2.655\n1.240\n-2.303\n-0.338\n0.146\n-3.978\n0.138\n-3.302\n-3.075\n-1.497\n-1.209\n-6.844\n-5.322\n-4.496\n-2.852\n-1.356\n-3.828\n-3.049\n-1.930\n-1.420\n-5.949\n-4.854\n-5.401\n-1.853\n-2.068\n-2.824\n-0.340\n-1.326\n\n\n89783\n-1.540\n-2.180\n-2.014\n-2.416\n-0.592\n-1.364\n-3.320\n-0.826\n-4.438\n-1.393\n-2.058\n-2.101\n-2.838\n-3.597\n-0.664\n-4.098\n-1.564\n-2.006\n-5.130\n-2.428\n-3.192\n-2.013\n-0.868\n-2.795\n-5.958\n-6.211\n-0.309\n-1.495\n0.020\n-1.378\n-1.652\n-2.380\n-3.275\n-3.026\n-2.647\n-1.958\n-5.024\n-3.868\n0.578\n-2.915\n-3.348\n-4.227\n-5.020\n-5.209\n-1.570\n-2.480\n-2.677\n-2.574\n-5.737\n-5.213\n...\n-1.942\n-6.158\n-0.930\n-1.559\n-0.154\n0.361\n-0.754\n-0.276\n-3.035\n-1.083\n-0.965\n-3.652\n1.355\n-0.824\n-3.360\n-0.030\n-5.503\n-2.102\n-4.456\n-3.284\n-2.001\n-3.563\n-4.212\n-4.696\n-4.132\n-2.436\n-2.292\n-3.454\n-2.188\n-2.436\n-2.339\n-1.988\n-1.042\n-0.358\n-0.074\n-2.837\n-1.059\n0.434\n-5.814\n-4.250\n-1.979\n-0.661\n-2.586\n-4.076\n-2.832\n-0.575\n-0.859\n-2.415\n-2.999\n-2.550\n\n\n\n\n89784 rows × 303 columns\n\n\n\n\n\n\nget_pspa_tyr_pct\n\n get_pspa_tyr_pct ()\n\nGet PSPA reference score to calculate percentile for tyrosine kinases.\n\nData.get_pspa_tyr_pct()\n\n\n\n\n\n\n\nkinase\nABL1\nTNK2\nALK\nABL2\nAXL\nBLK\nBMPR2_TYR\nPTK6\nBTK\nCSF1R\nCSK\nMATK\nDDR1\nDDR2\nEGFR\nEPHA1\nEPHA2\nEPHA3\nEPHA4\nEPHA5\nEPHA6\nEPHA7\nEPHA8\nEPHB1\nEPHB2\nEPHB3\nEPHB4\nBMX\nPTK2\nFER\nFES\nFGFR1\nFGFR2\nFGFR3\nFGFR4\nFGR\nFLT3\nFRK\nFYN\nHCK\nERBB2\nERBB4\nIGF1R\nINSR\nINSRR\nITK\nJAK1\nJAK2\nJAK3\nKIT\nLCK\nLIMK1_TYR\nLIMK2_TYR\nLTK\nLYN\nMERTK\nMET\nMAP2K4_TYR\nMAP2K6_TYR\nMAP2K7_TYR\nMST1R\nMUSK\nPKMYT1_TYR\nNEK10_TYR\nPDGFRA\nPDGFRB\nPDHK1_TYR\nPDHK3_TYR\nPDHK4_TYR\nPINK1_TYR\nPTK2B\nRET\nROS1\nSRC\nSRMS\nSYK\nTEC\nTESK1_TYR\nTEK\nTNK1\nTNNI3K_TYR\nNTRK1\nNTRK2\nNTRK3\nTXK\nTYK2\nTYRO3\nFLT1\nKDR\nFLT4\nWEE1_TYR\nYES1\nZAP70\n\n\n\n\n0\n-0.709617\n-3.624831\n-2.136338\n-0.022776\n-0.737589\n2.345905\n0.504821\n2.417165\n-0.121611\n-1.205218\n1.576014\n1.917812\n-2.449589\n-3.806540\n1.005984\n-2.925415\n-0.609664\n-1.256237\n0.491093\n0.494654\n-1.348782\n-1.938472\n0.221994\n-0.805070\n1.130282\n0.111910\n-0.253774\n0.221683\n2.233854\n2.295975\n-0.025152\n-1.738376\n-0.986921\n-0.375908\n1.631896\n2.154664\n-1.214864\n-1.185009\n6.124421\n1.940066\n-1.020647\n-0.292182\n0.761946\n-0.992736\n-0.599703\n0.298515\n-4.146873\n-2.339013\n-2.479359\n-1.082389\n1.758755\n-3.027934\n-3.701494\n-0.480120\n1.346726\n1.124192\n-1.205155\n-0.094138\n1.031112\n-0.287930\n-2.589829\n-3.379800\n-1.341062\n-3.607123\n-4.385381\n-1.978546\n1.390759\n0.259191\n0.378106\n-0.094980\n0.908537\n-0.618981\n-2.562691\n4.377146\n1.855049\n2.017083\n-0.572871\n-2.295149\n-2.833113\n-3.811383\n-6.262204\n0.683287\n-0.626250\n-0.368491\n1.187208\n-1.601712\n-1.143748\n-0.891566\n-1.888643\n-1.758264\n-1.610344\n4.545175\n0.280174\n\n\n1\n0.986158\n-1.645273\n-1.183920\n0.553010\n-1.098784\n-1.245678\n-0.276461\n-0.156496\n-1.322652\n-0.684989\n0.447463\n0.054841\n-0.295641\n-2.374194\n0.261968\n-0.444003\n0.620075\n-0.918899\n-0.266802\n-1.466189\n0.181707\n-0.884474\n-0.829816\n-1.039152\n-1.332577\n-1.553626\n-1.557679\n-1.041167\n-1.465569\n-0.573358\n-1.402839\n-1.119166\n-0.006615\n-0.690700\n0.057757\n-1.329587\n-0.752020\n-1.421231\n-1.119607\n-0.361730\n-0.067540\n-1.488971\n-1.959423\n-1.198227\n-1.250944\n-1.559043\n-1.742221\n-0.297813\n-0.737524\n0.101179\n-0.785122\n-0.803239\n-0.227134\n-0.226996\n-1.061925\n-0.749321\n-0.324825\n0.101380\n-0.753605\n-0.186826\n-0.078232\n-1.533730\n-0.949200\n1.335091\n-0.953302\n-1.471499\n-0.039170\n0.376709\n-0.653393\n-0.690604\n-0.187336\n0.372630\n-1.753648\n-0.822064\n0.291210\n-1.380433\n-0.652058\n-0.974885\n-2.822036\n-1.223497\n-2.903235\n-0.909811\n-1.158577\n-0.777541\n-0.385554\n-0.624216\n-0.737089\n-0.315447\n-1.293708\n-1.182827\n-1.891533\n-0.456570\n-2.465316\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n7313\n0.737694\n-0.477689\n-0.646850\n0.928066\n0.187149\n-1.000041\n-0.283551\n-3.053869\n-0.750475\n0.132043\n0.069439\n0.778468\n-0.572751\n-0.877774\n0.279656\n-1.905299\n-2.542936\n-0.629488\n-1.433432\n-1.319311\n-0.959149\n-1.904233\n-1.836303\n-0.665941\n-0.500875\n-1.140260\n-0.324883\n-0.138589\n-1.634647\n-1.463951\n-2.856428\n1.338733\n1.308337\n1.210296\n0.236992\n-1.117447\n0.508686\n-1.152320\n-0.680328\n-1.311162\n-1.278938\n-0.529947\n-0.707274\n-0.296606\n0.170371\n-0.406315\n0.053109\n-0.184986\n1.285550\n-1.175831\n-0.657466\n-0.059045\n-0.307151\n-0.027580\n-1.925899\n0.415170\n0.535199\n-0.446664\n0.591918\n0.316993\n0.457042\n0.960955\n-1.222173\n0.783990\n-0.043431\n1.226039\n0.035492\n0.102904\n0.600526\n0.732808\n-1.478030\n1.261671\n0.460373\n-1.074805\n-1.293450\n-1.402257\n-0.780591\n-0.107376\n-0.479018\n1.326369\n-1.912418\n-0.017800\n0.585871\n-0.122134\n-1.275022\n-0.020350\n0.483620\n-0.060204\n1.378042\n0.573273\n-2.383657\n-0.246005\n1.174693\n\n\n7314\n2.115113\n0.153795\n0.356357\n1.846239\n-0.856035\n-0.422296\n-0.985140\n0.554181\n0.381133\n-1.666383\n-0.728353\n-0.254733\n-0.999583\n0.117162\n-1.622541\n-1.882815\n-3.830351\n-1.601071\n-1.750483\n-2.748548\n-0.900263\n-1.661417\n-2.349142\n-0.825704\n-1.211989\n-1.668258\n-0.242232\n0.727625\n-2.099673\n0.240011\n-0.659603\n-1.569382\n-1.979445\n-2.605414\n-1.726131\n0.175403\n-2.030979\n-0.537023\n-0.303194\n-0.134410\n-1.497615\n-2.364148\n-3.279693\n-1.919277\n-2.157962\n0.598978\n-0.792918\n-0.965011\n-1.728287\n-1.616595\n-0.084054\n-0.968384\n-0.373329\n-0.234884\n-1.088861\n-1.129566\n-0.358743\n0.154190\n-0.787745\n-0.482053\n-1.581810\n-1.865008\n-0.707663\n-0.049274\n-1.190498\n-1.403224\n-0.849104\n-0.212996\n-0.159123\n-0.885066\n0.447393\n-0.121666\n-0.543588\n0.170109\n0.044321\n-1.576300\n1.325049\n-1.122959\n-2.962076\n-0.786136\n-1.090242\n-1.402034\n-1.365117\n-1.670434\n1.684176\n-0.508297\n-0.304215\n-2.045909\n-1.629804\n-2.227050\n-2.294855\n0.428825\n-1.789086\n\n\n\n\n7315 rows × 93 columns\n\n\n\n\n\n\nget_num_dict\n\n get_num_dict ()\n\nGet a dictionary mapping kinase to number of random amino acids in PSPA.\n\nlist(Data.get_num_dict().items())[:5]\n\n[('SYK', 18), ('PTK2', 18), ('ZAP70', 18), ('ERBB2', 18), ('CSK', 18)]\n\n\n\n\nCDDM data\n\nsource\n\n\nData.get_ks_unique\n\n Data.get_ks_unique ()\n\nGet kinase substrate dataset with unique sub site ID.\n\nData.get_ks_unique()\n\n\n\n\n\n\n\n\nsub_site\nnum_kin\nbin\nsub_genes\nsite_seq\nsource_combine\nacceptor\nO00141_SGK1\nO00238_BMPR1B\nO00311_CDC7\nO00329_PIK3CD\nO00418_EEF2K\nO00443_PIK3C2A\nO00444_PLK4\nO00506_STK25\nO14578_CIT\nO14730_RIOK3\nO14733_MAP2K7\nO14757_CHEK1\nO14874_BCKDK\nO14920_IKBKB\nO14936_CASK\nO14965_AURKA\nO14976_GAK\nO15021_MAST4\nO15075_DCLK1\nO15111_CHUK\nO15146_MUSK\nO15264_MAPK13\nO15530_PDPK1\nO43283_MAP3K13\nO43293_DAPK3\nO43318_MAP3K7\nO43353_RIPK2\nO43683_BUB1\nO43781_DYRK3\nO60285_NUAK1\nO60331_PIP5K1C\nO60566_BUB1B\nO60674_JAK2\nO60885_BRD4\nO75116_ROCK2\nO75385_ULK1\nO75460_ERN1\nO75582_RPS6KA5\nO75676_RPS6KA4\nO75716_STK16\nO75914_PAK3\nO76039_CDKL5\nO94768_STK17B\n...\nQ9HBY8_SGK2\nQ9HC98_NEK6\nQ9HCP0_CSNK1G1\nQ9NQU5_PAK6\nQ9NR20_DYRK4\nQ9NRA0_SPHK2\nQ9NRM7_LATS2\nQ9NSY1_BMP2K\nQ9NWZ3_IRAK4\nQ9NYA1_SPHK1\nQ9NYL2_MAP3K20\nQ9NYV4_CDK12\nQ9NYY3_PLK2\nQ9NZJ5_EIF2AK3\nQ9P0L2_MARK1\nQ9P1W9_PIM2\nQ9P286_PAK5\nQ9P289_STK26\nQ9P2K8_EIF2AK4\nQ9UBE8_NLK\nQ9UBS0_RPS6KB2\nQ9UEE5_STK17A\nQ9UEW8_STK39\nQ9UF33_EPHA6\nQ9UHD2_TBK1\nQ9UIG0_BAZ1B\nQ9UIK4_DAPK2\nQ9UK32_RPS6KA6\nQ9UKE5_TNIK\nQ9UKI8_TLK1\nQ9UL54_TAOK2\nQ9UM73_ALK\nQ9UPE1_SRPK3\nQ9UPZ9_CILK1\nQ9UQ07_MOK\nQ9UQ88_CDK11A\nQ9UQB9_AURKC\nQ9UQM7_CAMK2A\nQ9Y243_AKT3\nQ9Y2H1_STK38L\nQ9Y2K2_SIK3\nQ9Y2U5_MAP3K2\nQ9Y3S1_WNK2\nQ9Y463_DYRK1B\nQ9Y4K4_MAP4K5\nQ9Y572_RIPK3\nQ9Y5S2_CDC42BPB\nQ9Y6E0_STK24\nQ9Y6M4_CSNK1G3\nQ9Y6R4_MAP3K4\n\n\n\n\n0\nA0A2R8Y4L2_S158\n1\n1\nHNRNPA1L3 HNRNPA1P48\nTDRGSGKKRGFAFVTFDDHDsVDKIVIQKYHTVNGHNCEVR\nSugiyama\nS\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n1\nA0A2R8Y4L2_S22\n3\n2~10\nHNRNPA1L3 HNRNPA1P48\nSKSEsPKEPEQLRKLFIGGLsFEtTDESLRSHFEQWGTLTD\nSugiyama\nS\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n29809\nQ9Y6Y9_Y131\n1\n1\nLY96 ESOP1 MD2\nETVNTTISFSFKGIKFSKGKyKCVVEAISGSPEEMLFCLEF\nNon-Sugiyama\nY\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n29810\nQ9Y6Y9_Y22\n1\n1\nLY96 ESOP1 MD2\nLPFLFFSTLFSSIFTEAQKQyWVCNSSDASISYTYCDKMQY\nNon-Sugiyama\nY\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n\n\n29811 rows × 462 columns\n\n\n\n\nsource\n\n\nData.get_ks_dataset\n\n Data.get_ks_dataset (add_kinase_info=True)\n\nGet kinase–substrate dataset collected from public resources, with the option of enriching with kinase info.\n\nData.get_ks_dataset()\n\n\n\n\n\n\n\n\nkin_sub_site\nkinase_uniprot\nsubstrate_uniprot\nsite\nsource\nsubstrate_genes\nsubstrate_phosphoseq\nposition\nsite_seq\nsub_site\nsubstrate_sequence\nkinase_on_tree\nkinase_genes\nkinase_group\nkinase_family\nkinase_subfamily\nkinase_pspa_big\nkinase_pspa_small\nkinase_coral_ID\nkinase_protein\nnum_kin\n\n\n\n\n0\nO00141_A4FU28_S140\nO00141\nA4FU28\nS140\nSugiyama\nCTAGE9\nMEEPGATPQPYLGLVLEELGRVVAALPESMRPDENPYGFPSELVVC...\n140\nAAAEEARSLEATCEKLSRsNsELEDEILCLEKDLKEEKSKH\nA4FU28_S140\nMEEPGATPQPYLGLVLEELGRVVAALPESMRPDENPYGFPSELVVC...\n1\nSGK1 SGK\nAGC\nSGK\nSGK\nBasophilic\nAkt/rock\nSGK1\nSGK1\n22\n\n\n1\nO00141_O00141_S252\nO00141\nO00141\nS252\nSugiyama\nSGK1 SGK\nMTVKTEAAKGTLTYSRMRGMVAILIAFMKQRRMGLNDFIQKIANNS...\n252\nSQGHIVLTDFGLCKENIEHNsTtstFCGtPEyLAPEVLHKQ\nO00141_S252\nMTVKTEAAKGTLTYSRMRGMVAILIAFMKQRRMGLNDFIQKIANNS...\n1\nSGK1 SGK\nAGC\nSGK\nSGK\nBasophilic\nAkt/rock\nSGK1\nSGK1\n1\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n187064\nQ9Y6R4_Q9Y6R4_T1494\nQ9Y6R4\nQ9Y6R4\nT1494\nSIGNOR|EPSD|PSP\nMAP3K4 KIAA0213 MAPKKK4 MEKK4 MTK1\nMREAAAALVPPPAFAVTPAAAMEEPPPPPPPPPPPPEPETESEPEC...\n1494\nSGLIKLGDFGCSVKLKNNAQtMPGEVNSTLGTAAYMAPEVI\nQ9Y6R4_T1494\nMREAAAALVPPPAFAVTPAAAMEEPPPPPPPPPPPPEPETESEPEC...\n1\nMAP3K4 KIAA0213 MAPKKK4 MEKK4 MTK1\nSTE\nSTE11\nSTE11\nNaN\nNaN\nMAP3K4\nMAP3K4\n1\n\n\n187065\nQ9Y6R4_Q9Y6R4_Y1328\nQ9Y6R4\nQ9Y6R4\nY1328\nSugiyama\nMAP3K4 KIAA0213 MAPKKK4 MEKK4 MTK1\nMREAAAALVPPPAFAVTPAAAMEEPPPPPPPPPPPPEPETESEPEC...\n1328\nRYREMRRKNIIGQVCDtPKSyDNVMHVGLRKVTFKWQRGNK\nQ9Y6R4_Y1328\nMREAAAALVPPPAFAVTPAAAMEEPPPPPPPPPPPPEPETESEPEC...\n1\nMAP3K4 KIAA0213 MAPKKK4 MEKK4 MTK1\nSTE\nSTE11\nSTE11\nNaN\nNaN\nMAP3K4\nMAP3K4\n1\n\n\n\n\n187066 rows × 21 columns\n\n\n\n\n\n\nget_ks_background\n\n get_ks_background ()\n\nGet kinase substrate dataset with unique sub site ID.\n\nData.get_ks_background()\n\n\n\n\n\n\n\n\n-20P\n-20G\n-20A\n-20C\n-20S\n-20T\n-20V\n-20I\n-20L\n-20M\n-20F\n-20Y\n-20W\n-20H\n-20K\n-20R\n-20Q\n-20N\n-20D\n-20E\n-20s\n-20t\n-20y\n-19P\n-19G\n-19A\n-19C\n-19S\n-19T\n-19V\n-19I\n-19L\n-19M\n-19F\n-19Y\n-19W\n-19H\n-19K\n-19R\n-19Q\n-19N\n-19D\n-19E\n-19s\n-19t\n-19y\n-18P\n-18G\n-18A\n-18C\n...\n18E\n18s\n18t\n18y\n19P\n19G\n19A\n19C\n19S\n19T\n19V\n19I\n19L\n19M\n19F\n19Y\n19W\n19H\n19K\n19R\n19Q\n19N\n19D\n19E\n19s\n19t\n19y\n20P\n20G\n20A\n20C\n20S\n20T\n20V\n20I\n20L\n20M\n20F\n20Y\n20W\n20H\n20K\n20R\n20Q\n20N\n20D\n20E\n20s\n20t\n20y\n\n\nindex\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nks_S\n0.074296\n0.068105\n0.075925\n0.014664\n0.053246\n0.038517\n0.051290\n0.040342\n0.078989\n0.020269\n0.028806\n0.016228\n0.008081\n0.023266\n0.068952\n0.056765\n0.046728\n0.036301\n0.053506\n0.082573\n0.041645\n0.015511\n0.005996\n0.067780\n0.069925\n0.072069\n0.012867\n0.056343\n0.036392\n0.049454\n0.038472\n0.084546\n0.022550\n0.025994\n0.017611\n0.008773\n0.020665\n0.066220\n0.065181\n0.048739\n0.038991\n0.052963\n0.079218\n0.042566\n0.016246\n0.006434\n0.065772\n0.069725\n0.072771\n0.012960\n...\n0.082005\n0.043003\n0.014401\n0.006134\n0.068513\n0.069249\n0.073398\n0.012980\n0.056336\n0.037803\n0.050114\n0.035996\n0.080222\n0.018801\n0.030510\n0.014720\n0.009635\n0.023752\n0.071056\n0.061087\n0.046434\n0.037535\n0.053258\n0.082363\n0.044627\n0.015656\n0.005955\n0.070061\n0.067710\n0.072412\n0.015181\n0.053469\n0.036676\n0.058910\n0.037885\n0.084906\n0.018338\n0.030093\n0.017935\n0.007926\n0.021294\n0.070330\n0.059313\n0.044200\n0.036273\n0.054880\n0.077316\n0.043461\n0.014980\n0.006449\n\n\nks_T\n0.061634\n0.065896\n0.074266\n0.016436\n0.043829\n0.034394\n0.059656\n0.040177\n0.089484\n0.024806\n0.033024\n0.019175\n0.010501\n0.020088\n0.072896\n0.056460\n0.042764\n0.035002\n0.065287\n0.076548\n0.028915\n0.018566\n0.010196\n0.060989\n0.072395\n0.072395\n0.013840\n0.046388\n0.036502\n0.062662\n0.040913\n0.081217\n0.024183\n0.031787\n0.016730\n0.007452\n0.019468\n0.080152\n0.059468\n0.044715\n0.034981\n0.055057\n0.083498\n0.033916\n0.015665\n0.005627\n0.063562\n0.070692\n0.069326\n0.015777\n...\n0.086112\n0.037420\n0.017222\n0.011116\n0.059683\n0.067222\n0.073033\n0.012879\n0.044605\n0.034867\n0.054343\n0.043191\n0.082142\n0.017905\n0.031255\n0.018847\n0.009267\n0.021988\n0.076174\n0.065023\n0.040364\n0.043349\n0.063295\n0.081200\n0.030470\n0.019632\n0.009267\n0.063397\n0.067497\n0.066393\n0.015140\n0.047784\n0.031698\n0.053304\n0.046838\n0.080902\n0.019871\n0.035483\n0.020659\n0.010093\n0.022394\n0.075067\n0.060558\n0.045261\n0.038007\n0.058666\n0.076644\n0.035483\n0.019871\n0.008989\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nhuman_ST_upper\n0.082791\n0.066656\n0.072951\n0.012749\n0.111414\n0.054709\n0.049589\n0.032810\n0.080030\n0.019268\n0.025079\n0.019063\n0.007013\n0.022010\n0.067710\n0.062114\n0.047611\n0.033510\n0.052219\n0.080702\n0.000000\n0.000000\n0.000000\n0.082364\n0.066437\n0.073391\n0.012502\n0.112851\n0.054252\n0.050835\n0.031845\n0.078539\n0.019614\n0.024361\n0.017966\n0.006609\n0.022350\n0.067405\n0.063942\n0.048713\n0.033838\n0.051655\n0.080531\n0.000000\n0.000000\n0.000000\n0.083261\n0.066199\n0.074920\n0.013477\n...\n0.081781\n0.000000\n0.000000\n0.000000\n0.081470\n0.068046\n0.070355\n0.013078\n0.113824\n0.056426\n0.049966\n0.031747\n0.078665\n0.016032\n0.025418\n0.018332\n0.006834\n0.021884\n0.066924\n0.063147\n0.048788\n0.034962\n0.052911\n0.081189\n0.000000\n0.000000\n0.000000\n0.082942\n0.067364\n0.070982\n0.012747\n0.114370\n0.054382\n0.050436\n0.032196\n0.080711\n0.016468\n0.026638\n0.018652\n0.007058\n0.021877\n0.067252\n0.064102\n0.047521\n0.032946\n0.051795\n0.079558\n0.000000\n0.000000\n0.000000\n\n\nhuman_STY_upper\n0.082206\n0.066688\n0.072961\n0.012965\n0.110244\n0.054656\n0.049733\n0.033379\n0.080515\n0.019334\n0.025206\n0.020031\n0.007049\n0.022131\n0.067141\n0.062035\n0.047677\n0.033640\n0.052120\n0.080289\n0.000000\n0.000000\n0.000000\n0.081832\n0.066727\n0.073458\n0.012827\n0.111061\n0.053752\n0.050734\n0.032307\n0.078615\n0.019802\n0.024967\n0.018880\n0.006679\n0.022410\n0.067327\n0.063718\n0.048352\n0.034185\n0.051743\n0.080624\n0.000000\n0.000000\n0.000000\n0.082377\n0.066193\n0.074272\n0.013311\n...\n0.081579\n0.000000\n0.000000\n0.000000\n0.080805\n0.067923\n0.070240\n0.013196\n0.112567\n0.056073\n0.050258\n0.032331\n0.079073\n0.016362\n0.025728\n0.019064\n0.006917\n0.021705\n0.066891\n0.062991\n0.048728\n0.035155\n0.052847\n0.081146\n0.000000\n0.000000\n0.000000\n0.082350\n0.067688\n0.070582\n0.012733\n0.112743\n0.054403\n0.050360\n0.032901\n0.080631\n0.016863\n0.026965\n0.019844\n0.007094\n0.021870\n0.067153\n0.063812\n0.047677\n0.032840\n0.052027\n0.079465\n0.000000\n0.000000\n0.000000\n\n\n\n\n20 rows × 943 columns\n\n\n\n\n\n\nget_cddm\n\n get_cddm ()\n\nGet the CDDM dataset.\n\nData.get_cddm()\n\n\n\n\n\n\n\n\n-20P\n-20G\n-20A\n-20C\n-20S\n-20T\n-20V\n-20I\n-20L\n-20M\n-20F\n-20Y\n-20W\n-20H\n-20K\n-20R\n-20Q\n-20N\n-20D\n-20E\n-20pS\n-20pT\n-20pY\n-19P\n-19G\n-19A\n-19C\n-19S\n-19T\n-19V\n-19I\n-19L\n-19M\n-19F\n-19Y\n-19W\n-19H\n-19K\n-19R\n-19Q\n-19N\n-19D\n-19E\n-19pS\n-19pT\n-19pY\n-18P\n-18G\n-18A\n-18C\n...\n18E\n18pS\n18pT\n18pY\n19P\n19G\n19A\n19C\n19S\n19T\n19V\n19I\n19L\n19M\n19F\n19Y\n19W\n19H\n19K\n19R\n19Q\n19N\n19D\n19E\n19pS\n19pT\n19pY\n20P\n20G\n20A\n20C\n20S\n20T\n20V\n20I\n20L\n20M\n20F\n20Y\n20W\n20H\n20K\n20R\n20Q\n20N\n20D\n20E\n20pS\n20pT\n20pY\n\n\n\n\nSRC\n0.054538\n0.081380\n0.060077\n0.012356\n0.036216\n0.032382\n0.055816\n0.052407\n0.083511\n0.023434\n0.031530\n0.023008\n0.005965\n0.018747\n0.082659\n0.058372\n0.051555\n0.039625\n0.059651\n0.071155\n0.022582\n0.020452\n0.022582\n0.048428\n0.075616\n0.085387\n0.017417\n0.035684\n0.029737\n0.056500\n0.052676\n0.079864\n0.024214\n0.032285\n0.019966\n0.011895\n0.019541\n0.081563\n0.061597\n0.044605\n0.036534\n0.064146\n0.071793\n0.025064\n0.012744\n0.012744\n0.054968\n0.069345\n0.066808\n0.015222\n...\n0.080938\n0.030075\n0.011057\n0.010615\n0.052375\n0.071460\n0.064359\n0.017754\n0.047048\n0.035508\n0.052375\n0.050599\n0.091434\n0.024856\n0.041278\n0.015535\n0.011096\n0.015979\n0.064802\n0.066134\n0.047048\n0.035508\n0.062583\n0.074123\n0.028407\n0.011540\n0.018198\n0.05830\n0.085447\n0.064976\n0.012906\n0.041834\n0.039163\n0.043169\n0.050734\n0.074766\n0.032488\n0.040053\n0.018692\n0.008456\n0.013351\n0.076992\n0.060970\n0.037383\n0.036938\n0.052960\n0.086337\n0.025367\n0.015576\n0.023142\n\n\nEPHA3\n0.044276\n0.088013\n0.065335\n0.008639\n0.037797\n0.036717\n0.072354\n0.048596\n0.075594\n0.026998\n0.031317\n0.022678\n0.011339\n0.021598\n0.084233\n0.059395\n0.046436\n0.036177\n0.059935\n0.064255\n0.023758\n0.018898\n0.015659\n0.047875\n0.064551\n0.087144\n0.016138\n0.031737\n0.039806\n0.051103\n0.046799\n0.080151\n0.026358\n0.035503\n0.015600\n0.010221\n0.023669\n0.090909\n0.060785\n0.042496\n0.033889\n0.067240\n0.079613\n0.020979\n0.011296\n0.016138\n0.047696\n0.060557\n0.057878\n0.018221\n...\n0.076362\n0.039304\n0.017967\n0.006738\n0.050197\n0.070502\n0.067682\n0.020305\n0.029329\n0.039481\n0.053017\n0.049069\n0.095319\n0.027637\n0.038917\n0.016920\n0.011280\n0.016920\n0.071066\n0.061478\n0.039481\n0.037225\n0.062606\n0.083474\n0.029893\n0.011844\n0.016356\n0.04918\n0.084228\n0.064443\n0.017524\n0.031656\n0.038440\n0.047484\n0.062747\n0.070661\n0.031656\n0.042962\n0.017524\n0.007914\n0.014132\n0.083098\n0.059356\n0.031091\n0.033917\n0.056529\n0.100622\n0.025438\n0.013567\n0.015828\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nMAST2\n0.046512\n0.116279\n0.069767\n0.000000\n0.023256\n0.069767\n0.069767\n0.000000\n0.046512\n0.046512\n0.023256\n0.000000\n0.000000\n0.162791\n0.023256\n0.023256\n0.023256\n0.000000\n0.046512\n0.139535\n0.023256\n0.023256\n0.023256\n0.023256\n0.162791\n0.093023\n0.000000\n0.046512\n0.046512\n0.023256\n0.046512\n0.093023\n0.000000\n0.046512\n0.046512\n0.000000\n0.093023\n0.023256\n0.046512\n0.023256\n0.000000\n0.046512\n0.116279\n0.023256\n0.000000\n0.000000\n0.023256\n0.023256\n0.093023\n0.000000\n...\n0.146341\n0.000000\n0.000000\n0.000000\n0.000000\n0.048780\n0.121951\n0.024390\n0.073171\n0.048780\n0.048780\n0.024390\n0.073171\n0.000000\n0.146341\n0.000000\n0.000000\n0.000000\n0.097561\n0.048780\n0.000000\n0.048780\n0.073171\n0.073171\n0.048780\n0.000000\n0.000000\n0.00000\n0.024390\n0.048780\n0.024390\n0.024390\n0.097561\n0.170732\n0.024390\n0.048780\n0.048780\n0.024390\n0.000000\n0.073171\n0.000000\n0.048780\n0.219512\n0.000000\n0.048780\n0.024390\n0.024390\n0.024390\n0.000000\n0.000000\n\n\nBRAF\n0.095238\n0.071429\n0.047619\n0.000000\n0.095238\n0.047619\n0.071429\n0.000000\n0.095238\n0.047619\n0.000000\n0.000000\n0.000000\n0.023810\n0.023810\n0.071429\n0.023810\n0.023810\n0.095238\n0.095238\n0.047619\n0.000000\n0.023810\n0.071429\n0.047619\n0.023810\n0.000000\n0.000000\n0.047619\n0.000000\n0.071429\n0.047619\n0.000000\n0.023810\n0.071429\n0.000000\n0.023810\n0.095238\n0.071429\n0.000000\n0.071429\n0.023810\n0.166667\n0.119048\n0.023810\n0.000000\n0.047619\n0.071429\n0.071429\n0.000000\n...\n0.025000\n0.025000\n0.025000\n0.000000\n0.025000\n0.075000\n0.025000\n0.000000\n0.125000\n0.050000\n0.050000\n0.025000\n0.050000\n0.050000\n0.000000\n0.025000\n0.000000\n0.000000\n0.075000\n0.100000\n0.025000\n0.050000\n0.050000\n0.050000\n0.100000\n0.050000\n0.000000\n0.02500\n0.075000\n0.100000\n0.000000\n0.075000\n0.100000\n0.100000\n0.050000\n0.050000\n0.000000\n0.000000\n0.000000\n0.025000\n0.000000\n0.075000\n0.075000\n0.025000\n0.025000\n0.075000\n0.075000\n0.050000\n0.000000\n0.000000\n\n\n\n\n328 rows × 943 columns\n\n\n\n\n\n\nget_cddm_upper\n\n get_cddm_upper ()\n\nGet the CDDM dataset of all uppercase sequence.\n\nData.get_cddm_upper()\n\n\n\n\n\n\n\n\n-20P\n-20G\n-20A\n-20C\n-20S\n-20T\n-20V\n-20I\n-20L\n-20M\n-20F\n-20Y\n-20W\n-20H\n-20K\n-20R\n-20Q\n-20N\n-20D\n-20E\n-20pS\n-20pT\n-20pY\n-19P\n-19G\n-19A\n-19C\n-19S\n-19T\n-19V\n-19I\n-19L\n-19M\n-19F\n-19Y\n-19W\n-19H\n-19K\n-19R\n-19Q\n-19N\n-19D\n-19E\n-19pS\n-19pT\n-19pY\n-18P\n-18G\n-18A\n-18C\n...\n18E\n18pS\n18pT\n18pY\n19P\n19G\n19A\n19C\n19S\n19T\n19V\n19I\n19L\n19M\n19F\n19Y\n19W\n19H\n19K\n19R\n19Q\n19N\n19D\n19E\n19pS\n19pT\n19pY\n20P\n20G\n20A\n20C\n20S\n20T\n20V\n20I\n20L\n20M\n20F\n20Y\n20W\n20H\n20K\n20R\n20Q\n20N\n20D\n20E\n20pS\n20pT\n20pY\n\n\n\n\nSRC\n0.054538\n0.081380\n0.060077\n0.012356\n0.058798\n0.052833\n0.055816\n0.052407\n0.083511\n0.023434\n0.031530\n0.045590\n0.005965\n0.018747\n0.082659\n0.058372\n0.051555\n0.039625\n0.059651\n0.071155\n0.0\n0.0\n0.0\n0.048428\n0.075616\n0.085387\n0.017417\n0.060748\n0.042481\n0.056500\n0.052676\n0.079864\n0.024214\n0.032285\n0.032710\n0.011895\n0.019541\n0.081563\n0.061597\n0.044605\n0.036534\n0.064146\n0.071793\n0.0\n0.0\n0.0\n0.054968\n0.069345\n0.066808\n0.015222\n...\n0.080938\n0.0\n0.0\n0.0\n0.052375\n0.071460\n0.064359\n0.017754\n0.075455\n0.047048\n0.052375\n0.050599\n0.091434\n0.024856\n0.041278\n0.033733\n0.011096\n0.015979\n0.064802\n0.066134\n0.047048\n0.035508\n0.062583\n0.074123\n0.0\n0.0\n0.0\n0.05830\n0.085447\n0.064976\n0.012906\n0.067201\n0.054740\n0.043169\n0.050734\n0.074766\n0.032488\n0.040053\n0.041834\n0.008456\n0.013351\n0.076992\n0.060970\n0.037383\n0.036938\n0.052960\n0.086337\n0.0\n0.0\n0.0\n\n\nEPHA3\n0.044276\n0.088013\n0.065335\n0.008639\n0.061555\n0.055616\n0.072354\n0.048596\n0.075594\n0.026998\n0.031317\n0.038337\n0.011339\n0.021598\n0.084233\n0.059395\n0.046436\n0.036177\n0.059935\n0.064255\n0.0\n0.0\n0.0\n0.047875\n0.064551\n0.087144\n0.016138\n0.052717\n0.051103\n0.051103\n0.046799\n0.080151\n0.026358\n0.035503\n0.031737\n0.010221\n0.023669\n0.090909\n0.060785\n0.042496\n0.033889\n0.067240\n0.079613\n0.0\n0.0\n0.0\n0.047696\n0.060557\n0.057878\n0.018221\n...\n0.076362\n0.0\n0.0\n0.0\n0.050197\n0.070502\n0.067682\n0.020305\n0.059222\n0.051325\n0.053017\n0.049069\n0.095319\n0.027637\n0.038917\n0.033277\n0.011280\n0.016920\n0.071066\n0.061478\n0.039481\n0.037225\n0.062606\n0.083474\n0.0\n0.0\n0.0\n0.04918\n0.084228\n0.064443\n0.017524\n0.057094\n0.052007\n0.047484\n0.062747\n0.070661\n0.031656\n0.042962\n0.033352\n0.007914\n0.014132\n0.083098\n0.059356\n0.031091\n0.033917\n0.056529\n0.100622\n0.0\n0.0\n0.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nMAST2\n0.046512\n0.116279\n0.069767\n0.000000\n0.046512\n0.093023\n0.069767\n0.000000\n0.046512\n0.046512\n0.023256\n0.023256\n0.000000\n0.162791\n0.023256\n0.023256\n0.023256\n0.000000\n0.046512\n0.139535\n0.0\n0.0\n0.0\n0.023256\n0.162791\n0.093023\n0.000000\n0.069767\n0.046512\n0.023256\n0.046512\n0.093023\n0.000000\n0.046512\n0.046512\n0.000000\n0.093023\n0.023256\n0.046512\n0.023256\n0.000000\n0.046512\n0.116279\n0.0\n0.0\n0.0\n0.023256\n0.023256\n0.093023\n0.000000\n...\n0.146341\n0.0\n0.0\n0.0\n0.000000\n0.048780\n0.121951\n0.024390\n0.121951\n0.048780\n0.048780\n0.024390\n0.073171\n0.000000\n0.146341\n0.000000\n0.000000\n0.000000\n0.097561\n0.048780\n0.000000\n0.048780\n0.073171\n0.073171\n0.0\n0.0\n0.0\n0.00000\n0.024390\n0.048780\n0.024390\n0.048780\n0.097561\n0.170732\n0.024390\n0.048780\n0.048780\n0.024390\n0.000000\n0.073171\n0.000000\n0.048780\n0.219512\n0.000000\n0.048780\n0.024390\n0.024390\n0.0\n0.0\n0.0\n\n\nBRAF\n0.095238\n0.071429\n0.047619\n0.000000\n0.142857\n0.047619\n0.071429\n0.000000\n0.095238\n0.047619\n0.000000\n0.023810\n0.000000\n0.023810\n0.023810\n0.071429\n0.023810\n0.023810\n0.095238\n0.095238\n0.0\n0.0\n0.0\n0.071429\n0.047619\n0.023810\n0.000000\n0.119048\n0.071429\n0.000000\n0.071429\n0.047619\n0.000000\n0.023810\n0.071429\n0.000000\n0.023810\n0.095238\n0.071429\n0.000000\n0.071429\n0.023810\n0.166667\n0.0\n0.0\n0.0\n0.047619\n0.071429\n0.071429\n0.000000\n...\n0.025000\n0.0\n0.0\n0.0\n0.025000\n0.075000\n0.025000\n0.000000\n0.225000\n0.100000\n0.050000\n0.025000\n0.050000\n0.050000\n0.000000\n0.025000\n0.000000\n0.000000\n0.075000\n0.100000\n0.025000\n0.050000\n0.050000\n0.050000\n0.0\n0.0\n0.0\n0.02500\n0.075000\n0.100000\n0.000000\n0.125000\n0.100000\n0.100000\n0.050000\n0.050000\n0.000000\n0.000000\n0.000000\n0.025000\n0.000000\n0.075000\n0.075000\n0.025000\n0.025000\n0.075000\n0.075000\n0.0\n0.0\n0.0\n\n\n\n\n328 rows × 943 columns\n\n\n\n\n\n\nget_cddm_LO\n\n get_cddm_LO ()\n\nGet CDDM Log-odds data with ‘STY’ background.\n\nData.get_cddm_LO()\n\n\n\n\n\n\n\n\n-20P\n-20G\n-20A\n-20C\n-20S\n-20T\n-20V\n-20I\n-20L\n-20M\n-20F\n-20Y\n-20W\n-20H\n-20K\n-20R\n-20Q\n-20N\n-20D\n-20E\n-20pS\n-20pT\n-20pY\n-19P\n-19G\n-19A\n-19C\n-19S\n-19T\n-19V\n-19I\n-19L\n-19M\n-19F\n-19Y\n-19W\n-19H\n-19K\n-19R\n-19Q\n-19N\n-19D\n-19E\n-19pS\n-19pT\n-19pY\n-18P\n-18G\n-18A\n-18C\n...\n18E\n18pS\n18pT\n18pY\n19P\n19G\n19A\n19C\n19S\n19T\n19V\n19I\n19L\n19M\n19F\n19Y\n19W\n19H\n19K\n19R\n19Q\n19N\n19D\n19E\n19pS\n19pT\n19pY\n20P\n20G\n20A\n20C\n20S\n20T\n20V\n20I\n20L\n20M\n20F\n20Y\n20W\n20H\n20K\n20R\n20Q\n20N\n20D\n20E\n20pS\n20pT\n20pY\n\n\n\n\nSRC\n-0.298965\n0.245926\n-0.306472\n-0.315249\n-0.436393\n-0.216885\n0.039840\n0.331979\n0.006587\n0.074104\n0.026464\n0.300781\n-0.484863\n-0.234235\n0.238737\n0.035866\n0.173786\n0.112172\n0.062717\n-0.187118\n-0.598455\n0.418275\n1.228850\n-0.394990\n0.116437\n0.241674\n0.270796\n-0.536063\n-0.295952\n0.089650\n0.359646\n-0.082026\n0.078067\n0.157708\n0.196729\n0.443758\n-0.096374\n0.191619\n-0.036922\n-0.065461\n-0.093194\n0.198348\n-0.149715\n-0.521873\n-0.217518\n0.779107\n-0.209860\n0.005564\n-0.061876\n0.087346\n...\n-0.024870\n-0.295180\n-0.362786\n0.382054\n-0.265140\n0.085462\n-0.135241\n0.341197\n-0.144617\n-0.081201\n-0.016493\n0.302052\n0.137508\n0.404226\n0.299088\n-0.066971\n0.165626\n-0.468907\n-0.152143\n0.097919\n0.055576\n-0.162821\n0.125989\n-0.139554\n-0.371114\n-0.369706\n1.148641\n-0.219858\n0.305918\n-0.086212\n-0.217325\n-0.300629\n0.133833\n-0.379744\n0.266731\n-0.143992\n0.691717\n0.259364\n-0.031653\n-0.018293\n-0.661728\n0.104673\n0.041005\n-0.236473\n-0.001987\n-0.082064\n0.136414\n-0.538512\n0.006337\n1.268341\n\n\nEPHA3\n-0.599679\n0.358959\n-0.185427\n-0.831496\n-0.374767\n-0.035616\n0.414240\n0.223052\n-0.137106\n0.278334\n0.016725\n0.279945\n0.441832\n-0.030005\n0.265960\n0.060927\n0.022921\n-0.019164\n0.069583\n-0.334271\n-0.525210\n0.304329\n0.700644\n-0.411559\n-0.111818\n0.271060\n0.160722\n-0.705150\n0.124806\n-0.055189\n0.188981\n-0.076858\n0.200475\n0.294762\n-0.159291\n0.224919\n0.180083\n0.348124\n-0.056065\n-0.135338\n-0.201591\n0.266315\n-0.000554\n-0.778526\n-0.391503\n1.119694\n-0.414603\n-0.189918\n-0.268878\n0.346775\n...\n-0.108833\n0.090914\n0.337630\n-0.273672\n-0.326395\n0.065984\n-0.062604\n0.534849\n-0.826443\n0.071809\n0.001107\n0.257761\n0.197541\n0.557236\n0.214109\n0.056291\n0.189352\n-0.386287\n-0.019033\n-0.007411\n-0.197407\n-0.094701\n0.126509\n0.031850\n-0.297539\n-0.332173\n0.994725\n-0.465271\n0.285190\n-0.098081\n0.223956\n-0.702797\n0.106930\n-0.242274\n0.573323\n-0.225459\n0.654314\n0.360504\n-0.124708\n-0.113799\n-0.579696\n0.214783\n0.002284\n-0.502364\n-0.125070\n0.012040\n0.357301\n-0.534483\n-0.192918\n0.720322\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nMAST2\n-0.528628\n0.760762\n-0.090724\n-20.552054\n-1.075446\n0.890487\n0.361717\n-21.989358\n-0.837785\n1.063081\n-0.412652\n-20.832929\n-19.671043\n2.884025\n-1.590838\n-1.291829\n-0.974740\n-21.805810\n-0.296229\n0.784477\n-0.556038\n0.603650\n1.271267\n-1.453246\n1.222693\n0.365256\n-20.461283\n-0.153747\n0.349399\n-1.190998\n0.180083\n0.138019\n-21.129349\n0.684414\n1.416774\n-19.738124\n2.154697\n-1.618709\n-0.442197\n-1.005072\n-21.893985\n-0.265423\n0.545967\n-0.629882\n-20.498936\n-19.502311\n-1.450868\n-1.570628\n0.415703\n-20.450380\n...\n0.829586\n-21.815323\n-20.439323\n-19.635590\n-22.585576\n-0.465375\n0.786858\n0.799349\n0.492504\n0.376951\n-0.119057\n-0.750758\n-0.183951\n-20.840923\n2.124971\n-20.634048\n-19.916025\n-21.076626\n0.438112\n-0.341170\n-22.110138\n0.295330\n0.351480\n-0.158216\n0.408965\n-20.507940\n-19.646705\n-22.694922\n-1.502811\n-0.499805\n0.700926\n-1.078985\n1.450633\n1.603930\n-0.789927\n-0.760077\n1.278125\n-0.456257\n-20.865612\n3.094973\n-21.010260\n-0.553723\n1.889130\n-22.070431\n0.399205\n-1.200649\n-1.687266\n-0.595170\n-20.564588\n-19.873740\n\n\nBRAF\n0.505319\n0.057744\n-0.641739\n-20.552054\n0.958501\n0.339472\n0.395665\n-21.989358\n0.196162\n1.097028\n-21.561812\n-20.832929\n-19.671043\n0.110618\n-1.556891\n0.327081\n-0.940792\n-0.622702\n0.737718\n0.233462\n0.477909\n-20.545511\n1.305214\n0.165663\n-0.550715\n-1.600796\n-20.461283\n-22.302907\n0.383346\n-22.340159\n0.798993\n-0.828033\n-21.129349\n-0.281638\n2.035683\n-19.738124\n0.188645\n0.415238\n0.176712\n-22.154233\n0.874085\n-1.231475\n1.065341\n1.725993\n0.684172\n-19.502311\n-0.416921\n0.048281\n0.034613\n-20.450380\n...\n-1.719752\n-0.561825\n0.814174\n-19.635590\n-1.332079\n0.155211\n-1.499446\n-20.418525\n1.265094\n0.412575\n-0.083433\n-0.715134\n-0.733289\n1.412574\n-21.677864\n0.619449\n-19.916025\n-21.076626\n0.058698\n0.694454\n-0.856641\n0.330954\n-0.197858\n-0.707554\n1.444589\n1.745557\n-19.646705\n-1.441424\n0.117775\n0.535819\n-20.516947\n0.541601\n1.486257\n0.832199\n0.245697\n-0.724453\n-20.939748\n-21.674130\n-20.865612\n1.545635\n-21.010260\n0.066864\n0.339792\n-0.816934\n-0.565170\n0.419937\n-0.066680\n0.440454\n-20.564588\n-19.873740\n\n\n\n\n328 rows × 943 columns\n\n\n\n\n\n\nget_cddm_LO_upper\n\n get_cddm_LO_upper ()\n\nGet CDDM Log-odds data of all-uppercase sequence with ‘STY’ background.\n\nData.get_cddm_LO_upper()\n\n\n\n\n\n\n\n\n-20P\n-20G\n-20A\n-20C\n-20S\n-20T\n-20V\n-20I\n-20L\n-20M\n-20F\n-20Y\n-20W\n-20H\n-20K\n-20R\n-20Q\n-20N\n-20D\n-20E\n-20pS\n-20pT\n-20pY\n-19P\n-19G\n-19A\n-19C\n-19S\n-19T\n-19V\n-19I\n-19L\n-19M\n-19F\n-19Y\n-19W\n-19H\n-19K\n-19R\n-19Q\n-19N\n-19D\n-19E\n-19pS\n-19pT\n-19pY\n-18P\n-18G\n-18A\n-18C\n...\n18E\n18pS\n18pT\n18pY\n19P\n19G\n19A\n19C\n19S\n19T\n19V\n19I\n19L\n19M\n19F\n19Y\n19W\n19H\n19K\n19R\n19Q\n19N\n19D\n19E\n19pS\n19pT\n19pY\n20P\n20G\n20A\n20C\n20S\n20T\n20V\n20I\n20L\n20M\n20F\n20Y\n20W\n20H\n20K\n20R\n20Q\n20N\n20D\n20E\n20pS\n20pT\n20pY\n\n\n\n\nSRC\n-0.298965\n0.245926\n-0.306472\n-0.315249\n-0.500805\n-0.002884\n0.039840\n0.331979\n0.006587\n0.074104\n0.026464\n0.687254\n-0.484863\n-0.234235\n0.238737\n0.035866\n0.173786\n0.112172\n0.062717\n-0.187118\n0.0\n0.0\n0.0\n-0.394990\n0.116437\n0.241674\n0.270796\n-0.530225\n-0.272866\n0.089650\n0.359646\n-0.082026\n0.078067\n0.157708\n0.396654\n0.443758\n-0.096374\n0.191619\n-0.036922\n-0.065461\n-0.093194\n0.198348\n-0.149715\n0.0\n0.0\n0.0\n-0.209860\n0.005564\n-0.061876\n0.087346\n...\n-0.024870\n0.0\n0.0\n0.0\n-0.265140\n0.085462\n-0.135241\n0.341197\n-0.234110\n-0.157485\n-0.016493\n0.302052\n0.137508\n0.404226\n0.299088\n0.462480\n0.165626\n-0.468907\n-0.152143\n0.097919\n0.055576\n-0.162821\n0.125989\n-0.139554\n0.0\n0.0\n0.0\n-0.219858\n0.305918\n-0.086212\n-0.217325\n-0.395092\n0.096392\n-0.379744\n0.266731\n-0.143992\n0.691717\n0.259364\n0.542941\n-0.018293\n-0.661728\n0.104673\n0.041005\n-0.236473\n-0.001987\n-0.082064\n0.136414\n0.0\n0.0\n0.0\n\n\nEPHA3\n-0.599679\n0.358959\n-0.185427\n-0.831496\n-0.434706\n0.071154\n0.414240\n0.223052\n-0.137106\n0.278334\n0.016725\n0.437268\n0.441832\n-0.030005\n0.265960\n0.060927\n0.022921\n-0.019164\n0.069583\n-0.334271\n0.0\n0.0\n0.0\n-0.411559\n-0.111818\n0.271060\n0.160722\n-0.734799\n-0.006279\n-0.055189\n0.188981\n-0.076858\n0.200475\n0.294762\n0.353099\n0.224919\n0.180083\n0.348124\n-0.056065\n-0.135338\n-0.201591\n0.266315\n-0.000554\n0.0\n0.0\n0.0\n-0.414603\n-0.189918\n-0.268878\n0.346775\n...\n-0.108833\n0.0\n0.0\n0.0\n-0.326395\n0.065984\n-0.062604\n0.534849\n-0.583601\n-0.031956\n0.001107\n0.257761\n0.197541\n0.557236\n0.214109\n0.442850\n0.189352\n-0.386287\n-0.019033\n-0.007411\n-0.197407\n-0.094701\n0.126509\n0.031850\n0.0\n0.0\n0.0\n-0.465271\n0.285190\n-0.098081\n0.223956\n-0.630220\n0.022506\n-0.242274\n0.573323\n-0.225459\n0.654314\n0.360504\n0.216062\n-0.113799\n-0.579696\n0.214783\n0.002284\n-0.502364\n-0.125070\n0.012040\n0.357301\n0.0\n0.0\n0.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nMAST2\n-0.528628\n0.760762\n-0.090724\n-20.552054\n-0.838992\n0.813257\n0.361717\n-21.989358\n-0.837785\n1.063081\n-0.412652\n-0.283875\n-19.671043\n2.884025\n-1.590838\n-1.291829\n-0.974740\n-21.805810\n-0.296229\n0.784477\n0.0\n0.0\n0.0\n-1.453246\n1.222693\n0.365256\n-20.461283\n-0.330500\n-0.142089\n-1.190998\n0.180083\n0.138019\n-21.129349\n0.684414\n0.904502\n-19.738124\n2.154697\n-1.618709\n-0.442197\n-1.005072\n-21.893985\n-0.265423\n0.545967\n0.0\n0.0\n0.0\n-1.450868\n-1.570628\n0.415703\n-20.450380\n...\n0.829586\n0.0\n0.0\n0.0\n-22.585576\n-0.465375\n0.786858\n0.799349\n0.458506\n-0.105326\n-0.119057\n-0.750758\n-0.183951\n-20.840923\n2.124971\n-21.223241\n-19.916025\n-21.076626\n0.438112\n-0.341170\n-22.110138\n0.295330\n0.351480\n-0.158216\n0.0\n0.0\n0.0\n-22.694922\n-1.502811\n-0.499805\n0.700926\n-0.857265\n0.930110\n1.603930\n-0.789927\n-0.760077\n1.278125\n-0.456257\n-21.453288\n3.094973\n-21.010260\n-0.553723\n1.889130\n-22.070431\n0.399205\n-1.200649\n-1.687266\n0.0\n0.0\n0.0\n\n\nBRAF\n0.505319\n0.057744\n-0.641739\n-20.552054\n0.779918\n-0.152796\n0.395665\n-21.989358\n0.196162\n1.097028\n-21.561812\n-0.249928\n-19.671043\n0.110618\n-1.556891\n0.327081\n-0.940792\n-0.622702\n0.737718\n0.233462\n0.0\n0.0\n0.0\n0.165663\n-0.550715\n-1.600796\n-20.461283\n0.440412\n0.476821\n-22.340159\n0.798993\n-0.828033\n-21.129349\n-0.281638\n1.523411\n-19.738124\n0.188645\n0.415238\n0.176712\n-22.154233\n0.874085\n-1.231475\n1.065341\n0.0\n0.0\n0.0\n-0.416921\n0.048281\n0.034613\n-20.450380\n...\n-1.719752\n0.0\n0.0\n0.0\n-1.332079\n0.155211\n-1.499446\n-20.418525\n1.342127\n0.930298\n-0.083433\n-0.715134\n-0.733289\n1.412574\n-21.677864\n0.030256\n-19.916025\n-21.076626\n0.058698\n0.694454\n-0.856641\n0.330954\n-0.197858\n-0.707554\n0.0\n0.0\n0.0\n-1.441424\n0.117775\n0.535819\n-20.516947\n0.500287\n0.965734\n0.832199\n0.245697\n-0.724453\n-20.939748\n-21.674130\n-21.453288\n1.545635\n-21.010260\n0.066864\n0.339792\n-0.816934\n-0.565170\n0.419937\n-0.066680\n0.0\n0.0\n0.0\n\n\n\n\n328 rows × 943 columns\n\n\n\n\n\nAmino acid\n\nsource\n\n\nData.get_aa_info\n\n Data.get_aa_info ()\n\nGet amino acid information.\n\nData.get_aa_info()\n\n\n\n\n\n\n\n\nName\nSMILES\nMW\npKa1\npKb2\npKx3\npl4\nH\nVSC\nP1\nP2\nSASA\nNCISC\nphospho\n\n\naa\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA\nAlanine\nC[C@@H](C(=O)O)N\n89.10\n2.34\n9.69\nNaN\n6.00\n0.62\n27.5\n8.1\n0.046\n1.181\n0.007187\n0\n\n\nC\nCysteine\nC([C@@H](C(=O)O)N)S\n121.16\n1.96\n10.28\n8.18\n5.07\n0.29\n44.6\n5.5\n0.128\n1.461\n-0.036610\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nKac\nAcetyllysine\nCC(=O)NCCCC[C@H](N)C(=O)O\n188.23\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n0\n\n\nKme3\nTrimethyllysine\nC[N+](C)(C)CCCC[C@H](N)C(=O)O\n189.28\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n0\n\n\n\n\n25 rows × 14 columns\n\n\n\n\nsource\n\n\nData.get_aa_rdkit\n\n Data.get_aa_rdkit ()\n\nGet RDKit representations of amino acids.\n\nData.get_aa_rdkit()\n\n\n\n\n\n\n\n\nMaxAbsEStateIndex\nMinAbsEStateIndex\nMinEStateIndex\nqed\nMolWt\nMinPartialCharge\nMaxAbsPartialCharge\nFpDensityMorgan1\nFpDensityMorgan2\nFpDensityMorgan3\nBCUT2D_MWHI\nBCUT2D_MWLOW\nBCUT2D_CHGHI\nBCUT2D_CHGLO\nBCUT2D_LOGPHI\nBCUT2D_LOGPLOW\nBCUT2D_MRLOW\nAvgIpc\nBalabanJ\nBertzCT\nChi0n\nChi0v\nChi1\nChi1v\nChi2n\nChi2v\nChi3n\nChi3v\nChi4n\nChi4v\nHallKierAlpha\nIpc\nKappa1\nKappa2\nKappa3\nPEOE_VSA1\nPEOE_VSA10\nPEOE_VSA11\nPEOE_VSA12\nPEOE_VSA14\nPEOE_VSA2\nPEOE_VSA3\nPEOE_VSA4\nPEOE_VSA6\nPEOE_VSA7\nPEOE_VSA8\nPEOE_VSA9\nSMR_VSA1\nSMR_VSA10\nSMR_VSA3\n...\nSlogP_VSA2\nSlogP_VSA3\nSlogP_VSA4\nSlogP_VSA5\nSlogP_VSA8\nTPSA\nEState_VSA1\nEState_VSA10\nEState_VSA2\nEState_VSA3\nEState_VSA4\nEState_VSA5\nEState_VSA6\nEState_VSA7\nEState_VSA8\nEState_VSA9\nVSA_EState10\nVSA_EState2\nVSA_EState3\nVSA_EState4\nVSA_EState5\nVSA_EState6\nVSA_EState7\nVSA_EState8\nVSA_EState9\nFractionCSP3\nNHOHCount\nNOCount\nNumAliphaticHeterocycles\nNumAromaticCarbocycles\nNumAromaticHeterocycles\nNumAromaticRings\nNumHAcceptors\nNumHDonors\nNumHeteroatoms\nNumRotatableBonds\nRingCount\nMolLogP\nfr_Al_COO\nfr_Al_OH\nfr_Ar_N\nfr_C_O\nfr_NH0\nfr_NH1\nfr_NH2\nfr_SH\nfr_imidazole\nfr_priamide\nfr_sulfide\nfr_unbrch_alkane\n\n\naa\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA\n9.574074\n0.731481\n-0.962963\n0.451352\n89.094\n-0.480094\n0.480094\n2.000000\n2.166667\n2.166667\n16.367425\n10.385341\n1.990289\n-1.897069\n1.676610\n-2.250004\n-0.137563\n1.360964\n3.257586\n59.813538\n3.510162\n3.510162\n2.642734\n1.627090\n1.126913\n1.126913\n0.389528\n0.389528\n0.000000\n0.000000\n-0.57\n13.609640\n5.43\n1.767634\n1.721545\n10.840195\n6.041841\n0.0\n0.00000\n5.969305\n4.794537\n0.0\n0.000000\n0.0\n6.923737\n0.000000\n0.000000\n9.901065\n5.969305\n0.000000\n...\n17.117674\n4.794537\n0.0\n6.923737\n0.0\n63.32\n12.011146\n4.794537\n0.000000\n0.000000\n0.000000\n6.923737\n0.0\n0.0\n0.000000\n10.840195\n0.000000\n9.574074\n7.865741\n4.835648\n-0.962963\n-0.731481\n0.000000\n1.418981\n0.000000\n0.666667\n3.0\n3.0\n0.0\n0.0\n0.0\n0.0\n2.0\n2.0\n3.0\n1.0\n0.0\n-0.5818\n1.0\n0.0\n0.0\n1.0\n0.0\n0.0\n1.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\nC\n9.756435\n0.189815\n-1.004630\n0.424382\n121.161\n-0.480064\n0.480064\n2.000000\n2.428571\n2.428571\n32.116867\n10.376545\n2.056705\n-1.960761\n1.795249\n-2.309520\n-0.137419\n1.645711\n3.343417\n75.335159\n3.664483\n4.558910\n3.180739\n2.406671\n1.127305\n1.492453\n0.513894\n0.907286\n0.078093\n0.234278\n-0.22\n27.977093\n6.78\n2.872925\n2.472042\n10.840195\n6.041841\n0.0\n0.00000\n5.969305\n4.794537\n0.0\n12.628789\n0.0\n0.000000\n5.752854\n0.000000\n9.901065\n18.598094\n0.000000\n...\n22.870527\n4.794537\n0.0\n0.000000\n0.0\n63.32\n12.011146\n4.794537\n5.752854\n0.000000\n0.000000\n0.000000\n0.0\n0.0\n12.628789\n10.840195\n3.649043\n9.756435\n8.008102\n4.939815\n-0.814815\n-0.816358\n0.000000\n0.000000\n0.000000\n0.666667\n3.0\n3.0\n0.0\n0.0\n0.0\n0.0\n3.0\n3.0\n4.0\n2.0\n0.0\n-0.6719\n1.0\n0.0\n0.0\n1.0\n0.0\n0.0\n1.0\n1.0\n0.0\n0.0\n0.0\n0.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nKac\n10.419084\n0.067099\n-0.972660\n0.499039\n188.227\n-0.480086\n0.480086\n1.461538\n2.076923\n2.538462\n16.367568\n10.120530\n2.091144\n-2.051830\n1.973906\n-2.297932\n-0.138286\n2.022803\n3.255326\n182.227953\n7.746838\n7.746838\n6.036581\n4.265665\n2.923476\n2.923476\n1.633048\n1.633048\n0.877145\n0.877145\n-1.10\n519.860388\n11.90\n6.419740\n7.266972\n16.156983\n6.041841\n0.0\n5.90718\n5.969305\n9.589074\n0.0\n0.000000\n0.0\n19.262465\n13.468494\n0.000000\n14.695602\n11.876485\n5.316789\n...\n29.569610\n9.589074\n0.0\n26.186202\n0.0\n92.42\n12.011146\n9.589074\n5.907180\n19.386400\n6.420822\n6.923737\n0.0\n0.0\n5.316789\n10.840195\n0.000000\n20.695587\n11.053315\n5.271623\n-1.039759\n-0.780252\n1.933755\n2.032398\n0.000000\n0.750000\n4.0\n5.0\n0.0\n0.0\n0.0\n0.0\n3.0\n3.0\n5.0\n6.0\n0.0\n-0.2953\n1.0\n0.0\n0.0\n2.0\n0.0\n1.0\n1.0\n0.0\n0.0\n0.0\n0.0\n2.0\n\n\nKme3\n10.361469\n0.578704\n-0.897918\n0.465620\n189.279\n-0.480086\n0.480086\n1.384615\n1.923077\n2.307692\n16.367548\n10.113915\n2.114811\n-2.232682\n2.021932\n-2.354302\n-0.870130\n1.951693\n3.414940\n163.487862\n8.785803\n8.785803\n5.827186\n4.615856\n4.454444\n4.454444\n1.911260\n1.911260\n1.073871\n1.073871\n-0.61\n396.193584\n12.39\n5.191317\n7.741185\n15.323226\n6.041841\n0.0\n0.00000\n5.969305\n4.794537\n0.0\n0.000000\n0.0\n19.262465\n0.000000\n27.687772\n14.384095\n5.969305\n0.000000\n...\n49.288477\n4.794537\n0.0\n19.262465\n0.0\n63.32\n12.011146\n4.794537\n0.000000\n6.420822\n23.869431\n0.000000\n0.0\n0.0\n21.143016\n10.840195\n0.000000\n10.361469\n8.512288\n5.361669\n-0.897918\n-0.687529\n2.502778\n1.061844\n6.366441\n0.888889\n3.0\n4.0\n0.0\n0.0\n0.0\n0.0\n2.0\n2.0\n4.0\n6.0\n0.0\n0.2748\n1.0\n0.0\n0.0\n1.0\n1.0\n0.0\n1.0\n0.0\n0.0\n0.0\n0.0\n1.0\n\n\n\n\n25 rows × 106 columns\n\n\n\n\nsource\n\n\nData.get_aa_morgan\n\n Data.get_aa_morgan ()\n\nGet Morgan fingerprint representations of amino acids.\n\nData.get_aa_morgan()\n\n\n\n\n\n\n\n\nmorgan_1\nmorgan_11\nmorgan_24\nmorgan_27\nmorgan_70\nmorgan_74\nmorgan_79\nmorgan_80\nmorgan_82\nmorgan_116\nmorgan_118\nmorgan_119\nmorgan_132\nmorgan_140\nmorgan_172\nmorgan_192\nmorgan_197\nmorgan_210\nmorgan_222\nmorgan_227\nmorgan_229\nmorgan_245\nmorgan_280\nmorgan_283\nmorgan_294\nmorgan_295\nmorgan_305\nmorgan_310\nmorgan_319\nmorgan_321\nmorgan_322\nmorgan_328\nmorgan_362\nmorgan_364\nmorgan_376\nmorgan_378\nmorgan_394\nmorgan_412\nmorgan_414\nmorgan_425\nmorgan_429\nmorgan_473\nmorgan_482\nmorgan_486\nmorgan_545\nmorgan_550\nmorgan_553\nmorgan_575\nmorgan_592\nmorgan_623\n...\nmorgan_1431\nmorgan_1451\nmorgan_1452\nmorgan_1456\nmorgan_1459\nmorgan_1507\nmorgan_1517\nmorgan_1544\nmorgan_1558\nmorgan_1564\nmorgan_1573\nmorgan_1595\nmorgan_1602\nmorgan_1607\nmorgan_1633\nmorgan_1644\nmorgan_1685\nmorgan_1693\nmorgan_1716\nmorgan_1719\nmorgan_1736\nmorgan_1737\nmorgan_1750\nmorgan_1751\nmorgan_1752\nmorgan_1754\nmorgan_1758\nmorgan_1773\nmorgan_1778\nmorgan_1783\nmorgan_1785\nmorgan_1791\nmorgan_1819\nmorgan_1838\nmorgan_1840\nmorgan_1844\nmorgan_1847\nmorgan_1849\nmorgan_1873\nmorgan_1876\nmorgan_1879\nmorgan_1882\nmorgan_1898\nmorgan_1911\nmorgan_1912\nmorgan_1926\nmorgan_1937\nmorgan_1942\nmorgan_1946\nmorgan_1970\n\n\naa\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nC\n1\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n1\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nKac\n1\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n1\n0\n1\n0\n1\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n\n\nKme3\n1\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n1\n1\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n1\n0\n1\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n\n\n\n\n25 rows × 168 columns\n\n\n\n\n\nPhosphoproteomics\n\nsource\n\n\nData.get_cptac_ensembl_site\n\n Data.get_cptac_ensembl_site ()\n\nGet CPTAC dataset with unique EnsemblProteinID+site.\n\nData.get_cptac_ensembl_site()\n\n\n\n\n\n\n\n\ngene\nsite\nsite_seq\nprotein\ngene_name\ngene_site\nprotein_site\n\n\n\n\n0\nENSG00000003056.8\nS267\nDDQLGEESEERDDHL\nENSP00000000412.3\nM6PR\nM6PR_S267\nENSP00000000412_S267\n\n\n1\nENSG00000003056.8\nS267\nDDQLGEESEERDDHL\nENSP00000440488.2\nM6PR\nM6PR_S267\nENSP00000440488_S267\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n488584\nENSG00000143631.11\nS648\nASRNHHGSAQEQSRD\nENSP00000357789.1\nFLG\nFLG_S648\nENSP00000357789_S648\n\n\n488585\nENSG00000143520.6\nS2310\nDTTRHGHSGYGQSTQ\nENSP00000373370.4\nFLG2\nFLG2_S2310\nENSP00000373370_S2310\n\n\n\n\n488586 rows × 7 columns\n\n\n\n\nsource\n\n\nData.get_cptac_unique_site\n\n Data.get_cptac_unique_site ()\n\nGet CPTAC dataset with unique site sequences.\n\nData.get_cptac_unique_site()\n\n\n\n\n\n\n\n\nsite_seq\ngene_site\nnum_site\nacceptor\n\n\n\n\n0\nAAAAAAASFPWSAFG\nZBTB7A_S182\n1\nS\n\n\n1\nAAAAAAASGAAGGGG\nINTS3_S16\n1\nS\n\n\n...\n...\n...\n...\n...\n\n\n125474\n______MYPAGPPAG\nTIGD5_Y2\n1\nY\n\n\n125475\n_______SPASLPLA\nRFLNB_S1\n1\nS\n\n\n\n\n125476 rows × 4 columns\n\n\n\n\nsource\n\n\nData.get_cptac_gene_site\n\n Data.get_cptac_gene_site ()\n\nGet CPTAC dataset with unique Gene+site.\n\nData.get_cptac_gene_site()\n\n\n\n\n\n\n\n\ngene\nsite\nsite_seq\nprotein\ngene_name\ngene_site\nprotein_site\n\n\n\n\n0\nENSG00000003056.8\nS267\nDDQLGEESEERDDHL\nENSP00000000412.3\nM6PR\nM6PR_S267\nENSP00000000412_S267\n\n\n1\nENSG00000048028.11\nS1053\nPPTIRPNSPYDLCSR\nENSP00000003302.4\nUSP28\nUSP28_S1053\nENSP00000003302_S1053\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n126223\nENSG00000143631.11\nS648\nASRNHHGSAQEQSRD\nENSP00000357789.1\nFLG\nFLG_S648\nENSP00000357789_S648\n\n\n126224\nENSG00000143520.6\nS2310\nDTTRHGHSGYGQSTQ\nENSP00000373370.4\nFLG2\nFLG2_S2310\nENSP00000373370_S2310\n\n\n\n\n126225 rows × 7 columns\n\n\n\n\nsource\n\n\nData.get_psp_human_site\n\n Data.get_psp_human_site ()\n\nGet PhosphoSitePlus human dataset (Gene+site).\n\nData.get_psp_human_site()\n\n\n\n\n\n\n\n\ngene\nprotein\nuniprot\nsite\ngene_site\nSITE_GRP_ID\nspecies\nsite_seq\nLT_LIT\nMS_LIT\nMS_CST\nCST_CAT#\nAmbiguous_Site\n\n\n\n\n0\nYWHAB\n14-3-3 beta\nP31946\nT2\nYWHAB_T2\n15718712\nhuman\n______MtMDksELV\nNaN\n3.0\n1.0\nNone\n0\n\n\n1\nYWHAB\n14-3-3 beta\nP31946\nS6\nYWHAB_S6\n15718709\nhuman\n__MtMDksELVQkAk\nNaN\n8.0\nNaN\nNone\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n240009\nZZZ3\nZZZ3\nQ8IYH5\nS677\nZZZ3_S677\n23077721\nhuman\nyPPEEVEsRRWQKIA\nNaN\nNaN\n1.0\nNone\n0\n\n\n240010\nZZZ3\nZZZ3\nQ8IYH5\nS777\nZZZ3_S777\n41455930\nhuman\nNTAVEDAsDDESIPI\nNaN\n2.0\nNaN\nNone\n0\n\n\n\n\n240011 rows × 13 columns\n\n\n\n\nsource\n\n\nData.get_ochoa_site\n\n Data.get_ochoa_site ()\n\nGet phosphoproteomics dataset from Ochoa et al.\n\nData.get_ochoa_site()\n\n\n\n\n\n\n\n\nuniprot\nposition\nresidue\nis_disopred\ndisopred_score\nlog10_hotspot_pval_min\nisHotspot\nuniprot_position\nfunctional_score\ncurrent_uniprot\nname\ngene\nSequence\nis_valid\nsite_seq\ngene_site\n\n\n\n\n0\nA0A075B6Q4\n24\nS\n1.0\n0.91\n6.839384\n1.0\nA0A075B6Q4_24\n0.149257\nA0A075B6Q4\nA0A075B6Q4_HUMAN\nNone\nMDIQKSENEDDSEWEDVDDEKGDSNDDYDSAGLLSDEDCMSVPGKT...\nTrue\nVDDEKGDSNDDYDSA\nA0A075B6Q4_S24\n\n\n1\nA0A075B6Q4\n35\nS\n1.0\n0.87\n9.192622\n0.0\nA0A075B6Q4_35\n0.136966\nA0A075B6Q4\nA0A075B6Q4_HUMAN\nNone\nMDIQKSENEDDSEWEDVDDEKGDSNDDYDSAGLLSDEDCMSVPGKT...\nTrue\nYDSAGLLSDEDCMSV\nA0A075B6Q4_S35\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n112279\nV9GYY5\n134\nT\n1.0\n0.83\n2.055830\n0.0\nV9GYY5_134\n0.187417\nV9GYY5\nV9GYY5_HUMAN\nNone\nKRDGDDRRPRLVLSFDEEKRREYLTGFHKRKVERKKAAIEEIKQRL...\nTrue\nSEEEASSTEKPTKAL\nV9GYY5_T134\n\n\n112280\nV9GYY5\n138\nT\n1.0\n0.82\n0.726611\n0.0\nV9GYY5_138\n0.121025\nV9GYY5\nV9GYY5_HUMAN\nNone\nKRDGDDRRPRLVLSFDEEKRREYLTGFHKRKVERKKAAIEEIKQRL...\nTrue\nASSTEKPTKALPRKS\nV9GYY5_T138\n\n\n\n\n112281 rows × 16 columns\n\n\n\n\nsource\n\n\nData.get_combine_site_psp_ochoa\n\n Data.get_combine_site_psp_ochoa ()\n\nGet the combined dataset from Ochoa and PhosphoSitePlus.\n\nData.get_combine_site_psp_ochoa()\n\n\n\n\n\n\n\n\nuniprot\ngene\nsite\nsite_seq\nsource\nAM_pathogenicity\nCDDM_upper\nCDDM_max_score\n\n\n\n\n0\nA0A024R4G9\nC19orf48\nS20\nITGSRLLSMVPGPAR\npsp\nNaN\nPRKX,AKT1,PKG1,P90RSK,HIPK4,AKT3,HIPK1,PKACB,H...\n2.407041\n\n\n1\nA0A075B6Q4\nNone\nS24\nVDDEKGDSNDDYDSA\nochoa\nNaN\nCK2A2,CK2A1,GRK7,GRK5,CK1G1,CK1A,IKKA,CK1G2,CA...\n2.295654\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n121417\nV9GYY5\nNone\nT134\nSEEEASSTEKPTKAL\nochoa\nNaN\nASK1,PERK,EEF2K,MAP2K4,MEKK2,MST1,BMPR1B,OSR1,...\n1.832532\n\n\n121418\nV9GYY5\nNone\nT138\nASSTEKPTKALPRKS\nochoa\nNaN\nASK1,MEK2,MPSK1,TNIK,PBK,MST2,MINK,NEK4,LKB1,MEK5\n1.807565\n\n\n\n\n121419 rows × 8 columns\n\n\n\n\nsource\n\n\nData.get_combine_site_phosphorylated\n\n Data.get_combine_site_phosphorylated ()\n\nGet the combined phosphorylated dataset from Ochoa and PhosphoSitePlus.\n\nData.get_combine_site_phosphorylated()\n\n\n\n\n\n\n\n\nuniprot\ngene\nsite\nsite_seq\nsource\nAM_pathogenicity\nCDDM\nPSPA\nCDDM_max_score\nPSPA_max_score\n\n\n\n\n0\nA0A024R4G9\nC19orf48\nS20\nITGSRLLsMVPGPAR\npsp\nNaN\nPRKX,PKG1,AKT1,AKT3,HIPK4,P90RSK,PKACB,PKACA,P...\nMAPKAPK5,AKT1,RSK3,P70S6K,MAPKAPK3,AKT2,DYRK1A...\n2.339278\n3.726109\n\n\n1\nA0A075B6Q4\nNone\nS24\nVDDEKGDsNDDYDSA\nochoa\nNaN\nCK2A2,CK2A1,GRK7,GRK5,CK1G1,IKKA,CAMK1D,MARK2,...\nCAMK2B,CK2A2,CAMK2A,CK2A1,GRK7,TLK2,FAM20C,CAM...\n2.253027\n4.940056\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n120102\nV9GYY5\nNone\nT134\nsEEEAsstEKPtKAL\nochoa\nNaN\nPERK,ASK1,EEF2K,MST1,BMPR1B,PBK,MEKK2,OSR1,MST...\nCK1G2,GSK3A,ALPHAK3,GRK1,GRK7,GSK3B,BMPR1B,BMP...\n1.723089\n7.009429\n\n\n120103\nV9GYY5\nNone\nT138\nAsstEKPtKALPRKS\nochoa\nNaN\nASK1,PBK,TNIK,MPSK1,MINK,MST2,NEK4,MEK2,MST1,BUB1\nCK1G3,CK1G2,CK1A2,CK1D,CK1A,GRK3,PASK,GRK2,CK1...\n1.651888\n4.350109\n\n\n\n\n120104 rows × 10 columns\n\n\n\n\n\n\nget_human_site\n\n get_human_site ()\n\nGet the combined phosphorylated dataset from Ochoa and PhosphoSitePlus (20-length version).\n\nData.get_human_site()\n\n\n\n\n\n\n\n\nsubstrate_uniprot\nsubstrate_genes\nsite\nsource\nAM_pathogenicity\nsubstrate_sequence\nsubstrate_species\nsub_site\nsubstrate_phosphoseq\nposition\nsite_seq\n\n\n\n\n0\nA0A024R4G9\nC19orf48 MGC13170 hCG_2008493\nS20\npsp\nNaN\nMTVLEAVLEIQAITGSRLLSMVPGPARPPGSCWDPTQCTRTWLLSH...\nHomo sapiens (Human)\nA0A024R4G9_S20\nMTVLEAVLEIQAITGSRLLsMVPGPARPPGSCWDPTQCTRTWLLSH...\n20\n_MTVLEAVLEIQAITGSRLLsMVPGPARPPGSCWDPTQCTR\n\n\n1\nA0A075B6Q4\nNone\nS24\nochoa\nNaN\nMDIQKSENEDDSEWEDVDDEKGDSNDDYDSAGLLSDEDCMSVPGKT...\nHomo sapiens (Human)\nA0A075B6Q4_S24\nMDIQKSENEDDSEWEDVDDEKGDsNDDYDSAGLLsDEDCMSVPGKT...\n24\nQKSENEDDSEWEDVDDEKGDsNDDYDSAGLLsDEDCMSVPG\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n121330\nV9GYY5\nNone\nT134\nochoa\nNaN\nKRDGDDRRPRLVLSFDEEKRREYLTGFHKRKVERKKAAIEEIKQRL...\nHomo sapiens (Human)\nV9GYY5_T134\nKRDGDDRRPRLVLSFDEEKRREYLTGFHKRKVERKKAAIEEIKQRL...\n134\nLGLtPPEGGAGDRsEEEAsstEKPtKALPRKSRDPLLSQRI\n\n\n121331\nV9GYY5\nNone\nT138\nochoa\nNaN\nKRDGDDRRPRLVLSFDEEKRREYLTGFHKRKVERKKAAIEEIKQRL...\nHomo sapiens (Human)\nV9GYY5_T138\nKRDGDDRRPRLVLSFDEEKRREYLTGFHKRKVERKKAAIEEIKQRL...\n138\nPPEGGAGDRsEEEAsstEKPtKALPRKSRDPLLSQRISSLT\n\n\n\n\n119955 rows × 11 columns\n\n\n\n\n\nReactome\n\n\n\nget_reactome_pathway_lo\n\n get_reactome_pathway_lo ()\n\nGet lowest reactome pathways with Uniprot ID as identifier.\n\nData.get_reactome_pathway_lo()\n\n\n\n\n\n\n\n\nuniprot\nreactome_id\npathway\ntype\nspecies\n\n\n\n\n0\nA0A023GPK8\nR-DME-373753\nNephrin family interactions\nIEA\nDrosophila melanogaster\n\n\n1\nA0A023GRW3\nR-DME-72163\nmRNA Splicing - Major Pathway\nIEA\nDrosophila melanogaster\n\n\n...\n...\n...\n...\n...\n...\n\n\n306903\nZ4YHD9\nR-BTA-9734091\nDrug-mediated inhibition of MET activation\nIEA\nBos taurus\n\n\n306904\nZ4YJC3\nR-GGA-983168\nAntigen processing: Ubiquitination & Proteasom...\nIEA\nGallus gallus\n\n\n\n\n306905 rows × 5 columns\n\n\n\n\n\n\nget_reactome_pathway\n\n get_reactome_pathway ()\n\nGet all level reactome pathways with Uniprot ID as identifier.\nThe data is from from Reactome/Download_data: https://reactome.org/download-data\nDownload UniProt to All pathways under Identifier mapping files\nFor type, there are IEA (Inferred from Electronic Annotation) and TAS (Traceable Author Statement, higher confidence)\n\nData.get_reactome_pathway()\n\n\n\n\n\n\n\n\nuniprot\nreactome_id\npathway\ntype\nspecies\n\n\n\n\n0\nA0A023GPK8\nR-DME-1500931\nCell-Cell communication\nIEA\nDrosophila melanogaster\n\n\n1\nA0A023GPK8\nR-DME-373753\nNephrin family interactions\nIEA\nDrosophila melanogaster\n\n\n...\n...\n...\n...\n...\n...\n\n\n888430\nZ4YJC3\nR-GGA-983168\nAntigen processing: Ubiquitination & Proteasom...\nIEA\nGallus gallus\n\n\n888431\nZ4YJC3\nR-GGA-983169\nClass I MHC mediated antigen processing & pres...\nIEA\nGallus gallus\n\n\n\n\n888432 rows × 5 columns",
    "crumbs": [
      "Modules",
      "Data"
    ]
  },
  {
    "objectID": "data.html#cptac",
    "href": "data.html#cptac",
    "title": "Data",
    "section": "CPTAC",
    "text": "CPTAC\n\nsource\n\nCPTAC\n\n CPTAC ()\n\nA class for fetching CPTAC phosphoproteomics data.\n\nsource\n\n\nCPTAC.list_cancer\n\n CPTAC.list_cancer ()\n\nList available CPTAC cancer type\n\nCPTAC.list_cancer()\n\n['HNSCC', 'GBM', 'COAD', 'CCRCC', 'LSCC', 'BRCA', 'UCEC', 'LUAD', 'PDAC', 'OV']\n\n\n\nsource\n\n\nCPTAC.get_id\n\n CPTAC.get_id (cancer_type:str, is_Tumor:bool=True, is_KB:bool=False)\n\nGet CPTAC phosphorylation sites information given a cancer type\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ncancer_type\nstr\n\n\n\n\nis_Tumor\nbool\nTrue\ntumor tissue or normal\n\n\nis_KB\nbool\nFalse\nwhether it is for LinkedOmicsKB or LinkedOmics\n\n\n\nUse CPTAC.get_id() to load CPTAC phosphorylation site information. Fold change of various conditions can be acquired through LinkedOmics or LinkedOmicsKB. Use is_KB to indicate whether the phosphorylation site information is for LinkedOmics or LinkedOmicsKB.\n# normal tissue\nCPTAC.get_id('CCRCC',is_KB=True, is_Tumor=False)\n# tumor\nCPTAC.get_id('CCRCC',is_KB=True, is_Tumor=True)",
    "crumbs": [
      "Modules",
      "Data"
    ]
  },
  {
    "objectID": "data.html#end",
    "href": "data.html#end",
    "title": "Data",
    "section": "End",
    "text": "End",
    "crumbs": [
      "Modules",
      "Data"
    ]
  }
]